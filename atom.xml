<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anything Virtual and Cloudy</title>
  
  <subtitle>Bright Spot in Cloud</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sajaldebnath.com/"/>
  <updated>2019-01-02T20:07:56.379Z</updated>
  <id>https://sajaldebnath.com/</id>
  
  <author>
    <name>Sajal Debnath</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Auto-Scaling Deep Dive</title>
    <link href="https://sajaldebnath.com/auto-scaling-deep-dive.html"/>
    <id>https://sajaldebnath.com/auto-scaling-deep-dive.html</id>
    <published>2018-12-27T00:35:05.000Z</published>
    <updated>2019-01-02T20:07:56.379Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I wrote a blog on <a href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html">Auto-Scaling</a> and got many questions regarding that topic. Also, after the release of vRealize Automation 7.3.1 onwards, the workflows stopped working. So, this post has the answer to all those questions and the updated package which will work with vRealize Automation versions upwards from 7.3. Though this post mainly covers the answers to the questions, it contains information about the subject as a whole and can be further categorized into the following sub topics:</p><a id="more"></a><ul><li>Definition</li><li>Why should we use it</li><li>Points to consider</li><li>Candidates</li><li>Methods</li><li>Lab example</li><li>Final words</li><li>Demo</li></ul><h4 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h4><p>Autoscaling, also spelled auto scaling or auto-scaling, and sometimes also called automatic scaling, is a method used in <a href="https://en.wikipedia.org/wiki/Cloud_computing" rel="external nofollow noopener noreferrer" target="_blank">cloud computing</a>, whereby the amount of computational resources in a server farm, typically measured in terms of the number of active servers, scales automatically based on the load on the farm. It is closely related to, and builds upon, the idea of <a href="https://en.wikipedia.org/wiki/Load_balancing_(computing" rel="external nofollow noopener noreferrer" target="_blank">load balancing</a>). <em>[Source: <a href="https://en.wikipedia.org/wiki/Autoscaling" rel="external nofollow noopener noreferrer" target="_blank">Wikipedia</a>]</em> </p><p>Auto-Scaling mainly introduced by Amazon in AWS Cloud services. So the terminologies and types are majorly influenced by AWS terminologies. Today this service is offered by all the other public cloud services (Azure, Google Cloud and others). Also, this service can be build easily in any private cloud environment or in any virtual environment.</p><p><em>In my opinion, Auto-Scaling is a feature and should not be tagged with any particular environment (cloud/virtualization or otherwise) . Same feature can be built easily in any private cloud/virtualized environment or even in purely physical environment as well (through monitoring and scripting).</em></p><h4 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h4><p>Autoscaling offers the following advantages:</p><ul><li>Scaling Out/In or Up/Down as needed, thus saving resources and energy (mostly in private datacenter environment)</li><li>In Cloud environment, this will result in lesser bill, as, the money charged is directly proportional to used resources</li><li>No need for upfront investment for future usage (e.g. Black Friday sale etc.) [specially n Cloud environment]</li><li>Easily replace crashed or unhealthy nodes which in turn ensures uptime and performance as per requirement.<h4 id="Points-to-consider"><a href="#Points-to-consider" class="headerlink" title="Points to consider"></a>Points to consider</h4></li></ul><p>Most of the times, I hear people say they want to implement “Auto-Scaling” without understanding the requirements. </p><p>There are two aspects of implementing Auto-Scaling. They are:</p><ul><li>Implementing at Infrastructure layer</li><li>Implementing at Application layer<br>For the entire feature to be successful, both of the above aspects needs to go hand in hand.</li></ul><p>Implementing Auto-Scaling in infra level is easy. But to be truly effective, the application for which it is designed needs to be aware of the environment. The requirements are provided below.</p><p><strong>Requirements</strong> </p><ul><li>Application must be auto-scale aware</li><li>Point one translates to application being clustered in nature (in case of scale out/in). Nodes should be added and removed without hampering application operation</li><li>Infrastructure should be easily scalable (agile in nature)</li><li>Proper triggering mechanism (monitoring and alerting)</li></ul><p>Provided below are the considerations required for the successful operation of the feature.</p><p><strong>Considerations</strong> </p><ul><li>Initial waiting period – when to start scaling</li><li>Gap between scaling</li><li>Stateless vs stateful applications<ul><li>Stateless applications (e.g. web servers with nothing stored locally)</li><li>Stateful applications (e.g. nodes processing payments)</li></ul></li><li>When to stop (upper limit)</li><li>When to scale down</li><li>Till which point to scale down</li><li>Triggers for scaling – few examples, CPU/Memory usage, Network traffic (number of hits), number of transactions etc.</li></ul><p><em>General observation, time for scaling up should be less than time taken for scaling down. Example, if for scaling out is triggered for 10 minutes of network load, then scaling in should be done after 30 minutes to 1 hour of less activity. Otherwise, too much scaling will happen resulting in unwanted situations.</em> </p><h4 id="Possible-Candidates"><a href="#Possible-Candidates" class="headerlink" title="Possible Candidates"></a>Possible Candidates</h4><p>Provided below is a list of possible candidates. Remember, this is not an absolute list.</p><ul><li>Stateless webservers (web server farm)</li><li>Stateful front end servers (while scaling down, special precautions need to be taken)</li><li>Mid-tier application servers or other applications which has cluster functionality and supports addition/removal of nodes at runtime</li><li>Database servers - scale-up, scale out in case of multiple nodes is supported or required.</li></ul><p><strong>Consideration:</strong> In most cases, webserver or application servers are the targeted use cases. Database servers or applications of similar kind are the least targeted or preferred candidates for this service. </p><p><strong><em>Finally, implementation is limited only by your imagination.</em></strong></p><h4 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h4><p>There are two well accepted methods among others. These are listed below:</p><ul><li>Pre-Deployment</li><li>Runtime Deployment</li></ul><p>Here, we will discuss only about the above two methods.</p><h5 id="Pre-Deployment-Method"><a href="#Pre-Deployment-Method" class="headerlink" title="Pre-Deployment Method"></a>Pre-Deployment Method</h5><p>In this method, all the required nodes are pre-deployed and are kept in standby mode (powered off or suspended). Under correct situations they are either powered on or brought into the cluster. Generally the following steps are performed.</p><ul><li>Deploy the pre-decided maximum number of nodes and either keep them in powered off mode or standby mode</li><li>Nodes can be pre-configured to be part of the cluster (cluster nodes) or can be added at runtime</li><li>Power On/Off the nodes as and when required as per the triggering condition</li></ul><p>Provided below is a list of advantages and disadvantages of this method.</p><p><strong>Advantages:</strong></p><ul><li>Less reaction time</li><li>Does not require resource intensive operations (storage IO or runtime deployment)</li></ul><p><strong>Dis-advantages:</strong> </p><ul><li>Does not give maximum saving (storage is still consumed)</li></ul><h5 id="Runtime-Deployment-Method"><a href="#Runtime-Deployment-Method" class="headerlink" title="Runtime Deployment Method"></a>Runtime Deployment Method</h5><p>In this method, the nodes are deployed at runtime as and when required. Generally the following steps are performed for this method.</p><ul><li>Nodes are deployed or removed at runtime</li><li>As the nodes are deployed, they become part of the cluster or removed from from it  (node addition/removal)</li></ul><p><strong>Advantages:</strong> </p><ul><li>Maximum resource saving</li><li>Maximum monetary saving</li></ul><p><strong>Disadvantages:</strong>  </p><ul><li>Large reaction time (lot of runtime time hogging operations, such as node deployment, addition to or removal from cluster etc.)</li><li>Resource intensive operations. If large load comes then multiple nodes are deployed in quick succession, leading to excessive IO operations. Can lead to unwanted situations. </li></ul><p><em><em>Based on the requirement choose carefully between these two methods. I believe this is a balance between performance and saving. If the application is time sensitive, then choose the pre-deployment method. Otherwise if monetary or resource saving is the main consideration, then choose the second method.</em></em> </p><h4 id="Lab-Example"><a href="#Lab-Example" class="headerlink" title="Lab Example"></a>Lab Example</h4><p>As demonstrated in my earlier post, here I will provide an example from my lab. For this, I used the following VMware products.</p><ul><li>vRealize Automation (version 7.5)</li><li>vRealize Operations Manager (version 7.0)</li><li>vRealize Orchestrator (version 7.5)</li><li>vCenter server (version 6.5 U1)</li><li>Webhook Shims</li></ul><p>Provided below is a picture which shows logical lab setup.</p><p><img src="/images/Auto-Scaling-Deep-Dive/Auto-Scale setup.png" alt="Auto-Scale Setup" class="responsive"></p><p><strong>How it works</strong></p><p>In my lab, the VM’s are deployed through vRealize Automation (vRA). vCenter server is used as endpoint. Total environment is  monitored by vRealize Operations Manager (vROps). vROps is also used for alert notifications. The alerts are sent to vRealize Orchestrator (vRO) which in turn runs a workflow. Through this workflow we initiate appropriate action (Scale Out or In) in vRA.</p><p><em>Note: For this demonstration we are utilizing Out of the Box feature of vRA. vRA provides action items Scale Out and In per depolyment. So, this makes our task easier.</em></p><p>Another point to note, vROps can send notifications to vRO using three methods, SNMP trap, REST notifications and using vRO plugin. Merit and de-merit for all are provided below:</p><p><strong>SNMP Traps</strong> </p><p><em>Merits</em> </p><ul><li>Does not require extra resources configuration</li><li>Simpler to setup</li></ul><p><em>De-merits</em> </p><ul><li>Irrespective of the nature, all the traps are sent over to vRO</li><li>vRO needs to constantly listen for the right trap. This puts extra pressure on vRO</li><li>Not a very clean way of handling the traps</li></ul><p><strong>REST Notification</strong> </p><p><em>Merits</em> </p><ul><li>Much cleaner way of handling the alerts</li><li>Alert specific workflow can be initiated from vRO</li><li>vRO does not need to listen for alerts/traps. The workflow runs only when an alert is triggered.</li></ul><p><em>De-Merits</em> </p><ul><li>Needs extra resource and configuration</li><li>Right now, the dependent technologies are not tested for scale in production</li></ul><p><strong>vRO Plugin</strong> </p><p><em>Merits</em> </p><ul><li>No extra overhead at vRO</li><li>Fully supported from VMware</li><li>Easier processing of alerts than SNMP traps</li><li>Workflows are fired as per alert, so no extra overhead at vRO</li></ul><p><em>De-Merits</em> </p><ul><li>Lenghtier setup than SNMP traps</li><li>For some, the configuration may seem complex</li></ul><p>For my lab, I have chosen to demonstrate REST Notification and vRO Plugin. If you need details on how to setup and use SNMP traps, then check my <a href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html">earlier post</a>. </p><p>One point to note, REST notification sends data in JSON format. The format in which vROps sends data is not understood by vRO. vRO expects data in another format. So, to solve this, we need Webhook Shims in between. Webhook Shims works as translator for vRO. This is the extra configuration needed for REST notification. In my opinion, result is worth the extra effort. Provided below is a picture on how Webhook Shims work in the entire scenario.</p><p><img src="/images/Auto-Scaling-Deep-Dive/Webhook Shims.png" alt="Webhook Shims" class="responsive"></p><p>Also, for this demonstration I am selecting only CPU as the triggering mechanism. For a more detailed demonstration with load balancers (NSX) and HTTP hits as triggering mechanism, please check my <a href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html">earlier post</a>.</p><p><strong>Special mention</strong> </p><p>I am impressed with vRO plugin method of alert triggering. Perhaps the most useful till now. For future references I am going to depend more and more on this method.</p><p>Please check up the video for a detailed description on how to configure and set this up. I have spent some time in detailing this process.</p><p>For background read please check the blogs from John Dias </p><ul><li><a href="https://blogs.vmware.com/management/2018/04/introducing-vrealize-orchestrator-management-pack-vrealize-operations.html" rel="external nofollow noopener noreferrer" target="_blank">First Blog - Introduction</a> </li><li><a href="https://blogs.vmware.com/management/2018/10/put-your-operations-in-overdrive-technical-overview-of-the-vrealize-operations-management-pack-for-vrealize-orchestrator-2-0.html" rel="external nofollow noopener noreferrer" target="_blank">Second Blog - Details</a> </li></ul><p>For detailed information, check the <a href="https://marketplace.vmware.com/vsx/solutions/management-pack-for-vrealize-orchestrator#resources" rel="external nofollow noopener noreferrer" target="_blank">documentation</a> .</p><h4 id="Videos"><a href="#Videos" class="headerlink" title="Videos"></a>Videos</h4><p>For more details, check the following video.</p><p><em>I tried to record the video 4 times and somehow all four times it crashed my system. This is reason I am so late in publishing the blog. Finally, I have divided the recording in two parts. The first part has the theoretical aspect explained. The second part has the demo in my lab. So, depending on what you are looking for, you can watch the videos accordingly.</em> </p><p><strong>Auto Scale - Part 1 - Details</strong> </p><div class="video-container"><iframe src="//www.youtube.com/embed/CbgikoPEbcg" frameborder="0" allowfullscreen></iframe></div><p><strong>Auto Scale - Part 2 - Demo</strong> </p><div class="video-container"><iframe src="//www.youtube.com/embed/9rJGRN6IulE" frameborder="0" allowfullscreen></iframe></div><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement"></a>Acknowledgement</h4><p>I am thankful to VMware for the softwares in the lab and the presentation template used in the presentation. The quality of the ppt template is unparalleled and I like the simplicity. I am also thankful to <strong>Ron Tsai</strong> for sharing the updated workflows.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p>This is a very useful feature. Specially in the virtualization and cloud computing age. Though the examples I gave are using VMware technologies, you can build this solution using any other tools. Please check the solution and let me know your feedbacks. As always, thanks for your time and patience.</p>]]></content>
    
    <summary type="html">
    
      Purpose
I wrote a blog on Auto-Scaling and got many questions regarding that topic. Also, after the release of vRealize Automation 7.3.1 onwards, the workflows stopped working. So, this post has the answer to all those questions and the updated package which will work with vRealize Automation versions upwards from 7.3. Though this post mainly cover
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Automation/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Operations/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Orchestrator/"/>
    
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/tags/vRealize-Automation/"/>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/tags/vRealize-Operations/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/tags/vRealize-Orchestrator/"/>
    
  </entry>
  
  <entry>
    <title>Journey from Wordpress to Hexo and Clarity</title>
    <link href="https://sajaldebnath.com/journey-from-wordpress-to-hexo-and-clarity.html"/>
    <id>https://sajaldebnath.com/journey-from-wordpress-to-hexo-and-clarity.html</id>
    <published>2018-09-03T00:11:12.000Z</published>
    <updated>2018-09-24T08:09:48.742Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I recently moved my blog from Wordpress to Hexo. Also, I moved hosting platform from Siteground to S3 (AWS). This blog post details the rationale behind the decisions. It also describes how I learnt to build a Hexo theme using VMware Clarity environment. So overall this captures the following topics:</p><ul><li>My journey from Wordpress to Hexo</li><li>From hosted environment to static self hosting </li><li>And finally building my own theme in hexo</li><li>Also I will cover some portion to make the blog SEO optimized</li></ul><p>If you are interested in the above topics, then read on.</p><h5 id="Why-S3-and-Static-site"><a href="#Why-S3-and-Static-site" class="headerlink" title="Why S3 and Static site?"></a>Why S3 and Static site?</h5><p>My site was built on Wordpress and hosted on Siteground. Siteground provides very good services. I never had issues with Siteground. Also, Wordpress is a very good platform, well tested. Very easy to use and widely supported. So why did I decide to move away from both the platforms? The main reasons are given below:</p><ul><li>Performance</li><li>Convenience</li><li>Financial</li></ul><p>Let me explain the reasons one by one.</p><ul><li><p><strong>Performance:</strong><br>I noticed that instead of my best efforts (making my site minimal and applying a ton of optimizations) it was still not fast enough. The response time was sometimes in &gt; 10 seconds range. At best, I got around 5 seconds response time in <a href="https://tools.pingdom.com/" rel="external nofollow noopener noreferrer" target="_blank">Pingdom test</a>. Got similar results in <a href="https://gtmetrix.com/" rel="external nofollow noopener noreferrer" target="_blank">GTmetrix</a> and <a href="https://developers.google.com/speed/pagespeed/insights/" rel="external nofollow noopener noreferrer" target="_blank">Pagespeed</a> test.</p></li><li><p><strong>Convenience:</strong><br>In Wordpress, I was forced to use the themes developed by others. I wanted to use a minimal theme with no extra options. But was always limited by the themes. Also, I could not apply or use best practices for SEO optimizations all the time.</p></li><li><p><strong>Financial:</strong><br>My contract renewal with Siteground was coming up. Their renewal charge was USD 239.40 for a year. This was a substantial amount for me. </p></li></ul><p><strong>Choosing the platform</strong></p><p>The first decision was to choose a platform which will be faster and will provide me absolute control over every aspect.<br>Since my site is pretty static in nature (once I write a blog, I do not change it) I decided to go for static websites. Static websites are amazingly fast as they do not need to build and deliver at runtime.</p><p>So, I decided to go for static website. Next question was to select a static website generator. You can check this site for available options for static site generators <a href="https://www.staticgen.com/" rel="external nofollow noopener noreferrer" target="_blank">staticgen.com</a>. The following were the main contenders. </p><table><thead><tr><th>Generator</th><th>Language</th><th>Template</th></tr></thead><tbody><tr><td>Jekyll</td><td>Ruby</td><td>Liquid</td></tr><tr><td>Next</td><td>Javascript</td><td>Javascript(React)</td></tr><tr><td>Hugo</td><td>Go</td><td>Go</td></tr><tr><td>Gatsby</td><td>Javascript</td><td>React</td></tr><tr><td>Hext</td><td>Javascript</td><td>EJS, Pug</td></tr></tbody></table><p>I chose Hexo because of the following reasons:</p><ul><li>I am most comfortable with Javascript as I have experience in that. </li><li>Generating a site in Hexo is pretty fast (much faster than Jekyll)</li><li>Lot of available plugins</li><li>I found EJS for templating to be easier than React</li></ul><p><strong>Hosting the Website</strong></p><p>So, platform and generator was selected. Next big question was to decide where to host the website. Since Siteground was charging a premium, I was not ready to shell out that amount.</p>]]></content>
    
    <summary type="html">
    
      Purpose
I recently moved my blog from Wordpress to Hexo. Also, I moved hosting platform from Siteground to S3 (AWS). This blog post details the rationale behind the decisions. It also describes how I learnt to build a Hexo theme using VMware Clarity environment. So overall this captures the following topics:

 * My journey from Wordpress to Hexo
 *
    
    </summary>
    
      <category term="General" scheme="https://sajaldebnath.com/categories/General/"/>
    
    
      <category term="General" scheme="https://sajaldebnath.com/tags/General/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Weblogic-as-a-Service for vRealize Automation</title>
    <link href="https://sajaldebnath.com/oracle-weblogic-as-a-service-for-vrealize-automation.html"/>
    <id>https://sajaldebnath.com/oracle-weblogic-as-a-service-for-vrealize-automation.html</id>
    <published>2018-02-16T07:36:34.000Z</published>
    <updated>2018-07-27T23:36:05.903Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Recently I got a request to build a Weblogic-as-a-Service in vRealize Automation for a customer. This post provides details of that custom built Out-of-the-Box Oracle Weblogic-as-a-Service in vRealize Automation.</p><a id="more"></a><h4 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement:"></a><strong>Requirement:</strong></h4><p>The requirement is to deploy a Weblogic Cluster as a whole. Also, user should be able to choose any number of nodes in the cluster at runtime. For example, it may be anything within the range 1 to 20, etc.</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a><strong>Solution:</strong></h4><p>VMware vRealize Automation, vCenter Server and vRealize Orchestrator was used to build the overall solution. Red Hat Linux 7.2 was selected as the base operating system for the Weblogic platform. Provided below are the details of the technologies used:</p><ul><li>VMware vRealize Automation 7.2 (It should work with other versions as well)</li><li>VMware vCenter Server 6.0 U3 (Should work with other versions as well)</li><li>VMware vRealize Orchestrator 7.2 (7.x versions should work)</li><li>RHEL 7.2</li><li>Java 1.8.0_151</li><li>Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</li><li>Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode</li><li>Oracle WebLogic Server 12.2.1.3 (Generic)</li></ul><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>Provided below are the pre-requisites for the solution. There are multiple stages of the solution.</p><ol><li>A properly installed and configured vRealize Automation should be available</li><li>Proper licenses should be available in vRealize Automation</li><li>Build out the Template for the solution</li></ol><p>Provided below are the steps for building out the Template to be used for the solution. </p><p><strong>Step-1: Create a VM and install RHEL 7.2 in it. The VM configuration is as given below:</strong></p><ul><li>16GB RAM</li><li>8 GB Swap</li><li>4 vCPUs</li><li>/weblogic - 50 GB</li><li>/weblogs - 50 GB</li></ul><p>Also, make sure to run the following commands to install required packages in the base image:</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> gcc*yum <span class="token function">install</span> compat-libcap*yum <span class="token function">install</span> compat-libstdc*yum <span class="token function">install</span> libaio*</code></pre><p><strong>Step-2: Prepare the RHEL 7.2 VM Template:</strong></p><ul><li>Install Java on Template VM with below version:<ul><li>java version “1.8.0_151”</li><li>Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</li><li>Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</li></ul></li><li>Set <strong>JAVA_HOME</strong> in environment variable.</li><li>Download latest Weblogic generic download files from (<a href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html" rel="external nofollow noopener noreferrer" target="_blank">http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html</a>)</li><li>Install sshpass on RHEL 7.2 template</li></ul><p><strong>Step-3: WebLogic-Common-Environment-Creation</strong> </p><p>Run the following commands to build the common environment for Weblogic.</p><pre class=" language-bash"><code class="language-bash">/usr/sbin/groupadd -g 666 wladmin/usr/sbin/useradd -u 666 -g wladmin -G wladmin wladmin/usr/bin/echo -e <span class="token string">"<span class="token variable">$Pass1</span>\\n<span class="token variable">$Pass1</span>"</span> <span class="token operator">|</span> <span class="token punctuation">(</span>/usr/bin/passwd --stdin wladmin<span class="token punctuation">)</span>/usr/bin/mkdir -p /WebLogic/oracle/inventory/usr/bin/chown -R wladmin:wladmin /WebLogic/usr/bin/chmod -R 775 /WebLogic/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p /WebLogic/oracle/middleware"</span>/usr/bin/java -version/usr/bin/touch /etc/oraInst.loc/usr/bin/echo <span class="token string">"inventory_loc=/WebLogic/oracle/inventory"</span> <span class="token operator">></span> /etc/oraInst.loc/usr/bin/echo <span class="token string">"inst_group=wladmin"</span> <span class="token operator">>></span> /etc/oraInst.loc/usr/bin/chown wladmin:wladmin /etc/oraInst.loc/usr/bin/chmod 775 /etc/oraInst.loc</code></pre><p><strong>Step-4: WebLogic-Response-File-Creation</strong> </p><p>Run the following commands to create the response file  </p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">></span> /WebLogic/oracle/Install.rsp <span class="token operator">&lt;&lt;</span> <span class="token string">EOF[ENGINE]#DO NOT CHANGE THIS.Response File Version=1.0.0.0.0[GENERIC]#The oracle home location. This can be an existing Oracle Home or a new Oracle HomeORACLE_HOME=/WebLogic/oracle/middleware#Set this variable value to the Installation Type selected. e.g. Fusion Middleware Infrastructure, Fusion Middleware Infrastructure With Examples.INSTALL_TYPE=WebLogic Server#Provide the My Oracle Support Username. If you wish to ignore Oracle Configuration Manager configuration provide empty string for user name.MYORACLESUPPORT_USERNAME=#Provide the My Oracle Support PasswordMYORACLESUPPORT_PASSWORD=&lt;secure value="">#Set this to true if you wish to decline the security updates. Setting this to true and providing empty string for My Oracle Support username will ignore the Oracle Configuration Manager configurationDECLINE_SECURITY_UPDATES=true#Set this to true if My Oracle Support Password is specifiedSECURITY_UPDATES_VIA_MYORACLESUPPORT=false#Provide the Proxy HostPROXY_HOST=#Provide the Proxy PortPROXY_PORT=#Provide the Proxy UsernamePROXY_USER=#Provide the Proxy PasswordPROXY_PWD=&lt;secure value="">#Type String (URL format) Indicates the OCM Repeater URL which should be of the format [scheme[Http/Https]]:/[repeater host]:[repeater port]COLLECTOR_SUPPORTHUB_URL=EOF</span><span class="token operator">&lt;</span>/secure<span class="token operator">></span><span class="token operator">&lt;</span>/secure<span class="token operator">></span></code></pre><pre class=" language-bash"><code class="language-bash">/usr/bin/echo <span class="token string">"Created the response file"</span>/usr/bin/chown wladmin:wladmin /WebLogic/oracle/Install.rsp</code></pre><p><strong>Step-5:  WebLogic-Installation-Prerequisite</strong>  </p><pre class=" language-bash"><code class="language-bash">/usr/bin/ls -ltr /WebLogic/oracle/middleware<span class="token function">export</span> WL_HOME<span class="token operator">=</span>/WebLogic/oracle/middleware/wlserver/usr/bin/cp  /root/fmw\_12.2.1.3.0\_wls.jar /home/wladmin//usr/bin/chown wladmin:wladmin  /home/wladmin/fmw\_12.2.1.3.0\_wls.jar/usr/bin/su  - wladmin -c <span class="token string">"java -jar /home/wladmin/fmw\_12.2.1.3.0\_wls.jar -silent -invPtrLoc/etc/oraInst.loc -responseFile /WebLogic/oracle/Install.rsp -logfile /WebLogic/oracle/wlsInstall.log"</span>/usr/bin/ls -ltr /WebLogic/oracle/middleware</code></pre><p><strong>Step-6:  Disable Firewall or open firewall ports</strong> We need to either disable the firewall or open ports in the firewall. For this example, we will disable the firewall in the template.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> firewalld stopsystemctl disable firewalld</code></pre><p>Once the Template is ready, export and use it in vRealize Automation.</p><h4 id="Blueprint-Creation"><a href="#Blueprint-Creation" class="headerlink" title="Blueprint Creation"></a>Blueprint Creation</h4><p>Using the above template create a Blueprint in vRealize Automation (as per your requirement). A sample screenshot is provided below: </p><p><img src="/images/2018/02/Blueprint-1.jpg" alt="Blueprint 1" class="responsive"></p><p>Blueprint 1</p><p>Save the blueprint and follow the process to expose it as a Catalog Item in vRealize Automation. </p><p><strong> Please note, while giving entitlement, please provide </strong>“Scale Out (Deployment)”** as an Action Item on the items. </p><p><strong>Import the vRO Package:</strong> Download the vRO package from <a href="https://github.com/sajaldebnath/Weblogic-as-a-Service" rel="external nofollow noopener noreferrer" target="_blank">GitHub Repository</a>. Next, import the vRO package <strong>“com.vmware.library.weblogic-as-a-service.package”</strong> in vRealize Orchestrator server.</p><h4 id="Build-the-Catalog-Item"><a href="#Build-the-Catalog-Item" class="headerlink" title="Build the Catalog Item"></a>Build the Catalog Item</h4><p>Next, build a XaaS catalog item in vRealize Automation. Login to vRA with a user with proper rights to create a XaaS Blueprint. Go to Design à XaaS à XaaS Blueprints. Click on New, in the new window, select “Weblogic-as-a-Service” workflow under the Weblogic-as-a-Service Folder in vRO workflow list. Press next and select all the default values. </p><p><img src="/images/2018/02/Blueprint-2.jpg" alt="Image1" class="responsive"></p><h4 id="Setting-up-Values-in-vRO"><a href="#Setting-up-Values-in-vRO" class="headerlink" title="Setting up Values in vRO"></a>Setting up Values in vRO</h4><p>We need to set up the following values in <strong>“Weblogic-as-a-Service”</strong> in vRO. </p><p><img src="/images/2018/02/Value-List.png" alt="Image2" class="responsive"></p><p>Provided below are few screenshots as an example. </p><p><img src="/images/2018/02/vRO-Package-Values-1.jpg" alt="Image3" class="responsive"></p><p><img src="/images/2018/02/vRO-Package-Values-2.jpg" alt="Image4" class="responsive"></p><p><img src="/images/2018/02/vRO-Package-Values-3.jpg" alt="Image5" class="responsive"></p><p><img src="/images/2018/02/vRO-Package-Values-4.jpg" alt="Image6" class="responsive"></p><h4 id="Requesting-the-Item"><a href="#Requesting-the-Item" class="headerlink" title="Requesting the Item"></a>Requesting the Item</h4><p>Login to the vRealize Automation portal with proper rights. Select the exported Catalog Item and Click on “Request”. </p><p><img src="/images/2018/02/Request-1-1.jpg" alt="Image7" class="responsive"></p><p>In the next page provide the following details:</p><ul><li>Enter the number of Cluster Nodes:</li><li>Enter the Weblogic User Name:</li><li>Enter the Weblogic User Password:</li></ul><p><img src="/images/2018/02/Request-2-1.jpg" alt="Image8" class="responsive"></p><p>Once the request is submitted, it will initiate tasks in vRO which in turn will initiate the following serial tasks in vRA.</p><ul><li>Deploying an instance of the Weblogic Catalog Item</li><li>Scale out the Deployment from above step as per the number of cluster nodes.</li><li>Once both the above tasks as finished, rest of the Weblogic installation and configuration will be done in vRO</li></ul><p>Once all the above is complete, the original Catalog Item request of “Weblogic-as-a-Service” will complete and marked as “Successful”. A typical successful workflow run in vRO looks like following: </p><p><img src="/images/2018/02/vRO-workflow-run-1.jpg" alt="Image 9" class="responsive"></p><h4 id="Testing-the-Deployment"><a href="#Testing-the-Deployment" class="headerlink" title="Testing the Deployment"></a>Testing the Deployment</h4><p>Once the Request is successful, identify the Admin node with the lowest denominator. For example, if you had chosen a 4-node cluster and the nodes are named as weblogic-1, weblogic-2, weblogic-3 and weblogic-4 then weblogic-1 is the Admin node. Remember, the node with lowest number is always the Admin node as it is deployed first. </p><p><img src="/images/2018/02/Admin-Node-1.jpg" alt="Image 10" class="responsive"></p><p>Note, the IP of the Admin Node. SSH to the admin node and run the following commands:</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># cd /WebLogic/oracle/middleware/user_projects/domains/base_domain/bin</span><span class="token comment" spellcheck="true"># nohup ./startNodeManager.sh &amp;</span><span class="token comment" spellcheck="true"># nohup ./startWebLogic.sh &amp;</span><span class="token comment" spellcheck="true"># ./startManagedWebLogic.sh MS-01 http://&lt;ip of="" admin="" node="">:7001</span><span class="token operator">&lt;</span>/ip<span class="token operator">></span></code></pre><p>Note, the last command. MS-01 is the admin node, provide the IP address of Admin node in the URL. After the above open the following URL in a browser: <strong>http://<ip of="" admin="" node="">:7001/console</ip></strong> This will open the Weblogic Console. Login with Weblogic admin user id and password provided at setup time. In my case, the user was <strong>“weblogic”</strong>. </p><p><img src="/images/2018/02/Weblogic-Page-1.jpg" alt="Image 11" class="responsive"></p><p><img src="/images/2018/02/Weblogic-Page-2.jpg" alt="Image 12" class="responsive"></p><h4 id="Workflow-Explanation"><a href="#Workflow-Explanation" class="headerlink" title="Workflow Explanation"></a>Workflow Explanation</h4><p>The vRO workflow is divided into multiple parts.</p><ul><li>The first part deploys the required number of VM’s in vRA and collects the relevant information about them (IPADDRESS, Hostname etc.)</li><li>The Second part runs the scripts inside the Guest Operating system of the nodes to install and configure Weblogic Cluster in the nodes.</li></ul><p><strong>In the next section, we will elaborate each one of them.</strong> </p><p><img src="/images/2018/02/Main-Workflow-First-part.jpg" alt="Image 13" class="responsive"></p><ul><li>First part of the script requests the deployment in vRA. This first VM is considered the Admin node.</li></ul><p><img src="/images/2018/02/Workflow-1.png" alt="Image 14" class="responsive"></p><ul><li>In the next part, depending on the number of nodes, if a single node cluster is selected, then a Single Node Cluster configuration is set.</li></ul><p><img src="/images/2018/02/Workflow-2.png" alt="Image 15" class="responsive"></p><p><strong>The script related to single Node Cluster is provided below:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadTemplate('/WebLogic/oracle/middleware/wlserver/common/templates/wls/wls.jar')cd('Servers/AdminServer')cmo.setListenAddress("<span class="token variable">$HostName01</span>.lab.local")setOption('ServerStartMode','prod')set('ListenPort', 7001)create('AdminServer','SSL')cd('SSL/AdminServer')set('Enabled', 'True')set('ListenPort', 7002)cd('/')cd('Security/base_domain/User/weblogic')cmo.setPassword('<span class="token variable">$weblogicpass</span>')setOption('ServerStartMode','prod')setOption('OverwriteDomain', 'true')writeDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')closeTemplate()exit()EOF</span>/usr/bin/echo <span class="token string">"Domain Configured on <span class="token variable">$HostName01</span>.lab.local"</span>/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')cd('/')create('MS-01', 'Server')cd ('Servers')cd ('MS-01')set('ListenPort', 7004)set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')create('basecluster', 'Cluster')assign('Server', 'MS-01','Cluster','basecluster')cd('Cluster/basecluster')set('ClusterMessagingMode', 'unicast')set('WeblogicPluginEnabled', 'true')cd('/')create('Machine01', 'Machine')assign('Server', 'MS-01','Machine','Machine01')cd('Machines/' + 'Machine01/')create('Machine01', 'NodeManager')cd('NodeManager/' + 'Machine01')set('NMType', 'Plain')set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')set('DebugEnabled', 'false')updateDomain()closeDomain()disconnect()exit()EOF</span><span class="token function">export</span> DOMAIN\_HOME<span class="token operator">=</span>/WebLogic/oracle/middleware/user\_projects/domains/base_domain<span class="token function">export</span> WL_HOME<span class="token operator">=</span>/WebLogic/oracle/middleware/wlserver/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security"</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/cat > /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security/boot.properties"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFusername=<span class="token variable">$weblogicuser</span>password=<span class="token variable">$weblogicpass</span>EOF</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/sed -i -e 's/SecureListener=true/SecureListener=false/g' /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/nodemanager/nodemanager.properties"</span>/usr/bin/su - wladmin -c <span class="token string">"nohup /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/bin/startNodeManager.sh &amp;"</span>/usr/bin/su - wladmin -c <span class="token string">"nohup /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/bin/startWebLogic.sh &amp;"</span>/usr/bin/su - wladmin -c <span class="token string">"nohup /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/bin/startManagedWebLogic.sh MS-01"</span></code></pre><ul><li>In the next section we scale out the deployment to match the number of required nodes</li></ul><p><img src="/images/2018/02/Workflow-3.png" alt="Image 16" class="responsive"></p><ul><li>Next, we collect the required information regarding the Managed Nodes</li></ul><p><img src="/images/2018/02/Workflow-4.png" alt="Image 17" class="responsive"></p><ul><li>Next, we prepare the Admin Node for initial settings</li></ul><p><img src="/images/2018/02/Workflow-5.jpg" alt="Image 18" class="responsive"></p><p><strong>Provided below is the script for Admin Node Setup:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadTemplate('/WebLogic/oracle/middleware/wlserver/common/templates/wls/wls.jar')cd('Servers/AdminServer')cmo.setListenAddress("<span class="token variable">$HostName01</span>.lab.local")setOption('ServerStartMode','prod')set('ListenPort', 7001)create('AdminServer','SSL')cd('SSL/AdminServer')set('Enabled', 'True')set('ListenPort', 7002)cd('/')cd('Security/base_domain/User/weblogic')cmo.setPassword('<span class="token variable">$weblogicpass</span>')setOption('ServerStartMode','prod')setOption('OverwriteDomain', 'true')writeDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')closeTemplate()exit()EOF</span>/usr/bin/echo <span class="token string">"Domain Configured on <span class="token variable">$HostName01</span>.lab.local"</span>/usr/bin/touch /tmp/answers.txt/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')cd('/')create('MS-01', 'Server')cd('Servers')cd('MS-01')set('ListenPort', 7004)set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')EOF</span></code></pre><p><strong>Next comes the second major part of the Workflow. In this section, we configure the managed nodes.</strong> </p><p><img src="/images/2018/02/Workflow-6.png" alt="Image 19" class="responsive"></p><p>In this portion, we are dynamically building an answers.txt file which will have all the inputs for the Weblogic Cluster. This file is dynamic as the number of nodes vary and so does the IPADDRESS and Hostname. Let’s break up and elaborate the parts one by one. </p><p><img src="/images/2018/02/Workflow-6-3.png" alt="Image 20" class="responsive"></p><p><strong>The script used in answersBuild1 is provided below:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFcd('/')create('MS-REPLACE', 'Server')cd('Servers')cd('MS-REPLACE')set('ListenPort', 7004)set('ListenAddress', '<span class="token variable">$HostNameReplace</span>.lab.local')EOF</span></code></pre><ul><li>Next part has the answersbuild2 script.</li></ul><p><img src="/images/2018/02/Workflow-6-2.png" alt="Image 21" class="responsive"></p><p><strong>The script of answersbuild2:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFcd('/')create('basecluster', 'Cluster')assign('Server', 'WEBLOGICSERVERNODES','Cluster','basecluster')cd('Cluster/basecluster')set('ClusterMessagingMode', 'unicast')set('WeblogicPluginEnabled', 'true')cd('/')create('Machine01', 'Machine')assign('Server', 'MS-01','Machine','Machine01')cd('Machines/' + 'Machine01/')create('Machine01', 'NodeManager')cd('NodeManager/' + 'Machine01')set('NMType', 'Plain')set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')set('DebugEnabled', 'false')EOF</span></code></pre>*   Next is answersBuild3 script:<img src="/images/2018/02/Workflow-6-3.png" alt="Image 22" class="responsive">**The script for answersBuild3:**<pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFcd('/')create('MachineREPLACE', 'Machine')assign('Server', 'MS-REPLACE','Machine','Machine02')cd('Machines/' + 'MachineREPLACE/')create('MachineREPLACE', 'NodeManager')cd('NodeManager/' + 'MachineREPLACE')set('NMType', 'Plain')set('ListenAddress', '<span class="token variable">$HostName02</span>.lab.local')set('DebugEnabled', 'false')EOF</span></code></pre><ul><li>Next is answersBuild4. At this stage our answers.txt file is ready. Now we can simply read this file for the inputs to Weblogic Cluster setup.</li></ul><p><img src="/images/2018/02/Workflow-6-4.png" alt="Image 23" class="responsive"></p><p><strong>The script for answersBuild4:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFupdateDomain()closeDomain()disconnect()exit()EOF</span><span class="token function">cat</span> /tmp/answers.txt/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh &lt; /tmp/answers.txt"</span>/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle\_common/common/bin/pack.sh -managed=true -domain=/WebLogic/oracle/middleware/user\_projects/domains/base\_domain -template=/WebLogic/oracle/middleware/user\_projects/domains/base\_domain-wlsTemplate.jar -template\_name=base_domain"</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security"</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/cat > /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security/boot.properties"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFusername=<span class="token variable">$weblogicuser</span>password=<span class="token variable">$weblogicpass</span>EOF</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/sed -i -e 's/SecureListener=true/SecureListener=false/g' /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/nodemanager/nodemanager.properties"</span></code></pre><ul><li>Next, we copy the generated template.jar file to each of the managed nodes</li></ul><p><img src="/images/2018/02/Workflow-6-5.png" alt="Image 24" class="responsive"></p><p><strong>Script for packFileBuildAdminNode:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/su - wladmin -c <span class="token string">"sshpass -p '<span class="token variable">$wladminpass</span>' scp -o StrictHostKeyChecking=no  /WebLogic/oracle/middleware/user\_projects/domains/base\_domain-wlsTemplate.jar  wladmin@<span class="token variable">$HostNameIPAdd</span>:/WebLogic/"</span>/usr/bin/echo <span class="token string">"<span class="token variable">$HostNameIPAdd</span>  <span class="token variable">$HostName02</span>.lab.local <span class="token variable">$HostName02</span>"</span> <span class="token operator">>></span> /etc/hosts</code></pre><ul><li>At the last stage, we login to each of the managed nodes and unpack the template.jar file in each one of them.</li></ul><p><img src="/images/2018/02/Workflow-6-6.png" alt="Image 24" class="responsive"></p><p><strong>Script for unpackManagedNode:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/echo <span class="token string">"<span class="token variable">$HostName1IPAdd</span>  <span class="token variable">$HostName1</span>.lab.local <span class="token variable">$HostName1</span>"</span> <span class="token operator">>></span> /etc/hosts/usr/bin/echo <span class="token string">"<span class="token variable">$AdminIPAdd</span>  <span class="token variable">$Admin</span>.lab.local <span class="token variable">$Admin</span>"</span> <span class="token operator">>></span> /etc/hosts/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p  /WebLogic/oracle/middleware/user\_projects/domains/base\_domain"</span>/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle\_common/common/bin/unpack.sh -domain=/WebLogic/oracle/middleware/user\_projects/domains/base\_domain -template=/WebLogic/base\_domain-wlsTemplate.jar"</span></code></pre><h4 id="Yet-to-Do"><a href="#Yet-to-Do" class="headerlink" title="Yet to Do:"></a>Yet to Do:</h4><p>Currently, the package cannot do the following:</p><ul><li>Once the VM’s are deployed in vRA and later configuring the Weblogic packages if the workflows fail, the VM’s remain in vRA. The VM’s are not cleared.</li><li>As a future option, I plan to add an action item which will let the end user add a number of nodes at a later point in time</li></ul><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>Using the process described in the post you can create Oracle Weblogic-as-a-Service in vRealize Automation environment. As always do let me know if this was helpful to you.</p>]]></content>
    
    <summary type="html">
    
      Purpose
Recently I got a request to build a Weblogic-as-a-Service in vRealize Automation for a customer. This post provides details of that custom built Out-of-the-Box Oracle Weblogic-as-a-Service in vRealize Automation.

Requirement:
The requirement is to deploy a Weblogic Cluster as a whole. Also, user should be able to choose any number of nodes
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Automation/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Orchestrator/"/>
    
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/tags/vRealize-Automation/"/>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/tags/vRealize-Orchestrator/"/>
    
  </entry>
  
  <entry>
    <title>VMworld report from the field</title>
    <link href="https://sajaldebnath.com/vmworld-report-from-the-field.html"/>
    <id>https://sajaldebnath.com/vmworld-report-from-the-field.html</id>
    <published>2017-08-30T11:34:16.000Z</published>
    <updated>2018-07-26T23:06:16.258Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I am attending this year’s VMworld US and decided to write my experience so far. Read on to know what’s new with VMware and other technologies.</p><a id="more"></a><h4 id="Details"><a href="#Details" class="headerlink" title="Details:"></a>Details:</h4><p>First, this is an amazing experience. If you are someone working with VMware technologies, then at least once you need to be in a VMworld. It’s amazing to see so many people in a single place talking about the same technology. The energy is infectious and you get that sense of belonging. This year VMworld is not an exception. So without further ado let me start about my experience so far.</p><h4 id="Day-1-keynote"><a href="#Day-1-keynote" class="headerlink" title="Day 1 keynote:"></a>Day 1 keynote:</h4><p>It is the keynote which is most important part to watch out for. It is where you get to understand where the company is heading forward to. Pat did not disappoint in giving his views on future of technology. As per him “tech is leaving the nest of tech and is now woven into the future of our fabric”. Andy Jassy of AWS joined Pat in the keynote to announce the initial availability of VMware on AWS solution. He also announced few new offerings.</p><ul><li>VMware Cloud Services</li><li>VMware Appdefense</li><li>New version of VMware integrated OpenStack and vRealize Network Insight</li></ul><h4 id="Day-2-General-Session"><a href="#Day-2-General-Session" class="headerlink" title="Day 2 General Session:"></a>Day 2 General Session:</h4><p>Day 2 started with an amazing general session. It started with a fireside chat between Pat Gelsinger and Michael Dell. Later they were joined on stage by Rob Mee of Pivotal and Sam Ramjee of Google. They talked about Pivotal Cloud Foundry/Services and “Kubo”. Full support for Kubernetes cluster. Automation for Kubernetes. Amazing to see container as the first class citizen. Also, now containers have full support out of the box for storage and network. NSX provides out of the box network support for containers. Next came the most exciting part, demo, I was very impressed with the demo presented by Purnima Padmanavan and Chris Wolf of VMware. The way the entire story was built is amazing. The showcased capabilities blew the mind. VMware Cloud Services (a series of features on Cloud - SaaS model) is something I am looking forward to. Now VMware has IaaS, PaaS, CaaS (container as a service) and FaaS services. The most exciting for me though was VMware FaaS services (Function as a Service). Something similar to what you get in AWS Lambda. But the important point is, you get the same functionality in an on-prem environment. Do you have vSphere environment? Sure, we run FaaS there. How cool is that? Did you know that vRealize Network Insight not only monitors your network environment but also profiles your applications? It can tell you which applications are a good fit for migration to Cloud and which are probably not.  It understands the dependencies from the network flow and provide suggestions.</p><h4 id="Solution-Exchange"><a href="#Solution-Exchange" class="headerlink" title="Solution Exchange:"></a>Solution Exchange:</h4><p>Like every year, this year also a range of partners have setup booth in Solution Exchange showcasing the amazing range of technologies. The major focus can be seen in the following areas:</p><ul><li>Infrastructure as a Service</li><li>Monitoring. Which again can be divided into the following groups<ul><li>Datacenter monitoring</li><li>Network monitoring</li><li>Cloud based monitoring</li><li>On-prem monitoring</li></ul></li><li>Software defined Storage</li><li>Software defined Network</li><li>Security. Both cloud based and on-prem</li></ul><p>VMvillage is something to look forward to. VMTN community has a good presence. Felt good to meet Corey Romero in person. Tim, amazing job with VMware{code}.</p><h4 id="Other-points"><a href="#Other-points" class="headerlink" title="Other points:"></a>Other points:</h4><p>No VMworld is complete without Hands-on-Labs. Awesome work. You need to be there to get the feel. The scale and time in which they built that are unbelievable. Certification site, Partner Exchange, Education booth all are amazing. This time VMware has a special zone for VMware solutions. Exciting to see the IoT and other solutions from VMware. As VMware employee, I did not have access to schedule builder. It is for customer and partners after all. But if there is a place I can always walk up to and attend. Due to my engagements and customer workshops, I could not attend any. But I will get and go through the sessions later as they become available.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>I feel honored and humbled to be in a VMworld. Being in the presence of so many amazing people humbles you. Also, you get the amazing opportunity to network with great minds. This is the place where you get to meet the people of whom we read. We learn from their blogs. Now we can directly meet them. I am looking forward to next two days.</p>]]></content>
    
    <summary type="html">
    
      Purpose
I am attending this year’s VMworld US and decided to write my experience so far. Read on to know what’s new with VMware and other technologies.

Details:
First, this is an amazing experience. If you are someone working with VMware technologies, then at least once you need to be in a VMworld. It’s amazing to see so many people in a single pl
    
    </summary>
    
      <category term="General" scheme="https://sajaldebnath.com/categories/General/"/>
    
    
      <category term="General" scheme="https://sajaldebnath.com/tags/General/"/>
    
  </entry>
  
  <entry>
    <title>How to manually edit vRealize Automation vPostgres database</title>
    <link href="https://sajaldebnath.com/how-to-manually-edit-vrealize-automation-vpostgres-database.html"/>
    <id>https://sajaldebnath.com/how-to-manually-edit-vrealize-automation-vpostgres-database.html</id>
    <published>2017-08-23T09:01:28.000Z</published>
    <updated>2018-07-27T22:45:19.298Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Did you ever have the need to manually edit the vRealize Automation vPostgres database? This post covers exactly that topic. It provides detailed steps on how you can access the database and modify it. So without further ado start reading the post.</p><a id="more"></a><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>There are times when we are forced to modify the inbuilt database of vRA server.  Whereas very little documentation is available around it. This is for a good reason though. Modifying the database manually is very dangerous. It can render the entire environment useless. So <span style="color:red"><strong>DO NOT do it</strong></span> or at least avoid doing it. Unless you are hundred percent sure of what you are doing. I will consider you are warned enough. So, now I will go ahead and explain exactly how you can do it.</p><h4 id="Steps-to-modify-vRealize-Automation-vPostgres-Database"><a href="#Steps-to-modify-vRealize-Automation-vPostgres-Database" class="headerlink" title="Steps to modify vRealize Automation vPostgres Database:"></a>Steps to modify vRealize Automation vPostgres Database:</h4><p>Follow the below steps in sequence to modify the database. Before I explain the procedure, let me explain the use case first. I had the following problem: </p><p><strong>Issue:</strong> I had one custom resource type item (SQL:Database) in vRA. I had mistakenly deleted the original database from DB. Also, removed the Database entry from vCO SQL Databases list. So, now the item existed only in vRA DB. </p><p><strong>Action Taken</strong>: I created a Remove Database custom resource action in vRA and applied it on the item. It did not help. So the only option left was to manually remove the entry from vPostgres database. If you are stuck in a similar situation. Then this will be helpful for you. The logical steps are:</p><ul><li>First, enable access to vPostgres database</li><li>Then find out the password of the postgres user</li><li>Connect to the database and complete the tasks</li></ul><p>In my case, I wanted to connect to the database remotely from another machine. Use pgAdmin as a GUI tool and do the task from there. In your case, you may want to just log into the database locally and edit the database from SQL prompt. I chose GUI tool as I wanted to visually explore the database.</p><h4 id="Enabling-access-to-vPostgres-Database"><a href="#Enabling-access-to-vPostgres-Database" class="headerlink" title="Enabling access to vPostgres Database:"></a>Enabling access to vPostgres Database:</h4><p>First, log into the vRA appliance or SSH to it using root account. Next edit <strong>pg_hba.conf</strong> file</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /storage/db/pgdata/pg_hba.conf</code></pre><p>Check for the presence of the line</p><pre class=" language-bash"><code class="language-bash">local      all              postgres                            trust</code></pre><p>What this enables, is using the local machine you can use vcac user to login to the database. Since I wanted to access it remotely, I added the following line:</p><pre class=" language-bash"><code class="language-bash">host       all              all         10.110.23.148/24               trust</code></pre><p>The above line allows any user from the machine 10.110.23.148 to connect to the database. In the next step, edit the postgresql.conf file.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /storage/db/pgdata/postgresql.conf</code></pre><p>In that file add the following line</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#listen_addresses = 'localhost'         # what IP address(es) to listen on;</span>listen_addresses <span class="token operator">=</span> <span class="token string">'*'</span></code></pre><p>What I am doing here, is listening to everything. The above steps will let me connect to the database from my machine at 10.110.23.148.</p><h4 id="Get-the-vcac-user-password"><a href="#Get-the-vcac-user-password" class="headerlink" title="Get the vcac user password:"></a>Get the vcac user password:</h4><p>In the next stage, we need to get the password for the vcac user. Detailed steps for doing so is provided in this <a href="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2144071" rel="external nofollow noopener noreferrer" target="_blank">VMware KB article</a>. Run the following command</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> /etc/vcac/server.xml <span class="token operator">|</span><span class="token function">grep</span> password<span class="token operator">=</span><span class="token string">"*"</span></code></pre><p>You get an output similar to: </p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>resource abandonwhenpercentagefull<span class="token operator">=</span><span class="token string">"0"</span> auth<span class="token operator">=</span><span class="token string">"Container"</span> driverclassname<span class="token operator">=</span><span class="token string">"org.postgresql.Driver"</span> factory<span class="token operator">=</span><span class="token string">"com.vmware.vcac.tools.tomcat.db.CafeEncryptedDataSourceFactory"</span> fairqueue<span class="token operator">=</span><span class="token string">"false"</span> initialsize<span class="token operator">=</span><span class="token string">"10"</span> jdbcinterceptors<span class="token operator">=</span><span class="token string">"ResetAbandonedTimer"</span> jmxenabled<span class="token operator">=</span><span class="token string">"true"</span> logabandoned<span class="token operator">=</span><span class="token string">"true"</span> logvalidationerrors<span class="token operator">=</span><span class="token string">"true"</span> maxactive<span class="token operator">=</span><span class="token string">"100"</span> maxidle<span class="token operator">=</span><span class="token string">"20"</span> maxwait<span class="token operator">=</span><span class="token string">"120000"</span> minevictableidletimemillis<span class="token operator">=</span><span class="token string">"60000"</span> minidle<span class="token operator">=</span><span class="token string">"10"</span> name<span class="token operator">=</span><span class="token string">"jdbc/cafe"</span> **password<span class="token operator">=</span><span class="token string">"s2enc~646fCCJWPaSYJe91XKBpkrc1E+3N83n7ZIF3a+PGEaI="</span> **<span class="token operator">=</span><span class="token string">""</span> removeabandoned<span class="token operator">=</span><span class="token string">"true"</span> removeabandonedonborrow<span class="token operator">=</span><span class="token string">"true"</span> removeabandonedonmaintenance<span class="token operator">=</span><span class="token string">"true"</span> removeabandonedtimeout<span class="token operator">=</span><span class="token string">"240"</span> suspecttimeout<span class="token operator">=</span><span class="token string">"60"</span> testonborrow<span class="token operator">=</span><span class="token string">"true"</span> testonreturn<span class="token operator">=</span><span class="token string">"false"</span> testwhileidle<span class="token operator">=</span><span class="token string">"true"</span> timebetweenevictionrunsmillis<span class="token operator">=</span><span class="token string">"30000"</span> type<span class="token operator">=</span><span class="token string">"javax.sql.DataSource"</span> url<span class="token operator">=</span><span class="token string">"jdbc:postgresql://127.0.0.1:5433/vcac"</span> username<span class="token operator">=</span><span class="token string">"vcac"</span> validationinterval<span class="token operator">=</span><span class="token string">"30000"</span> validationquery<span class="token operator">=</span><span class="token string">"select 1"</span> validationquerytimeout<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span> <span class="token operator">&lt;</span>/resource<span class="token operator">></span></code></pre><p>Note the encrypted value after the password field. In this case the value is  <strong>“s2enc~646fCCJWPaSYJe91XKBpkrc1E+3N83n7ZIF3a+PGEaI=”.</strong>  In the next step we will find the actual password.</p><pre class=" language-bash"><code class="language-bash">/usr/lib/vcac/tools/config/bin/vcac-config prop-util -d --p s2enc~646fCCJWPaSYJe91XKBpkrc1E+3N83n7ZIF3a+PGEaI<span class="token operator">=</span> <span class="token operator">|</span> <span class="token function">less</span></code></pre><p>This will give you the password.</p><h4 id="Connecting-to-vPostgres-using-pgAdmin"><a href="#Connecting-to-vPostgres-using-pgAdmin" class="headerlink" title="Connecting to vPostgres using pgAdmin:"></a>Connecting to vPostgres using pgAdmin:</h4><p>Now all that is left is to connect to the database using the user id and password. Create a new connection to the vPostgres database and connect to it. Post connection it looks like the following: </p><p><img src="/images/2017/08/vPostgres-added-346x188.png" alt="Image 1" class="responsive"></p><p>Note the expanded view on the left. Next, we will explore the tables: </p><p><img src="/images/2017/08/Exploring-Views-1.png" alt="Image 2" class="responsive"></p><h4 id="Modifying-the-Database"><a href="#Modifying-the-Database" class="headerlink" title="Modifying the Database:"></a>Modifying the Database:</h4><p>Note the vRA items screen. It shows the information. </p><p><img src="/images/2017/08/With-Items.png" alt="Image 3" class="responsive"></p><p>Since I have resources which are custom resources. So the table I am interested in is <strong>asd_resource</strong>. This will have a list of items for custom resource. Now one of deleting is object by object. We need to follow this if say we have 10 items and we want to delete one or two of them.</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> asd_resource <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'sajalpgdb'</span><span class="token punctuation">;</span></code></pre><p>It will show the information with the resource id as well. Note the id. Try to delete the item by running the following command:</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">from</span> asd_resource  <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'sajalpgdb'</span><span class="token punctuation">;</span></code></pre><p>In all probability, it is going to fail showing a list of other tables where the item exists with the same name. For example, the table containing information about requests has reference to this. For this reason, the entry can not be deleted. So, you need to delete those references first and then, at last, delete the reference from this table. For example, provided below a list of possible places:</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> cat_resource <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'sajalpgdb'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> cat\_resource\_owners  <span class="token keyword">WHERE</span> resource_id <span class="token operator">=</span> <span class="token string">'c7ae9023-da0c-4960-b279-ae4dea6d0e8d'</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">from</span> cat\_resource\_owners  <span class="token keyword">WHERE</span> resource_id <span class="token operator">=</span> <span class="token string">'c7ae9023-da0c-4960-b279-ae4dea6d0e8d'</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">from</span> cat\_request <span class="token keyword">WHERE</span> resource\_id <span class="token operator">=</span> <span class="token string">'c7ae9023-da0c-4960-b279-ae4dea6d0e8d'</span><span class="token punctuation">;</span></code></pre><p>Likewise, it will go one, until the time we clear last of them. Since I have a lab environment which does not have much information. So I used another command which is very helpful:</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">TRUNCATE</span> asd_resource <span class="token keyword">CASCADE</span><span class="token punctuation">;</span><span class="token keyword">TRUNCATE</span> cat_resource  <span class="token keyword">CASCADE</span><span class="token punctuation">;</span></code></pre><p>What this does (TRUNCATE), it will clear the table from all information. Also, it will clear all the other references to these data (CASCADE). </p><p><img src="/images/2017/08/Truncate-1.png" alt="Image 4" class="responsive"></p><p><img src="/images/2017/08/Truncate-2.png" alt="Image 5" class="responsive"></p><p>Post the operation my vRA items list is blank: </p><p><img src="/images/2017/08/Clean-Items.png" alt="Image 6" class="responsive"></p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This is an easy and quick hack to tweak the inbuilt database. But please remember, <span style="color:red"><strong>this is destructive and strictly forbidden</strong></span>. Take responsibility and then perform these operations. Only do these as last resort and at that time also let VMware Support team do the work. Only do yourself if you are 200% sure of what you are doing. Hope after all that warning you still found this to be useful :).</p>]]></content>
    
    <summary type="html">
    
      Purpose
Did you ever have the need to manually edit the vRealize Automation vPostgres database? This post covers exactly that topic. It provides detailed steps on how you can access the database and modify it. So without further ado start reading the post.

Introduction:
There are times when we are forced to modify the inbuilt database of vRA serve
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Automation/"/>
    
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/tags/vRealize-Automation/"/>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
  </entry>
  
  <entry>
    <title>OOTB Shared DB as a Service complete with Day 2 Operations</title>
    <link href="https://sajaldebnath.com/ootb-shared-db-as-a-service-complete-with-day-2-operations.html"/>
    <id>https://sajaldebnath.com/ootb-shared-db-as-a-service-complete-with-day-2-operations.html</id>
    <published>2017-08-21T08:02:41.000Z</published>
    <updated>2018-07-27T22:46:16.251Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>The [first part of the post]<a href="/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html" title="Out-of-the-box shared DB-as-a-Service in vRealize Automation">Out-of-the-box shared DB-as-a-Service in vRealize Automation</a> dealt with “Out of the box Shared DB as a Service”. In addition to other points, where I explained about Shared DB as a Service using a vRO package. Limitation of that package is, it only creates the DB in real Database. Created databases do not appear in vRA items list.<br><a id="more"></a><br>Also any Day 2 operation is not possible on the created Databases. While this post provides a complete package which adds the created databases as items in vRA. In addition, supports all Day 2 operations. Also now the package provides actions for out of the box Day 2 operations. This post details about that package.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>I received a lot of good feedback on the first version of the package. Also, I received many requests for making it fully functional. In its current form, it is very basic. Only creating shared databases in the database server actually achieves not much. So, I decided to take it further and give a complete feature set. Making it ideal for proof of concept environments. The functionalities are all there. The only point is, it is not fully tested for all the gotchas. So feel free to update the original workflows and packages.</p><h4 id="How-Shared-DB-as-a-Service-package-works"><a href="#How-Shared-DB-as-a-Service-package-works" class="headerlink" title="How Shared DB as a Service package works:"></a>How Shared DB as a Service package works:</h4><p>Like the [original package]<a href="/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html" title="Out-of-the-box shared DB-as-a-Service in vRealize Automation">Out-of-the-box shared DB-as-a-Service in vRealize Automation</a> , this time also all the workflows are available as a single package with the name <strong>“com.vmware.db-as-a-service-v3.package”</strong>. Please follow thebelow mentioned steps to import and run the workflows.</p><ul><li>Login to vRO client and go to Admin mode</li><li>Import the package in the Package manager</li><li>Once imported, go to Design mode.</li><li>You can find a new folder with the name “Database-as-a-Service”. Expand it and you can find the workflow “Setup Database-as-a-Service Environment”</li><li>Run this workflow and this will setup the entire environment</li></ul><p>Folder structure: </p><p><img src="/images/2017/08/Folder-Structure.png" alt="Shared DB as a Service folder structure" class="responsive"></p><h4 id="Important-Information"><a href="#Important-Information" class="headerlink" title="Important Information:"></a>Important Information:</h4><p>Before you can run the workflows please check the important information provided below:</p><ul><li>In the vRO server you need to add vRA CAFE and IaaS server as an endpoint.</li><li>vCenter server where the Database VM’s live, needs to be added as an endpoint in vRO. All these are mentioned in the video.</li><li>After the workflow run, log into vRA portal, go to <strong>Design –&gt; XaaS –&gt; Resource Actions –&gt; Select “Delete a Database”</strong>. Edit this action. In the second page select “Destroy”.</li><li>There was a knows issue with MySQL connector for vRO in vRA 7.2. I found the same issue in vRA 7.3 as well. Please check this <a href="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2148277" rel="external nofollow noopener noreferrer" target="_blank">VMware KB Article</a> to solve the issue.</li></ul><h4 id="Known-limitations"><a href="#Known-limitations" class="headerlink" title="Known limitations:"></a>Known limitations:</h4><p>The following limitation is there in the current form.</p><ul><li>While creating the databases, the workflow does not check whether the user already exists or not. It only checks for the Database existence</li><li>If a user already exists, then the database creation will fail</li><li>While deleting the database, the user is also deleted</li><li>MySQL database name does not support ‘-‘ in the name</li></ul><p>The above happens because of the assumption that a single user will create a single database. Clearly, this is a limitation. To remove this limitation, I need to update the Database creation scripts. At this stage, my primary focus is to give the functionalities. Anyone requiring more flexibility, please update the core scripts for database creations. In the video, I have covered how you can change the scripts.</p><h4 id="Database-creation-scripts"><a href="#Database-creation-scripts" class="headerlink" title="Database creation scripts:"></a>Database creation scripts:</h4><p>I am no authority on these databases. I created and configured the databases the quickest and easiest way. These do not conform the best practices :). These are applicable to a PoC environment only. Provided below are the steps for setting up the database environment.</p><h4 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL:"></a><strong>PostgreSQL:</strong></h4><p>I used CentOS 7.3 as base OS. Install steps:</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> postgresql*systemctl start postgresql.servicesystemctl status postgresql.servicesystemctl <span class="token function">enable</span> postgresql.service/usr/bin/postgresql-setup initdb<span class="token function">vi</span> /var/lib/pgsql/data/pg_hba.conf</code></pre><p>In the <strong>pg_hba.conf</strong> file check for the below lines and make changes as per your requirement</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># "local" is for Unix domain socket connections only</span>local   all             all                                     trust<span class="token comment" spellcheck="true"># IPv4 local connections:</span>host    all             all             127.0.0.1/32            identhost    all             all             0.0.0.0/0         trust</code></pre><p>Note, I gave all permission to everyone in the local machine. Also, I trusted everyone from everyone. Next, modify postgresql.conf file.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /var/lib/pgsql/data/postgresql.conf</code></pre><p>And made the following change</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#listen_addresses = 'localhost'         # what IP address(es) to listen on;</span>listen_addresses <span class="token operator">=</span> <span class="token string">'*'</span></code></pre><p>Finally ran the following:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> postgresql restartsystemctl disable firewalldsystemctl stop firewalldsystemctl status firewalld</code></pre><p><strong>Creating the Database:</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> -u postgres psql -c <span class="token string">"CREATE USER usr WITH PASSWORD 'passwd'"</span><span class="token function">su</span> - postgres -c <span class="token string">"createdb testdb -O usr"</span></code></pre><p>Used pgAdmin version 4 as the front-end management component for managing PostgreSQL databases.</p><h4 id="MySQL-DB"><a href="#MySQL-DB" class="headerlink" title="MySQL DB:"></a>MySQL DB:</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpmrpm -ivh mysql57-community-release-el7-9.noarch.rpmyum <span class="token function">install</span> mysql-serversystemctl start mysqldsystemctl status mysqldsystemctl <span class="token function">enable</span> mysqld<span class="token function">grep</span> <span class="token string">'temporary password'</span> /var/log/mysqld.logmysql\_secure\_installationmysqladmin -u root -p version</code></pre><p>Edited my.cnf file with</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/my.cnf</code></pre><p>And commented out the bind-address</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#bind-address   = 127.0.0.1</span></code></pre><p>I also enabled password less login for root user. So that while running the scripts, it will not ask for the password:</p><pre class=" language-bash"><code class="language-bash">mysql_config_editor <span class="token keyword">set</span> --login-path<span class="token operator">=</span>client --host<span class="token operator">=</span>localhost --user<span class="token operator">=</span>root –password</code></pre><p>I used HeidiSQL 9.4.0.5125 as the front-end management component for managing MySQL databases. Creating the Database:</p><pre class=" language-bash"><code class="language-bash">mysql -u root -e <span class="token string">"CREATE DATABASE IF NOT EXISTS testdb;"</span>mysql -u root -e <span class="token string">"CREATE USER 'usr'@'%' IDENTIFIED BY 'passwd';"</span>mysql -u root -e <span class="token string">"GRANT ALL PRIVILEGES ON testdb.* TO 'usr'@'%';"</span>mysql -u root -e "FLUSH PRIVILEGES<span class="token punctuation">;</span></code></pre><h4 id="MSSQL-DB"><a href="#MSSQL-DB" class="headerlink" title="MSSQL DB:"></a>MSSQL DB:</h4><p>Creating the Database:</p><pre class=" language-powershell"><code class="language-powershell"><span class="token namespace">[reflection.assembly]</span>::LoadWithPartialName<span class="token punctuation">(</span><span class="token string">"Microsoft.SqlServer.Smo"</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> <span class="token function">Out-Null</span><span class="token variable">$currenthost</span> = hostname<span class="token variable">$defaultInstance</span> = <span class="token string">"notdefault"</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$defaultInstance</span> <span class="token operator">-eq</span> <span class="token string">"yes"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>"</span><span class="token punctuation">}</span><span class="token keyword">Else</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>\\SHAREDINS"</span><span class="token punctuation">}</span><span class="token variable">$server</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SQLServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Server <span class="token variable">$ServerName</span><span class="token variable">$dbExists</span> = <span class="token boolean">$FALSE</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$individual_db</span> in <span class="token variable">$server</span><span class="token punctuation">.</span>databases<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$individual_db</span><span class="token punctuation">.</span>name <span class="token operator">-eq</span> <span class="token string">"testdb"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Database already exists."</span>    <span class="token variable">$dbExists</span> = <span class="token boolean">$TRUE</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$dbExists</span> <span class="token operator">-eq</span> <span class="token boolean">$FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$login</span> = <span class="token function">New-Object</span> Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Login <span class="token operator">-</span>ArgumentList <span class="token variable">$ServerName</span><span class="token punctuation">,</span> <span class="token string">"usr"</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>LoginType = <span class="token string">'SqlLogin'</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>PasswordPolicyEnforced = <span class="token boolean">$false</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>PasswordExpirationEnabled = <span class="token boolean">$false</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>Create<span class="token punctuation">(</span><span class="token string">'passwd'</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Login usr created"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Can not create Login usr"</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$database</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Database <span class="token operator">-</span>argumentlist <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token string">"testdb"</span>    <span class="token variable">$database</span><span class="token punctuation">.</span>Create<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Database testdb created"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Database testdb cannot be created"</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$user</span> = <span class="token string">"usr"</span>    <span class="token variable">$db_user</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>User <span class="token operator">-</span>argumentlist <span class="token variable">$database</span><span class="token punctuation">,</span> <span class="token variable">$user</span>    <span class="token variable">$db_user</span><span class="token punctuation">.</span>Login = <span class="token variable">$user</span>    <span class="token variable">$db_user</span><span class="token punctuation">.</span>Create<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Database user usr created"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Database user usr cannot be created"</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$server</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SQLServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Server <span class="token variable">$ServerName</span>    <span class="token variable">$data</span> = <span class="token function">New-Object</span> Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Database    <span class="token variable">$data</span> = <span class="token variable">$server</span><span class="token punctuation">.</span>Databases<span class="token punctuation">.</span>Item<span class="token punctuation">(</span><span class="token string">'testdb'</span><span class="token punctuation">)</span>    <span class="token variable">$data</span><span class="token punctuation">.</span>SetOwner<span class="token punctuation">(</span><span class="token string">'usr'</span><span class="token punctuation">,</span> <span class="token boolean">$TRUE</span><span class="token punctuation">)</span>    <span class="token variable">$data</span><span class="token punctuation">.</span>Alter<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Database owner changed to usr"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Cannot set database ownership to usr"</span>    <span class="token variable">$database</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token variable">$db_user</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="Database-deletion-scripts"><a href="#Database-deletion-scripts" class="headerlink" title="Database deletion scripts:"></a>Database deletion scripts:</h4><p>I used the following scripts to delete the databases</p><h4 id="PostgreSQL-1"><a href="#PostgreSQL-1" class="headerlink" title="PostgreSQL:"></a>PostgreSQL:</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span> - postgres -c <span class="token string">"dropdb POSTGRESQLDB"</span><span class="token function">su</span> - postgres -c <span class="token string">"dropuser POSTGREUSER"</span></code></pre><h4 id="MySQL-DB-1"><a href="#MySQL-DB-1" class="headerlink" title="MySQL DB:"></a>MySQL DB:</h4><pre class=" language-bash"><code class="language-bash">mysql -u root -e <span class="token string">"DROP DATABASE MYSQLDB;"</span>mysql -u root -e <span class="token string">"DROP USER 'MYSQLUSER'@'%';"</span></code></pre><h4 id="MSSQL-DB-1"><a href="#MSSQL-DB-1" class="headerlink" title="MSSQL DB:"></a>MSSQL DB:</h4><pre class=" language-powershell"><code class="language-powershell"><span class="token namespace">[reflection.assembly]</span>::LoadWithPartialName<span class="token punctuation">(</span><span class="token string">"Microsoft.SqlServer.Smo"</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> <span class="token function">Out-Null</span><span class="token variable">$currenthost</span> = hostname<span class="token variable">$defaultInstance</span> = <span class="token string">"yes"</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$defaultInstance</span> <span class="token operator">-eq</span> <span class="token string">"yes"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>"</span><span class="token punctuation">}</span><span class="token keyword">Else</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>\\MSSQLINSTANCE"</span><span class="token punctuation">}</span><span class="token variable">$server</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SQLServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Server <span class="token variable">$ServerName</span><span class="token variable">$DatabaseName</span> = <span class="token string">"sajalmsdb"</span><span class="token variable">$DatabaseUser</span> = <span class="token string">"sajal"</span><span class="token function">Write-Host</span> <span class="token variable">$DatabaseName</span><span class="token function">Write-Host</span> <span class="token variable">$DatabaseUser</span><span class="token variable">$DBObject</span> = <span class="token variable">$Server</span><span class="token punctuation">.</span>Databases\<span class="token punctuation">[</span><span class="token variable">$DatabaseName</span>\<span class="token punctuation">]</span><span class="token function">Write-Host</span> <span class="token variable">$DBObject</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$DBObject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token variable">$Server</span><span class="token punctuation">.</span>KillDatabase<span class="token punctuation">(</span><span class="token variable">$DatabaseName</span><span class="token punctuation">)</span>  <span class="token function">Write-Host</span> <span class="token string">"Deleted the Database"</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Server</span><span class="token punctuation">.</span>Logins<span class="token punctuation">.</span>Contains<span class="token punctuation">(</span><span class="token variable">$DatabaseUser</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token variable">$Server</span><span class="token punctuation">.</span>Logins\<span class="token punctuation">[</span><span class="token variable">$DatabaseUser</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token function">Write-Host</span> <span class="token string">"Deleted the user login"</span> <span class="token punctuation">}</span></code></pre><p>Please note: <span style="color:red"><strong>NOT A SECURITY BEST PRACTICE</strong>. <strong>Do not do it in production</strong></span>. I only did it for PoC environment.</p><h4 id="The-Video"><a href="#The-Video" class="headerlink" title="The Video:"></a>The Video:</h4><p>Please watch the following video for a detailed demo and further explanation. </p><div class="video-container"><iframe src="//www.youtube.com/embed/1aoGHALKiv8" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This concludes this particular use case “Shared DB as a Service”. Please remember, the workflows I created are for PoC purpose only. My primary aim was to create the structure with the functionalities. Since the structure is ready, you can change the structure to suit your need. The vRA and vRO part is pretty much ok. I would strongly suggest the change or change the Database creation, change, and Deletion Shell/PowerShell scripts to make those more robust.   I specifically made this use case to show that you can do amazing things with vRealize Automation. It is a tool using which you can build whatever you want. When you have the tool you do not need everything out of the box. You can build your own items. With this thought, I am closing this post.  Till the next one, keep safe and happy automating!!!!</p>]]></content>
    
    <summary type="html">
    
      Purpose
The [first part of the post]Out-of-the-box shared DB-as-a-Service in vRealize Automation dealt with “Out of the box Shared DB as a Service”. In addition to other points, where I explained about Shared DB as a Service using a vRO package. Limitation of that package is, it only creates the DB in real Database. Created databases do not appear 
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Automation/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Orchestrator/"/>
    
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/tags/vRealize-Automation/"/>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/tags/vRealize-Orchestrator/"/>
    
  </entry>
  
  <entry>
    <title>Out-of-the-box shared DB-as-a-Service in vRealize Automation</title>
    <link href="https://sajaldebnath.com/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html"/>
    <id>https://sajaldebnath.com/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html</id>
    <published>2017-07-24T03:52:48.000Z</published>
    <updated>2018-07-27T23:15:20.960Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>This blog post provides details of shared DB-as-a-Service capability in vRealize Automation. This functionality provided by vRO workflows. A vRO package was created and is available here. Details of the required tools and configuration steps are also provided. Also, the repository details of the package given.<br><a id="more"></a></p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h3><p>In last few months, I got many requests for shared DB-as-a-Service for private cloud. Specifically, the private clouds built with <a href="https://www.vmware.com/in/products/vrealize-automation.html" rel="external nofollow noopener noreferrer" target="_blank">VMware</a> vRealize Automation. Considering this, I decided to create a vRealize Orchestrator package for this purpose. This will provide such capability out-of-the box in vRA. Import the package, run a single workflow, provide the inputs. The services published in vRA Catalog. Any consumer requiring such service can request the items from Catalog. As of now, this package supports three different types of databases, MSSQL, PostgreSQL and MySQL.</p><h4 id="Why-Shared-DB-as-a-Service"><a href="#Why-Shared-DB-as-a-Service" class="headerlink" title="Why Shared DB-as-a-Service:"></a>Why Shared DB-as-a-Service:</h4><p>I want to cover a little background before going into details of the package contents. A dedicated database server is generally used for a production environment or for heavy workloads. For development or for testing we do not need a dedicated database server. The Same policy applies to milder workloads as well. For these use cases, we need a shared database server. Here we create a database instance on the same database server and consume it as per our need.</p><p>With the rise of Cloud services, shared DB-as-a-Service became very popular.  There, Database instances created and consumed as and when required. This post gives details of the vRO package which provides this exact functionality. This package used in vRealize Automation environment to provide shared DB-as-a-Service.</p><h4 id="How-it-works"><a href="#How-it-works" class="headerlink" title="How it works:"></a>How it works:</h4><p>First, download and import the vRealize Orchestrator package “com.vmware.db-as-a-service.package”. After import, as an admin, run the main workflow “Setup Database-as-a-Service Environment”. This workflow will set the environment. The workflow asks for the inputs and sets the environment. It publishes Catalog items. End users request for the item and get the services. Users provide details of user name, password and db name to create the databases.</p><h4 id="Required-environment"><a href="#Required-environment" class="headerlink" title="Required environment:"></a>Required environment:</h4><p>Provided below are the environmental details.</p><ul><li><p>vCenter Server 6.5</p></li><li><p>vRealize Automation Server 7.3</p></li><li><p>vRealize Orchestrator 7.3</p></li></ul><p><strong>Database versions.</strong></p><ul><li><p>PostgreSQL 9.4</p></li><li><p>MySQL 5.7.18</p></li><li><p>MSSQL 2014</p></li></ul><p><strong>VMware Environmental setup:</strong></p><ul><li><p>vRealize Orchestrator should have the following configuration</p></li><li><p>vCenter Server registered as an endpoint in vRO</p></li><li><p>Registered vRealize Automation Appliance (VAMI/CAFE APPLIANCE)</p></li><li><p>Registered IaaS server</p></li><li><p>A configured vRA environment (For details on how to configure check <a href="https://docs.vmware.com/en/vRealize-Automation/index.html" rel="external nofollow noopener noreferrer" target="_blank">this link</a>)</p></li></ul><p><strong>Database Environmental Setup:</strong></p><ul><li><p>A working PostgreSQL server</p></li><li><p>Remote connection configured in PostgreSQL server</p></li><li><p>Configured MySQL server</p></li><li><p>Local root login enabled in MySQL server. Configured passwordless root login. For security, you can configure password (in that case, change the original workflow)</p></li><li><p>MSSQL server installed and configured</p></li></ul><p> <strong>MSSQL Server:</strong></p><ul><li>Mixed mode or windows mode authentication is needed</li><li>The domain user which has access to the VM (runs the PowerShell script) should have admin access to the database to be able to create and delete databases and users.</li></ul><p>You can change the configurations as per your need. Let me know what modifications you need and I will incorporate them.</p><p>Also, configuring all three of the databases is not mandatory. If you have only one database environment, configure that and the rest skipped.</p><h4 id="Package-source-and-details"><a href="#Package-source-and-details" class="headerlink" title="Package source and details:"></a>Package source and details:</h4><p>I have created a <a href="https://github.com/sajaldebnath/shared-db-as-a-service" rel="external nofollow noopener noreferrer" target="_blank">GitHub repository</a> from where you can download the package. The package name is “com.vmware.db-as-a-service.package”. The package will create a folder “Database-as-a-Service” under the main workflow window. It also has “Helper Workflows”, “Database Creation Workflows” and “Environment Setup Workflows” folders. All these under this main “Database-as-a-Service” folder. The “Environment Setup Workflows” contains the workflows related to setting up the environment. The “Database Creation Workflows” contains the workflows which create the actual databases. “Helper Workflows” folder contains workflows to set and get the environment details.</p><p><img src="/images/2017/07/Folder-Structure.png" alt="Folder Structure for shared DB-as-a-Service" class="responsive"></p><p>The package contains other related workflows, actions, and resource items.</p><h4 id="How-to-run-the-workflows"><a href="#How-to-run-the-workflows" class="headerlink" title="How to run the workflows?"></a>How to run the workflows?</h4><p>The first thing to do is to setup the environment. So login to vRO server, import the package. Next, as an administrator run the “Setup Database-as-a-Service Environment” workflow. This will ask for the following inputs:</p><ul><li><p>vRA Cafe Appliance</p></li><li><p>Service to which to add the catalog items</p></li><li><p>Entitlement where to add the catalog items</p></li><li><p>Approval Policies (if any)</p></li></ul><p>Next three pages ask the database server details. Select the database server VM. Provide user name and password for the database VM’s. This will create and publish three different catalog items:</p><ul><li><p>MSSQL DB-as-a-Service</p></li><li><p>MySQL DB-as-a-Service</p></li><li><p>PostgreSQL DB-as-a-Service</p></li></ul><h4 id="Update"><a href="#Update" class="headerlink" title="Update:"></a><strong>Update:</strong></h4><p>Please note, the earlier version of the package only catered to the default instance of an MSSQL server (thanks Rawlinson Rivera for pointing this out). In the updated version, the MSSQL server database creation considers the named instances as well.</p><p>So for the MSSQL server provide the following added information:</p><p><strong>Default Instance:</strong> Whether default instance is used to DB creation. Please note, the default instance is typical “MSSQLSERVER” or “SQLExpress”. If at the time of installing the database, default instance name was selected then this should be “yes”. Otherwise “no” should be typed in.</p><p>Also note, please type in only “yes” or “no”. Currently, I have not provided any input validation here.</p><p><strong>Instance Name:</strong> Provide the instance name in which DB to be created. This is typically the named instance. Note, if this is the only instance on the server, still if the default name was not selected, then provide this value here.</p><p>All set, now end users can request the catalog items and get respective databases. They need to provide required inputs. The inputs required are </p><ul><li><p>User Name</p></li><li><p>Password</p></li><li><p>Database Name</p></li></ul><p>The workflows create a user in the database server. The password for the user is the one user provided. Also, a database created with the provided name. The created user is the owner of the database.</p><p><strong>Please watch the following video to see details and working of the service.</strong></p><div class="video-container"><iframe src="//www.youtube.com/embed/CSZGpqqcNHI" frameborder="0" allowfullscreen></iframe></div><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>This solution was based on work done by Christophe Decanini. I used the modified package available at <a href="https://code.vmware.com/samples/1151/guest-script-manager-package-for-vro-7-orginally-created-by-cdecanini-?h=vRealize%20Orchestrator" rel="external nofollow noopener noreferrer" target="_blank">this link</a>. The core logic uses the workflows created and described by his. So full credit goes to Christophe for this wonderful package.</p><h4 id="To-do"><a href="#To-do" class="headerlink" title="To do:"></a>To do:</h4><ul><li>Workflows for Deletion of an existing database.</li><li>To implement Error checking</li><li>Thorugh stability testing</li></ul><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the package and associated workflows to provide shared DB-as-a-Service in vRealize Automation environment. At this stage, the workflows are for PoC environment only. Though the workflows were tested for performance, not all use cases were covered nor diligent error checking was done. Till then please go ahead use it and let me know your feedbacks. Do let me know if you need more modifications or something else.</p>]]></content>
    
    <summary type="html">
    
      Purpose
This blog post provides details of shared DB-as-a-Service capability in vRealize Automation. This functionality provided by vRO workflows. A vRO package was created and is available here. Details of the required tools and configuration steps are also provided. Also, the repository details of the package given.


Introduction:
In last few mo
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Automation/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Orchestrator/"/>
    
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/tags/vRealize-Automation/"/>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/tags/vRealize-Orchestrator/"/>
    
  </entry>
  
  <entry>
    <title>Automatically create custom dynamic groups in vROps as per vCenter Tags</title>
    <link href="https://sajaldebnath.com/automatically-create-custom-dynamic-groups-in-vrops-as-per-vcenter-tags.html"/>
    <id>https://sajaldebnath.com/automatically-create-custom-dynamic-groups-in-vrops-as-per-vcenter-tags.html</id>
    <published>2017-06-27T08:52:58.000Z</published>
    <updated>2018-07-28T04:46:43.077Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Do you want to create custom dynamic groups in vROps which matches the tags created in vCenter server? You can do this manually, but you have large number of tags created. How to tackle that programmatically? This post covers the exact point. Read on to know how you can automatically create custom dynamic groups in vROps server. These groups will match the tags created in vCenter server.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>Last week I got a request from my friend Sunny Dua about a script which will automatically create custom groups in vROps server as per vCenter server tags. This started me thinking. If you have a large environment and you want to keep it organized, then tags in vCenter server is a must. Also creating custom dynamic groups in vROps matching to these vCenter Tags makes sense. So I created scripts to achieve this. Provided below are details of the scripts.</p><h4 id="Purpose-of-the-scripts"><a href="#Purpose-of-the-scripts" class="headerlink" title="Purpose of the scripts:"></a>Purpose of the scripts:</h4><p>The purpose of the script is two-fold.</p><ul><li>First, it should gather the tag names and tag category names from vCenter</li><li>Second, it would create custom dynamic groups in vROps server with matches the following criteria’s<ul><li>The name of the group is same as the tag names.</li><li>Also the membership of the group is dynamic in nature. Those VM’s will be part of a group for which “vSphere Tag” is equal to or contains the tag name/group name</li><li>If a “Group Type” is created in vROps server which is</li></ul></li></ul><p>So essentially you get custom groups in vROps server with names equal to tag names in vCenter server. The members of the group are the respective VM’s tagged with tagname.</p><h4 id="Capabilities-and-limitations"><a href="#Capabilities-and-limitations" class="headerlink" title="Capabilities and limitations:"></a>Capabilities and limitations:</h4><p>Provided below are a list of capabilities of the script:</p><p><strong>Data gathering:</strong></p><ul><li>Default behavior is to return all the tag names and their respective tag category names.</li><li>You can specify if you need the tag names of a particular tag category. If you specific the category name then only the tag names belonging to that category will be returned</li></ul><p><strong>Custom Group Creation:</strong></p><p>Create the custom group as per the vCenter tag name</p><ul><li>The VM’s with the tag names will be part of those custom groups</li><li>If “Group Type” is pre-created in vROps server (as per the Tag Category name), then the custom groups will be part of the respective “Group Type”</li><li>You can specify the following custom values:<ul><li>adapterKind</li><li>resourceKind</li><li>Properties (with which to match the members)</li><li>operator (method of checking, e.g., IS|CONTAINS| IS NOT etc.)</li><li>adapterKindkey</li><li>create_by_tag_category</li></ul></li></ul><p><strong>Provided below are the limitation of the custom group creation</strong> In vROps server we can have two different custom dynamic groups with the same name, provided they are part of different “Group Type”. The script currently checks for duplicate custom group name but does not check for the Group type. So you will not be able to create two custom dynamic groups with same name in any way. To do: If a match for custom group name found then further check for the Group Type field.</p><h4 id="Required-environment"><a href="#Required-environment" class="headerlink" title="Required environment:"></a>Required environment:</h4><p>I tested the scripts in the following environment.</p><ul><li>vCenter Server 6.0 U3</li><li>vROps server 6.6</li><li>PowerCLI 6.5 R1</li><li>PowerShel 5.0</li><li>Python 2.7.x</li></ul><p>To run the script you would need Nagini module (python client) for vROps REST API. Please <a href="http://www.vrandom.com/vrops/python-api/" rel="external nofollow noopener noreferrer" target="_blank">check this blog</a> for details on how you can download and use this module.</p><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>Before I start writing this blog I need to say thanks to few people.</p><ul><li>To save time, for data gathering, I used the <a href="https://blogs.vmware.com/PowerCLI/2014/03/using-vsphere-tags-powercli.html" rel="external nofollow noopener noreferrer" target="_blank">ExportImportTags.ps1 given here</a> (originally created by <strong>Dimitar Barfonchovski</strong>). It is a small and simple script and I made many changes to the original script (removed the import portion and exported data in JSON format in place or original XML format). Instead of saving the entire data, I am saving a subset of it.</li><li>My friend <strong>Vinith Menon</strong> already written a script similar to this. His original blog was further re-created by <strong>John Dias.</strong> You can find <a href="https://blogs.vmware.com/management/2017/03/access-internal-rest-apis-in-vr-ops-with-powershell.html" rel="external nofollow noopener noreferrer" target="_blank">details here</a>. Vinith written the script in PowerShell.</li></ul><h4 id="Why-similar-script-for-creating-custom-dynamic-groups"><a href="#Why-similar-script-for-creating-custom-dynamic-groups" class="headerlink" title="Why similar script for creating custom dynamic groups?"></a>Why similar script for creating custom dynamic groups?</h4><p>Question is, why I wrote script which does the similar task for which Vinith Menon already had a script? Provided below are my reasons:</p><ul><li>Vinith mainly showed how you can access vROps internal REST API’s to create custom groups. My script provides a more complete solution.</li><li>I always stressed that when it comes to vROps REST API, python is a far more cleaner and easier way to do it.</li></ul><p>Note, in PowerShell way you will actually have to do the bare bone Invoke-RestMethod. Python already handles those for you. Just call the methods and you are good.</p><h4 id="Where-to-get-the-scripts-and-what-is-included"><a href="#Where-to-get-the-scripts-and-what-is-included" class="headerlink" title="Where to get the scripts and what is included?"></a>Where to get the scripts and what is included?</h4><p>I have created a <a href="https://github.com/sajaldebnath/vrops-custom-group-creation/" rel="external nofollow noopener noreferrer" target="_blank">GitHub repository</a> from where you can download the scripts.   The following scripts are available:</p><ul><li><p>create-custom-group-vrops.py</p></li><li><p>Get-TagNames.ps1</p></li><li><p>set-env.py</p></li></ul><h4 id="How-to-run-the-scripts"><a href="#How-to-run-the-scripts" class="headerlink" title="How to run the scripts?"></a>How to run the scripts?</h4><p>Download the scripts and store them in the same folder.</p><p>First you need to run the Get-TagNames.ps1 script. Follow the following process to run the script. I am assuming you are running the script from VMware PowerCLI console. Note, I am dot sourcing [.] the <strong>Get-TagNames.ps1</strong> script so that the function defined in it is available in the environment.</p><pre class=" language-powershell"><code class="language-powershell"><span class="token function">PS</span>:> <span class="token variable">$server</span> = Connect<span class="token operator">-</span>VIserver <span class="token operator">-</span>Server &lt;vcenter server=<span class="token string">""</span> ip=<span class="token string">""</span> fqdn=<span class="token string">""</span>><span class="token function">PS</span>:> <span class="token punctuation">.</span> <span class="token punctuation">.</span>\Get<span class="token operator">-</span>TagNames<span class="token punctuation">.</span>ps1   <span class="token function">PS</span>:> Export<span class="token operator">-</span>Tag <span class="token operator">-</span>Server <span class="token variable">$server</span> <span class="token punctuation">[</span><span class="token operator">-</span>Category &lt;tag<span class="token operator">-</span>category<span class="token operator">-</span>name><span class="token punctuation">]</span>&lt;<span class="token operator">/</span>tag<span class="token operator">-</span>category<span class="token operator">-</span>name>&lt;<span class="token operator">/</span>vcenter></code></pre><p>Note, the <strong>-Category</strong> option is optional. If specified, script will get the tag names from that tag category only.</p><p>Running the script will generate a “taglist.json” file which has the data (tagName and categoryName).</p><p>Next run, python scripts from command prompt:</p><pre class=" language-console"><code class="language-console">C:\> python set-env.py</code></pre><p>This will ask inputs for configuring the environment and will generate a “env.json” file which will have the environment information to be used later.</p><p>Next run:</p><pre class=" language-console"><code class="language-console">C:\> python create-custom-group-vrops.py</code></pre><p>This will create the custom groups in vROps server. Watch the video for further explanation of the scripts and run-time information.</p><div class="video-container"><iframe src="//www.youtube.com/embed/lST9G2qUiX4" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the script to dynamically create dynamic groups in vROps inline with the vCenter Serer tags .</p>]]></content>
    
    <summary type="html">
    
      Purpose
Do you want to create custom dynamic groups in vROps which matches the tags created in vCenter server? You can do this manually, but you have large number of tags created. How to tackle that programmatically? This post covers the exact point. Read on to know how you can automatically create custom dynamic groups in vROps server. These group
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="Automation and Scripting" scheme="https://sajaldebnath.com/categories/Automation-and-Scripting/"/>
    
      <category term="PowerCLI" scheme="https://sajaldebnath.com/categories/Automation-and-Scripting/PowerCLI/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Operations/"/>
    
      <category term="Python" scheme="https://sajaldebnath.com/categories/Automation-and-Scripting/Python/"/>
    
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="Automation" scheme="https://sajaldebnath.com/tags/Automation/"/>
    
      <category term="PowerCLI" scheme="https://sajaldebnath.com/tags/PowerCLI/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/tags/vRealize-Operations/"/>
    
      <category term="Python" scheme="https://sajaldebnath.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>How to configure Auto-Scaling for Private Cloud</title>
    <link href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html"/>
    <id>https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html</id>
    <published>2017-06-16T08:35:48.000Z</published>
    <updated>2018-07-27T02:44:34.942Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Have you checked the auto-scaling feature provided in public cloud solutions like AWS and Azure and wished to get the same feature in your private cloud environment? Do you have an existing private cloud environment or building a new one and want to make it auto-scale enabled? This post covers this exact topic. It details what auto-scaling is and provides step by step guide on how you can build one using various VMware products.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>In recent months, during my interactions with customers, one requirement came up pretty often than others. That is of auto-scaling. Seems majority of customers who deploy Private Cloud require auto-scaling in some or other formats. Since out of the box vRealize Automation provides “Scale-Out” and “Scale-In” functions (albeit manual), these can be used in conjunction with other products to provide auto-scaling functionality. I had to configure this feature for multiple customers, so thought of writing a blog post detailing the steps. Readers can follow the blog to do it themselves. Also, auto-scaling is very dynamic in nature. Typically auto-scaling parameter requirement changes from environment to environment. Keeping that mind I have explained the steps involved so that you can customize it as per your need.</p><h4 id="Required-prior-knowledge"><a href="#Required-prior-knowledge" class="headerlink" title="Required prior knowledge:"></a>Required prior knowledge:</h4><p>Though you can simply import the package in vRealize Orchestrator and follow the guide to configure other products, having a knowledge of the following will help you further configure it.</p><ul><li>Working knowledge of vRealize Orchestrator</li><li>If you want to customize the workflows, then you need to know a bit of JavaScript</li><li>For configuration of Webhook Shims, basic knowledge of Linux will help (though not strictly required, John Dias did an amazing job providing step by step guide).</li><li>Familiarity with vRealize Operations Manager will help</li><li>Working knowledge of vRealize Automation is required</li><li>If you want to replicate my example of multi-tier application with application installation at runtime. Then you need to know NSX usage and advanced configuration of blueprints in vRealize Automation.</li></ul><p>If you are using vRealize Automation 7.2 and prior then [this blog post] on NSX integration with <a href="/integrating-nsx-with-vrealize-automation-part-i.html" title="Integrating NSX with vRealize Automation-Part I">Integrating NSX with vRealize Automation-Part I</a> vRA will help. Integration method has changed in 7.3 and it is simplified a lot. Check the <a href="https://docs.vmware.com/en/vRealize-Automation/7.3/com.vmware.vra.prepare.use.doc/GUID-1DCCA922-7220-405F-998B-626563C3F682.html" rel="external nofollow noopener noreferrer" target="_blank">VMware documentation on how it is done in</a> vRA 7.3. On how to configure Software components you can check my [earlier blog post here] <a href="/vra-7-2-auto-scale-application-authoring-container-on-demand-lb.html" title="vRA 7.2 -  Auto-Scale , Application Authoring, Container, On-Demand LB">vRA 7.2 -  Auto-Scale , Application Authoring, Container, On-Demand LB</a>.</p><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>Before I start writing this blog I need to say thanks to few people. Though I demonstrated this feature (with PowerCLI and vCenter) 2 years back to a customer, it was never a true auto-scaling solution. So, here it goes:</p><ul><li>First and loudest thanks to <strong>Carsten Schaefer</strong> for com.vmware.pso.cemea.autoscaling package. It had the main “Scale Up Blueprint Layer based on VM MOID” and “Scale Down Blueprint Layer based on VM MOID”. All my other works are based on these two core workflows. These two workflows do the actual task. So thanks a lot mate for your hard work and help.</li><li>Thanks to <strong>Vishal Jain, Diwan Chandrabose, Ajay Kalla and team</strong> for the Load balancer handling script. Normally when an alert is fired, it is based on a VM. But when network load comes from Load-Balancer and it fires an alert, we get the load balancer name. The script co-relating the load balancer to the corresponding virtual machine is written by the team. They showed how we can use NSX and vROps integration to handle load balancer parameters. Thanks a lot guys for this.</li><li>Last but not least <strong>Vinith Menon</strong>, I was wondering how I would put a load on the test website. I was thinking of using JMeter. But it was too much to just put HTTP requests on a web page. Your one liner is absolutely fantastic and time saver for me. Thanks a lot brother for that.</li></ul><p>My friend Vinith Menon also have written a blog post on auto-scaling. You can check it <a href="http://virtualize-automate.com/wp/index.php/2017/05/06/auto-scale-vra-workloads-vropsvro-nsx/" rel="external nofollow noopener noreferrer" target="_blank">here</a>.</p><h4 id="Where-to-get-the-package-for-auto-scaling"><a href="#Where-to-get-the-package-for-auto-scaling" class="headerlink" title="Where to get the package for auto-scaling?"></a>Where to get the package for auto-scaling?</h4><p>I have created a single vRealize Orchestrator package containing all the workflows, SNMP Policy and Action items. Download the package from <a href="https://github.com/sajaldebnath/auto-scaling-vra" rel="external nofollow noopener noreferrer" target="_blank">the GitHub repository</a> (<a href="https://github.com/sajaldebnath/auto-scaling-vra" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/sajaldebnath/auto-scaling-vra</a>) and import it into vRealize Orchestrator server. Rest of the details are provided in the rest of the blog post.</p><h4 id="What-is-included-in-the-package"><a href="#What-is-included-in-the-package" class="headerlink" title="What is included in the package?"></a>What is included in the package?</h4><p>The following workflows are included in the package:</p><ul><li>Scale Down Blueprint Layer based on VM MOID</li><li>Scale Up Blueprint Layer based on VM MOID</li><li>Scale Down vRA Deployment based on LB Load - SNMP</li><li>Scale Up vRA Deployment based on LB Load - SNMP</li><li>Scale Down vRA Deployment based on CPU-Mem Load - vROps REST Notification</li><li>Scale Up vRA Deployment based on CPU-Mem Load - vROps REST Notification</li><li>Scale Down vRA Deployment based on LB Load - vROps REST Notification</li><li>Scale Up vRA Deployment based on LB Load - vROps REST Notification</li></ul><p>The helper workflows are:</p><ul><li>Count VMs in Layer</li><li>Get VM Name from vROps REST Notification</li><li>JSON Invoke a REST operation</li><li>Submit to vRA</li></ul><p>The action items are:</p><ul><li>getCatalogResourceForIaasVmEntity</li><li>findObjectById</li><li>getVirtualMachineProperties</li></ul><p>The included SNMP policy is:</p><ul><li>vROps SNMP Trap for NSX</li></ul><p>Note, the first two workflows are core workflows (written by Carsten) all other workflows depends on these two to get the work done. If you are not using Webhook Shims, then you do not need to configure workflows which ends with “vROps REST Notification”. Also, for SNMP, you do not need to configure “Get VM Name from vROps REST Notification” and “JSON Invoke a REST operation” workflows. Alternately, if you are not going to use SNMP traps, then you do not need to configure the SNMP policy.</p><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>Before you can run everything you need to have the environment ready. I used the following versions:</p><ul><li>vRealize Automation 7.3</li><li>vCenter &amp; vSphere 6.5</li><li>vRealize Operations 6.5</li><li>vRealize Orchestrator 7.3 (internal to vRA)</li><li>NSX 6.3</li><li>Webhook Shims</li></ul><p>The workflows should work with other versions as well. You need to have these products installed, configured and integrated to follow the example end to end.</p><h4 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE::"></a><span style="color:red">UPDATE::</span></h4><h4 id="How-to-handle-the-SNMP-trap-data"><a href="#How-to-handle-the-SNMP-trap-data" class="headerlink" title="How to handle the SNMP trap data?"></a><span style="color:red">How to handle the SNMP trap data?</span></h4><p>My friend Senthil asked me to provide the SNMP trap handling script as well. So provided below is the script which I used to Handle the SNMP trap data. If you are using the SNMP method for monitoring the traps, then use the following script to handle the on trap tasks and fire the respective workflow.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Handling SNMP Trap</span>System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"SNMP Trap Received"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Agent: "</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">"agent"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> snmpResult <span class="token operator">=</span> SnmpService<span class="token punctuation">.</span><span class="token function">retrievePolicyData</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Get data as Array of Properties</span><span class="token keyword">var</span> result <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token string">"com.vmware.library.snmp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processSnmpResult</span><span class="token punctuation">(</span>snmpResult<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//System.log("Enterprise: " + snmpResult.enterprise);</span><span class="token comment" spellcheck="true">// Log data</span>System<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token string">"com.vmware.library.snmp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> dataMatch <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">var</span> lb <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">// Setting the workflow ID's</span><span class="token keyword">var</span> wfIdCpuDown <span class="token operator">=</span> <span class="token string">"2e8e822b-f919-4453-97e8-ce5dacd816f4"</span><span class="token punctuation">;</span><span class="token keyword">var</span> wfIdCpuHigh <span class="token operator">=</span> <span class="token string">"14d602b6-e1ff-4d15-83af-4f9a97928940"</span><span class="token punctuation">;</span><span class="token keyword">var</span> wfIdLbDown <span class="token operator">=</span> <span class="token string">"7daf80e6-852a-4a10-a3df-5d54b182f5b0"</span><span class="token punctuation">;</span><span class="token keyword">var</span> wfIdLbHigh <span class="token operator">=</span> <span class="token string">"db9fdd03-1c11-4305-9d22-3536c3374971"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Processing the trap data. Element 19 has the alert name</span><span class="token comment" spellcheck="true">// So checking the presence of particular Alert Name</span><span class="token comment" spellcheck="true">// Element 4 has the Object name which fired the alert. So if the corrent alert is present then</span><span class="token comment" spellcheck="true">// getting the object name from Element 4</span><span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"VM vCPU Usage High - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"VM Name : "</span> <span class="token operator">+</span> vmName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdCpuHigh<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"VM vCPU Usage Down - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"VM Name : "</span> <span class="token operator">+</span> vmName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdCpuDown<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"LB Load High - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lbName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> endIndex <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">" Load Balancer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lb <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">//    System.log("LB Name : " + vmName+ "  Var lb value:"+lb);</span>    <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdLbHigh<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"LB Load Down - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lbName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> endIndex <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">" Load Balancer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lb <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">//    System.log("LB Name : " + vmName+ " Var lb value:"+lb);</span>        <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdLbDown<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"No data match"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dataMatch <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// If the actual alert is found then getting the Moref of the Object in vCenter and calling the workflow</span><span class="token keyword">if</span> <span class="token punctuation">(</span> dataMatch <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> lb <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> vmMoref <span class="token operator">=</span> vmName        <span class="token comment" spellcheck="true">//        System.log("Calling out workflow for LB: "+ vmMoref);</span>        <span class="token comment" spellcheck="true">//        runWF(wfId,vmMoref);</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token function">findVms</span><span class="token punctuation">(</span>vmName<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"The VM is:"</span><span class="token operator">+</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>vm <span class="token keyword">instanceof</span> <span class="token class-name">VcVirtualMachine</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Sucessfully located the vm object"</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">var</span> vmMoref <span class="token operator">=</span> vm<span class="token punctuation">.</span>id<span class="token punctuation">;</span>            System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"VM MoRef is "</span> <span class="token operator">+</span> vmMoref <span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Calling out to workflow run function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">runWF</span><span class="token punctuation">(</span>wfId<span class="token punctuation">,</span>vmMoref<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// This function finds the Moref of the object in terms of vCenter server</span><span class="token keyword">function</span> <span class="token function">findVms</span><span class="token punctuation">(</span>vmName<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">var</span> vms <span class="token operator">=</span> VcPlugin<span class="token punctuation">.</span><span class="token function">getAllVirtualMachines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> vmResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  b <span class="token operator">&lt;</span> vms<span class="token punctuation">.</span>length<span class="token punctuation">;</span> b<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> vmName <span class="token operator">==</span> vms<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>                 vmResult <span class="token operator">=</span> vms<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> vmResult<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// This function calls out the workflow</span>    <span class="token keyword">function</span> <span class="token function">runWF</span><span class="token punctuation">(</span>wfid<span class="token punctuation">,</span> vmMoref<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">var</span> workflowToLaunch <span class="token operator">=</span> Server<span class="token punctuation">.</span><span class="token function">getWorkflowWithId</span><span class="token punctuation">(</span>wfid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>workflowToLaunch <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>             <span class="token keyword">throw</span> <span class="token string">"Workflow not found"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> workflowParameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> lb <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            workflowParameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"lbName"</span><span class="token punctuation">,</span>vmMoref<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>            workflowParameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"targetId"</span><span class="token punctuation">,</span>vmMoref<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//    System.log("Launching Workflow. Please refer to that workflow for specific logs."+ wfid+" :VM     Info:"+vmMoref);</span>        <span class="token keyword">var</span> wfToken <span class="token operator">=</span> workflowToLaunch<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>workflowParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> wfToken<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h4 id="How-to-configure-auto-scale"><a href="#How-to-configure-auto-scale" class="headerlink" title="How to configure auto-scale?"></a>How to configure auto-scale?</h4><p>There are too many steps and explanation to cover in a single post. So instead I created a video to cover all of that. Please watch the video for details on how to configure the different components. It also covers where and how you can modify the steps.  This video covers everything along with few ppt slides to cover the environment and slight background.</p><div class="video-container"><iframe src="//www.youtube.com/embed/wBreU7R_r2k" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the steps detailed in the video to configure auto-scaling in your environment. This is an amazing feature. It will be a real help if you can test it out and let me know the outcome. Also, any further suggestions are welcome. I hope this helps you as it helped me. Do provide me feedbacks on this. Also, let me know if I missed something or you need further clarification.</p>]]></content>
    
    <summary type="html">
    
      Purpose
Have you checked the auto-scaling feature provided in public cloud solutions like AWS and Azure and wished to get the same feature in your private cloud environment? Do you have an existing private cloud environment or building a new one and want to make it auto-scale enabled? This post covers this exact topic. It details what auto-scaling 
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Automation/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Operations/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Orchestrator/"/>
    
    
      <category term="vRealize Automation" scheme="https://sajaldebnath.com/tags/vRealize-Automation/"/>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/tags/vRealize-Operations/"/>
    
      <category term="vRealize Orchestrator" scheme="https://sajaldebnath.com/tags/vRealize-Orchestrator/"/>
    
  </entry>
  
  <entry>
    <title>How to programmatically push data in vRealize Operations Manager</title>
    <link href="https://sajaldebnath.com/how-to-programmatically-push-data-in-vrealize-operations-manager.html"/>
    <id>https://sajaldebnath.com/how-to-programmatically-push-data-in-vrealize-operations-manager.html</id>
    <published>2017-06-03T08:55:42.000Z</published>
    <updated>2018-07-27T03:06:29.322Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Did you ever feel the need to push custom data to vRealize Operations Manager (vROps)? Did you wish, you could see that one parameter or metric specific to your environment in vROps? This post provides exactly that information. Here I demonstrate a script which pushes custom data into vROps. At the same time, I explained how you can customize it according to your requirement.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>A few weeks back I got the request from two of my colleagues for friends Luciano Gomes and Iwan (e1) Rahabok about a script which can push data into vRealize Operations Manager. Both of them requested similar task albeit the data was different. So I picked Luciano’s request as he already had the script which will generate the input. All I had to do is modify the script a bit so that I can consume the data in my required format and push the data to vROps. His script generates “Creation Time” and “Hostname inside guest” for each virtual machine in an environment. He wanted to see these two values under each VM resource in vROps. So the task is defined in front of me.  </p><h4 id="Prior-Work-on-pushing-data-to-vRealize-Operations-Manager"><a href="#Prior-Work-on-pushing-data-to-vRealize-Operations-Manager" class="headerlink" title="Prior Work on pushing data to vRealize Operations Manager:"></a>Prior Work on pushing data to vRealize Operations Manager:</h4><p>Understand, this is not a new topic. Very good blog posts are already available on similar topics. But before I explain my method, please check the following excellent blogs on similar topics:</p><ul><li><a href="http://www.valcolabs.com/2014/06/24/programmatically-push-custom-data-into-vcenter-operations/" rel="external nofollow noopener noreferrer" target="_blank">Programmatically Push Custom Data into vCenter Operations</a> - The original awesome post by Josh Coen - Sadly Http Adapter is no longer in vogue and may be extinct soon.</li><li><a href="https://virtualviking.net/2015/12/15/vraidmon-a-vrealize-operations-adapter-written-in-python/" rel="external nofollow noopener noreferrer" target="_blank">vraidmon – A vRealize Operations Adapter Written in Python</a> - By Pontus (you rule)</li><li><a href="http://vman.ch/vrops-suite-api-properties-import/" rel="external nofollow noopener noreferrer" target="_blank">vRops – suite-api – addProperties</a> - By vMAN - Does similar things but calling out direct REST API</li><li><a href="http://next.nutanix.com/t5/Scripts/VMware-vRealize-Operations-Adapter-for-Nutanix/td-p/4716" rel="external nofollow noopener noreferrer" target="_blank">VMware vRealize Operations Adapter for Nutanix</a> - By Andreas Diemer - The best is for the last</li></ul><h4 id="Why-a-new-method"><a href="#Why-a-new-method" class="headerlink" title="Why a new method?"></a>Why a new method?</h4><p>If you are wondering why a new method and script?  The topic and method of these blog posts can be divided into two categories. In the first category, you have an easy way, but the method used is to push a whole new set of information, e.g, creating a new adapter, resource kind, and type. Then push custom data in this new resource. Here my end goal is not that. All the VM’s are already present in the environment. All I need to do is push custom value into it. In the second category, custom data is pushed to vRealize Operations Manager, but the method is direct REST API calls. Which makes the script pretty complex. So I tried to find an easy way and hence this post and script.</p><h4 id="What-I-chose-and-why"><a href="#What-I-chose-and-why" class="headerlink" title="What I chose and why?"></a>What I chose and why?</h4><p>I chose to create new Properties for existing resources (VM’s). Since the data I am pushing is text in nature so created new Properties. If the data was of numeric in nature, then I would have chosen new stats. Based on the requirement you can chose either of them. They are detailed in the following locations: https://<vrops server="">/suite-api/docs/rest/index.html The methods are:</vrops></p><pre class=" language-javascript"><code class="language-javascript">POST <span class="token operator">/</span>api<span class="token operator">/</span>resources<span class="token operator">/</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token operator">/</span>statsPOST <span class="token operator">/</span>api<span class="token operator">/</span>resources<span class="token operator">/</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token operator">/</span>properties</code></pre><p>Note, I did not create any new adapter or resourcekind or resource type. All I am doing is adding properties or stats.</p><h4 id="Where-to-get-it"><a href="#Where-to-get-it" class="headerlink" title="Where to get it?"></a>Where to get it?</h4><p>You can get the script by going to <a href="https://github.com/sajaldebnath/vrops-data-push" rel="external nofollow noopener noreferrer" target="_blank">GitHub page</a> (<a href="https://github.com/sajaldebnath/vrops-data-push" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/sajaldebnath/vrops-metric-collection</a>)and downloading it from there. There are samples provided with the script.</p><h4 id="What-is-included"><a href="#What-is-included" class="headerlink" title="What is included:"></a>What is included:</h4><p>There are two Python script files and three PowerShell script files. The Powershell scripts are used to gather the data that needs to be pushed to vROPs. The Python files are used to process and push the data to vROps</p><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>These programs were written in Python2.7 and Powershell 5.0 versions.So your system should have Python 2.7 and Powershell 5.0. Also, download and install the nagini module from vRealize Operations Manager. It can be found at “https:///suite-api” . Visit the page, download and install the Python Client. Typically Windows boxes don’t have Python installed in it. Download and install Python 2.7.x version on your Windows machine.</p><h4 id="How-to-run"><a href="#How-to-run" class="headerlink" title="How to run:"></a>How to run:</h4><p>Download all the files to the same location. The program has three parts. </p><p><strong>Part 1: Setting up the environment:</strong>  For the first time run, <strong>Set-VCdetails.ps1</strong> using PowerShell. You can simply open PowerShell windows and run the script with <strong>*C:\ .\Set-VCdetails.ps1</strong>. This will ask you for the following information:</p><ul><li>vCenter Server Name:</li><li>vCenter User Id:</li><li>Password:</li></ul><p>Once this information is provided, it will create <strong>vcdetails.txt</strong> (contains vCenter server name and user name) and <strong>passwd.txt</strong> (contains the password in encrypted format). Next run <strong>set-env.py</strong> file. You can run it like following: </p><pre class=" language-shell"><code class="language-shell"># python set-env.py</code></pre><p>This will ask for the following inputs:</p><ul><li>Adapter Kind:</li><li>Resource Kind:</li><li>vROPs server IP/FQDN:</li><li>user id:</li><li>vROps password:</li></ul><p>Once all the above information is provided, the script generates env.json in the same location. The provided password is saved in encrypted format. </p><p><strong>Part 2: Getting the data from vCenter server:</strong>  Run the “Get-VMDetails.ps1” file with PowerShell cmdline. This will get values from vcdetails.txt and passwd.txt file and generate <strong>data.json</strong> file in the same location. This <strong>data.json</strong> will have the desired output values. </p><p><strong>Part 3: Pushing the data to vROps server:</strong> Next run <strong>data-push.py</strong> from cmdline with </p><pre class=" language-shell"><code class="language-shell"># python data-push.py</code></pre><p>This will gather required information from <strong>env.jon, data.json</strong> and push data to vROps server You should schedule two jobs, one for <strong>Get-VMDetails.ps1</strong> and another for <strong>data-push.py</strong> to run these scripts one after other. Check the format of the <strong>data-push.json</strong> file to further utilize the data. </p><p><strong>Points to Note:</strong> Though this has specific use cases implemented, you should be able to easily modify the scripts to suit your need.</p><h4 id="What-great"><a href="#What-great" class="headerlink" title="What great?"></a>What great?</h4><p>As you can see from the script, all I had to do was two separate calls to vROps using nagini methods. The first one is to find out UUID of each VM. The second one does the actual job. A single <strong>add_properties</strong> method does all the heavy lifting for me.</p><p>I do not need to make direct REST calls, nagini is a wrapper for that. It does all the heavy lifting.</p><p>Watch the following video for the detailed run and sample output.</p><div class="video-container"><iframe src="//www.youtube.com/embed/behW2uIHalg" frameborder="0" allowfullscreen></iframe></div><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>Python client for vRealize Operations Manager (nagini) is not very well documented. I struggled with a particular method call as I couldn’t figure out which format it expects data. Thanks to Vibhu Rastogi for arranging a call and Shankar Kommineni, thank you. You rock man. Thanks for the help and explanation.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the script if you want to get push custom data directly to vROps server. I did not test the script extensively. It will be a real help if you can test it out and let me know the outcome. Also, any further suggestions are welcome. I hope this helps you as it helped me. Customize it as per your requirement.</p>]]></content>
    
    <summary type="html">
    
      Purpose
Did you ever feel the need to push custom data to vRealize Operations Manager (vROps)? Did you wish, you could see that one parameter or metric specific to your environment in vROps? This post provides exactly that information. Here I demonstrate a script which pushes custom data into vROps. At the same time, I explained how you can customi
    
    </summary>
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/categories/vRealize-Suite/"/>
    
      <category term="Automation and Scripting" scheme="https://sajaldebnath.com/categories/Automation-and-Scripting/"/>
    
      <category term="PowerCLI" scheme="https://sajaldebnath.com/categories/Automation-and-Scripting/PowerCLI/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/categories/vRealize-Suite/vRealize-Operations/"/>
    
      <category term="Python" scheme="https://sajaldebnath.com/categories/Automation-and-Scripting/Python/"/>
    
    
      <category term="vRealize Suite" scheme="https://sajaldebnath.com/tags/vRealize-Suite/"/>
    
      <category term="Automation" scheme="https://sajaldebnath.com/tags/Automation/"/>
    
      <category term="PowerCLI" scheme="https://sajaldebnath.com/tags/PowerCLI/"/>
    
      <category term="vRealize Operations" scheme="https://sajaldebnath.com/tags/vRealize-Operations/"/>
    
      <category term="Python" scheme="https://sajaldebnath.com/tags/Python/"/>
    
  </entry>
  
</feed>
