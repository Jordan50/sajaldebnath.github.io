<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Auto-Scaling Deep Dive</title>
      <link href="/auto-scaling-deep-dive.html"/>
      <url>/auto-scaling-deep-dive.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I wrote a blog on <a href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html">Auto-Scaling</a> and got many questions regarding that topic. Also, after the release of vRealize Automation 7.3.1 onwards, the workflows stopped working. So, this post has the answer to all those questions and the updated package which will work with vRealize Automation versions upwards from 7.3. Though this post mainly covers the answers to the questions, it contains information about the subject as a whole and can be further categorized into the following sub topics:</p><a id="more"></a><ul><li>Definition</li><li>Why should we use it</li><li>Points to consider</li><li>Candidates</li><li>Methods</li><li>Lab example</li><li>Final words</li><li>Demo</li></ul><h4 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h4><p>Autoscaling, also spelled auto scaling or auto-scaling, and sometimes also called automatic scaling, is a method used in <a href="https://en.wikipedia.org/wiki/Cloud_computing" target="_blank" rel="noopener">cloud computing</a>, whereby the amount of computational resources in a server farm, typically measured in terms of the number of active servers, scales automatically based on the load on the farm. It is closely related to, and builds upon, the idea of <a href="https://en.wikipedia.org/wiki/Load_balancing_(computing" target="_blank" rel="noopener">load balancing</a>). <em>[Source: <a href="https://en.wikipedia.org/wiki/Autoscaling" target="_blank" rel="noopener">Wikipedia</a>]</em> </p><p>Auto-Scaling mainly introduced by Amazon in AWS Cloud services. So the terminologies and types are majorly influenced by AWS terminologies. Today this service is offered by all the other public cloud services (Azure, Google Cloud and others). Also, this service can be build easily in any private cloud environment or in any virtual environment.</p><p><em>In my opinion, Auto-Scaling is a feature and should not be tagged with any particular environment (cloud/virtualization or otherwise) . Same feature can be built easily in any private cloud/virtualized environment or even in purely physical environment as well (through monitoring and scripting).</em></p><h4 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h4><p>Autoscaling offers the following advantages:</p><ul><li>Scaling Out/In or Up/Down as needed, thus saving resources and energy (mostly in private datacenter environment)</li><li>In Cloud environment, this will result in lesser bill, as, the money charged is directly proportional to used resources</li><li>No need for upfront investment for future usage (e.g. Black Friday sale etc.) [specially n Cloud environment]</li><li>Easily replace crashed or unhealthy nodes which in turn ensures uptime and performance as per requirement.<h4 id="Points-to-consider"><a href="#Points-to-consider" class="headerlink" title="Points to consider"></a>Points to consider</h4></li></ul><p>Most of the times, I hear people say they want to implement “Auto-Scaling” without understanding the requirements. </p><p>There are two aspects of implementing Auto-Scaling. They are:</p><ul><li>Implementing at Infrastructure layer</li><li>Implementing at Application layer<br>For the entire feature to be successful, both of the above aspects needs to go hand in hand.</li></ul><p>Implementing Auto-Scaling in infra level is easy. But to be truly effective, the application for which it is designed needs to be aware of the environment. The requirements are provided below.</p><p><strong>Requirements</strong> </p><ul><li>Application must be auto-scale aware</li><li>Point one translates to application being clustered in nature (in case of scale out/in). Nodes should be added and removed without hampering application operation</li><li>Infrastructure should be easily scalable (agile in nature)</li><li>Proper triggering mechanism (monitoring and alerting)</li></ul><p>Provided below are the considerations required for the successful operation of the feature.</p><p><strong>Considerations</strong> </p><ul><li>Initial waiting period – when to start scaling</li><li>Gap between scaling</li><li>Stateless vs stateful applications<ul><li>Stateless applications (e.g. web servers with nothing stored locally)</li><li>Stateful applications (e.g. nodes processing payments)</li></ul></li><li>When to stop (upper limit)</li><li>When to scale down</li><li>Till which point to scale down</li><li>Triggers for scaling – few examples, CPU/Memory usage, Network traffic (number of hits), number of transactions etc.</li></ul><p><em>General observation, time for scaling up should be less than time taken for scaling down. Example, if for scaling out is triggered for 10 minutes of network load, then scaling in should be done after 30 minutes to 1 hour of less activity. Otherwise, too much scaling will happen resulting in unwanted situations.</em> </p><h4 id="Possible-Candidates"><a href="#Possible-Candidates" class="headerlink" title="Possible Candidates"></a>Possible Candidates</h4><p>Provided below is a list of possible candidates. Remember, this is not an absolute list.</p><ul><li>Stateless webservers (web server farm)</li><li>Stateful front end servers (while scaling down, special precautions need to be taken)</li><li>Mid-tier application servers or other applications which has cluster functionality and supports addition/removal of nodes at runtime</li><li>Database servers - scale-up, scale out in case of multiple nodes is supported or required.</li></ul><p><strong>Consideration:</strong> In most cases, webserver or application servers are the targeted use cases. Database servers or applications of similar kind are the least targeted or preferred candidates for this service. </p><p><strong><em>Finally, implementation is limited only by your imagination.</em></strong></p><h4 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h4><p>There are two well accepted methods among others. These are listed below:</p><ul><li>Pre-Deployment</li><li>Runtime Deployment</li></ul><p>Here, we will discuss only about the above two methods.</p><h5 id="Pre-Deployment-Method"><a href="#Pre-Deployment-Method" class="headerlink" title="Pre-Deployment Method"></a>Pre-Deployment Method</h5><p>In this method, all the required nodes are pre-deployed and are kept in standby mode (powered off or suspended). Under correct situations they are either powered on or brought into the cluster. Generally the following steps are performed.</p><ul><li>Deploy the pre-decided maximum number of nodes and either keep them in powered off mode or standby mode</li><li>Nodes can be pre-configured to be part of the cluster (cluster nodes) or can be added at runtime</li><li>Power On/Off the nodes as and when required as per the triggering condition</li></ul><p>Provided below is a list of advantages and disadvantages of this method.</p><p><strong>Advantages:</strong></p><ul><li>Less reaction time</li><li>Does not require resource intensive operations (storage IO or runtime deployment)</li></ul><p><strong>Dis-advantages:</strong> </p><ul><li>Does not give maximum saving (storage is still consumed)</li></ul><h5 id="Runtime-Deployment-Method"><a href="#Runtime-Deployment-Method" class="headerlink" title="Runtime Deployment Method"></a>Runtime Deployment Method</h5><p>In this method, the nodes are deployed at runtime as and when required. Generally the following steps are performed for this method.</p><ul><li>Nodes are deployed or removed at runtime</li><li>As the nodes are deployed, they become part of the cluster or removed from from it  (node addition/removal)</li></ul><p><strong>Advantages:</strong> </p><ul><li>Maximum resource saving</li><li>Maximum monetary saving</li></ul><p><strong>Disadvantages:</strong>  </p><ul><li>Large reaction time (lot of runtime time hogging operations, such as node deployment, addition to or removal from cluster etc.)</li><li>Resource intensive operations. If large load comes then multiple nodes are deployed in quick succession, leading to excessive IO operations. Can lead to unwanted situations. </li></ul><p><em><em>Based on the requirement choose carefully between these two methods. I believe this is a balance between performance and saving. If the application is time sensitive, then choose the pre-deployment method. Otherwise if monetary or resource saving is the main consideration, then choose the second method.</em></em> </p><h4 id="Lab-Example"><a href="#Lab-Example" class="headerlink" title="Lab Example"></a>Lab Example</h4><p>As demonstrated in my earlier post, here I will provide an example from my lab. For this, I used the following VMware products.</p><ul><li>vRealize Automation (version 7.5)</li><li>vRealize Operations Manager (version 7.0)</li><li>vRealize Orchestrator (version 7.5)</li><li>vCenter server (version 6.5 U1)</li><li>Webhook Shims</li></ul><p>Provided below is a picture which shows logical lab setup.</p><p><img src="/images/Auto-Scaling-Deep-Dive/Auto-Scale setup.png" alt="Auto-Scale Setup" class="responsive"></p><p><strong>How it works</strong></p><p>In my lab, the VM’s are deployed through vRealize Automation (vRA). vCenter server is used as endpoint. Total environment is  monitored by vRealize Operations Manager (vROps). vROps is also used for alert notifications. The alerts are sent to vRealize Orchestrator (vRO) which in turn runs a workflow. Through this workflow we initiate appropriate action (Scale Out or In) in vRA.</p><p><em>Note: For this demonstration we are utilizing Out of the Box feature of vRA. vRA provides action items Scale Out and In per depolyment. So, this makes our task easier.</em></p><p>Another point to note, vROps can send notifications to vRO using three methods, SNMP trap, REST notifications and using vRO plugin. Merit and de-merit for all are provided below:</p><p><strong>SNMP Traps</strong> </p><p><em>Merits</em> </p><ul><li>Does not require extra resources configuration</li><li>Simpler to setup</li></ul><p><em>De-merits</em> </p><ul><li>Irrespective of the nature, all the traps are sent over to vRO</li><li>vRO needs to constantly listen for the right trap. This puts extra pressure on vRO</li><li>Not a very clean way of handling the traps</li></ul><p><strong>REST Notification</strong> </p><p><em>Merits</em> </p><ul><li>Much cleaner way of handling the alerts</li><li>Alert specific workflow can be initiated from vRO</li><li>vRO does not need to listen for alerts/traps. The workflow runs only when an alert is triggered.</li></ul><p><em>De-Merits</em> </p><ul><li>Needs extra resource and configuration</li><li>Right now, the dependent technologies are not tested for scale in production</li></ul><p><strong>vRO Plugin</strong> </p><p><em>Merits</em> </p><ul><li>No extra overhead at vRO</li><li>Fully supported from VMware</li><li>Easier processing of alerts than SNMP traps</li><li>Workflows are fired as per alert, so no extra overhead at vRO</li></ul><p><em>De-Merits</em> </p><ul><li>Lenghtier setup than SNMP traps</li><li>For some, the configuration may seem complex</li></ul><p>For my lab, I have chosen to demonstrate REST Notification and vRO Plugin. If you need details on how to setup and use SNMP traps, then check my <a href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html">earlier post</a>. </p><p>One point to note, REST notification sends data in JSON format. The format in which vROps sends data is not understood by vRO. vRO expects data in another format. So, to solve this, we need Webhook Shims in between. Webhook Shims works as translator for vRO. This is the extra configuration needed for REST notification. In my opinion, result is worth the extra effort. Provided below is a picture on how Webhook Shims work in the entire scenario.</p><p><img src="/images/Auto-Scaling-Deep-Dive/Webhook Shims.png" alt="Webhook Shims" class="responsive"></p><p>Also, for this demonstration I am selecting only CPU as the triggering mechanism. For a more detailed demonstration with load balancers (NSX) and HTTP hits as triggering mechanism, please check my <a href="https://sajaldebnath.com/how-to-configure-auto-scaling-for-private-cloud.html">earlier post</a>.</p><p><strong>Special mention</strong> </p><p>I am impressed with vRO plugin method of alert triggering. Perhaps the most useful till now. For future references I am going to depend more and more on this method.</p><p>Please check up the video for a detailed description on how to configure and set this up. I have spent some time in detailing this process.</p><p>For background read please check the blogs from John Dias </p><ul><li><a href="https://blogs.vmware.com/management/2018/04/introducing-vrealize-orchestrator-management-pack-vrealize-operations.html" target="_blank" rel="noopener">First Blog - Introduction</a> </li><li><a href="https://blogs.vmware.com/management/2018/10/put-your-operations-in-overdrive-technical-overview-of-the-vrealize-operations-management-pack-for-vrealize-orchestrator-2-0.html" target="_blank" rel="noopener">Second Blog - Details</a> </li></ul><p>For detailed information, check the <a href="https://marketplace.vmware.com/vsx/solutions/management-pack-for-vrealize-orchestrator#resources" target="_blank" rel="noopener">documentation</a> .</p><h4 id="Videos"><a href="#Videos" class="headerlink" title="Videos"></a>Videos</h4><p>For more details, check the following video.</p><p><em>I tried to record the video 4 times and somehow all four times it crashed my system. This is reason I am so late in publishing the blog. Finally, I have divided the recording in two parts. The first part has the theoretical aspect explained. The second part has the demo in my lab. So, depending on what you are looking for, you can watch the videos accordingly.</em> </p><p><strong>Auto Scale - Part 1 - Details</strong> </p><div class="video-container"><iframe src="//www.youtube.com/embed/CbgikoPEbcg" frameborder="0" allowfullscreen></iframe></div><p><strong>Auto Scale - Part 2 - Demo</strong> </p><div class="video-container"><iframe src="//www.youtube.com/embed/9rJGRN6IulE" frameborder="0" allowfullscreen></iframe></div><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement"></a>Acknowledgement</h4><p>I am thankful to VMware for the softwares in the lab and the presentation template used in the presentation. The quality of the ppt template is unparalleled and I like the simplicity. I am also thankful to <strong>Ron Tsai</strong> for sharing the updated workflows.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p>This is a very useful feature. Specially in the virtualization and cloud computing age. Though the examples I gave are using VMware technologies, you can build this solution using any other tools. Please check the solution and let me know your feedbacks. As always, thanks for your time and patience.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Operations </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Journey from Wordpress to Hexo and Clarity</title>
      <link href="/journey-from-wordpress-to-hexo-and-clarity.html"/>
      <url>/journey-from-wordpress-to-hexo-and-clarity.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I recently moved my blog from Wordpress to Hexo. Also, I moved hosting platform from Siteground to S3 (AWS). This blog post details the rationale behind the decisions. It also describes how I learnt to build a Hexo theme using VMware Clarity environment. So overall this captures the following topics:</p><ul><li>My journey from Wordpress to Hexo</li><li>From hosted environment to static self hosting </li><li>And finally building my own theme in hexo</li><li>Also I will cover some portion to make the blog SEO optimized</li></ul><p>If you are interested in the above topics, then read on.</p><h5 id="Why-S3-and-Static-site"><a href="#Why-S3-and-Static-site" class="headerlink" title="Why S3 and Static site?"></a>Why S3 and Static site?</h5><p>My site was built on Wordpress and hosted on Siteground. Siteground provides very good services. I never had issues with Siteground. Also, Wordpress is a very good platform, well tested. Very easy to use and widely supported. So why did I decide to move away from both the platforms? The main reasons are given below:</p><ul><li>Performance</li><li>Convenience</li><li>Financial</li></ul><p>Let me explain the reasons one by one.</p><ul><li><p><strong>Performance:</strong><br>I noticed that instead of my best efforts (making my site minimal and applying a ton of optimizations) it was still not fast enough. The response time was sometimes in &gt; 10 seconds range. At best, I got around 5 seconds response time in <a href="https://tools.pingdom.com/" target="_blank" rel="noopener">Pingdom test</a>. Got similar results in <a href="https://gtmetrix.com/" target="_blank" rel="noopener">GTmetrix</a> and <a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">Pagespeed</a> test.</p></li><li><p><strong>Convenience:</strong><br>In Wordpress, I was forced to use the themes developed by others. I wanted to use a minimal theme with no extra options. But was always limited by the themes. Also, I could not apply or use best practices for SEO optimizations all the time.</p></li><li><p><strong>Financial:</strong><br>My contract renewal with Siteground was coming up. Their renewal charge was USD 239.40 for a year. This was a substantial amount for me. </p></li></ul><p><strong>Choosing the platform</strong></p><p>The first decision was to choose a platform which will be faster and will provide me absolute control over every aspect.<br>Since my site is pretty static in nature (once I write a blog, I do not change it) I decided to go for static websites. Static websites are amazingly fast as they do not need to build and deliver at runtime.</p><p>So, I decided to go for static website. Next question was to select a static website generator. You can check this site for available options for static site generators <a href="https://www.staticgen.com/" target="_blank" rel="noopener">staticgen.com</a>. The following were the main contenders. </p><table><thead><tr><th>Generator</th><th>Language</th><th>Template</th></tr></thead><tbody><tr><td>Jekyll</td><td>Ruby</td><td>Liquid</td></tr><tr><td>Next</td><td>Javascript</td><td>Javascript(React)</td></tr><tr><td>Hugo</td><td>Go</td><td>Go</td></tr><tr><td>Gatsby</td><td>Javascript</td><td>React</td></tr><tr><td>Hext</td><td>Javascript</td><td>EJS, Pug</td></tr></tbody></table><p>I chose Hexo because of the following reasons:</p><ul><li>I am most comfortable with Javascript as I have experience in that. </li><li>Generating a site in Hexo is pretty fast (much faster than Jekyll)</li><li>Lot of available plugins</li><li>I found EJS for templating to be easier than React</li></ul><p><strong>Hosting the Website</strong></p><p>So, platform and generator was selected. Next big question was to decide where to host the website. Since Siteground was charging a premium, I was not ready to shell out that amount.</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Oracle Weblogic-as-a-Service for vRealize Automation</title>
      <link href="/oracle-weblogic-as-a-service-for-vrealize-automation.html"/>
      <url>/oracle-weblogic-as-a-service-for-vrealize-automation.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Recently I got a request to build a Weblogic-as-a-Service in vRealize Automation for a customer. This post provides details of that custom built Out-of-the-Box Oracle Weblogic-as-a-Service in vRealize Automation.</p><a id="more"></a><h4 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement:"></a><strong>Requirement:</strong></h4><p>The requirement is to deploy a Weblogic Cluster as a whole. Also, user should be able to choose any number of nodes in the cluster at runtime. For example, it may be anything within the range 1 to 20, etc.</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a><strong>Solution:</strong></h4><p>VMware vRealize Automation, vCenter Server and vRealize Orchestrator was used to build the overall solution. Red Hat Linux 7.2 was selected as the base operating system for the Weblogic platform. Provided below are the details of the technologies used:</p><ul><li>VMware vRealize Automation 7.2 (It should work with other versions as well)</li><li>VMware vCenter Server 6.0 U3 (Should work with other versions as well)</li><li>VMware vRealize Orchestrator 7.2 (7.x versions should work)</li><li>RHEL 7.2</li><li>Java 1.8.0_151</li><li>Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</li><li>Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode</li><li>Oracle WebLogic Server 12.2.1.3 (Generic)</li></ul><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>Provided below are the pre-requisites for the solution. There are multiple stages of the solution.</p><ol><li>A properly installed and configured vRealize Automation should be available</li><li>Proper licenses should be available in vRealize Automation</li><li>Build out the Template for the solution</li></ol><p>Provided below are the steps for building out the Template to be used for the solution. </p><p><strong>Step-1: Create a VM and install RHEL 7.2 in it. The VM configuration is as given below:</strong></p><ul><li>16GB RAM</li><li>8 GB Swap</li><li>4 vCPUs</li><li>/weblogic - 50 GB</li><li>/weblogs - 50 GB</li></ul><p>Also, make sure to run the following commands to install required packages in the base image:</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> gcc*yum <span class="token function">install</span> compat-libcap*yum <span class="token function">install</span> compat-libstdc*yum <span class="token function">install</span> libaio*</code></pre><p><strong>Step-2: Prepare the RHEL 7.2 VM Template:</strong></p><ul><li>Install Java on Template VM with below version:<ul><li>java version “1.8.0_151”</li><li>Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</li><li>Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</li></ul></li><li>Set <strong>JAVA_HOME</strong> in environment variable.</li><li>Download latest Weblogic generic download files from (<a href="http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/middleware/weblogic/downloads/wls-for-dev-1703574.html</a>)</li><li>Install sshpass on RHEL 7.2 template</li></ul><p><strong>Step-3: WebLogic-Common-Environment-Creation</strong> </p><p>Run the following commands to build the common environment for Weblogic.</p><pre class=" language-bash"><code class="language-bash">/usr/sbin/groupadd -g 666 wladmin/usr/sbin/useradd -u 666 -g wladmin -G wladmin wladmin/usr/bin/echo -e <span class="token string">"<span class="token variable">$Pass1</span>\\n<span class="token variable">$Pass1</span>"</span> <span class="token operator">|</span> <span class="token punctuation">(</span>/usr/bin/passwd --stdin wladmin<span class="token punctuation">)</span>/usr/bin/mkdir -p /WebLogic/oracle/inventory/usr/bin/chown -R wladmin:wladmin /WebLogic/usr/bin/chmod -R 775 /WebLogic/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p /WebLogic/oracle/middleware"</span>/usr/bin/java -version/usr/bin/touch /etc/oraInst.loc/usr/bin/echo <span class="token string">"inventory_loc=/WebLogic/oracle/inventory"</span> <span class="token operator">></span> /etc/oraInst.loc/usr/bin/echo <span class="token string">"inst_group=wladmin"</span> <span class="token operator">>></span> /etc/oraInst.loc/usr/bin/chown wladmin:wladmin /etc/oraInst.loc/usr/bin/chmod 775 /etc/oraInst.loc</code></pre><p><strong>Step-4: WebLogic-Response-File-Creation</strong> </p><p>Run the following commands to create the response file  </p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">></span> /WebLogic/oracle/Install.rsp <span class="token operator">&lt;&lt;</span> <span class="token string">EOF[ENGINE]#DO NOT CHANGE THIS.Response File Version=1.0.0.0.0[GENERIC]#The oracle home location. This can be an existing Oracle Home or a new Oracle HomeORACLE_HOME=/WebLogic/oracle/middleware#Set this variable value to the Installation Type selected. e.g. Fusion Middleware Infrastructure, Fusion Middleware Infrastructure With Examples.INSTALL_TYPE=WebLogic Server#Provide the My Oracle Support Username. If you wish to ignore Oracle Configuration Manager configuration provide empty string for user name.MYORACLESUPPORT_USERNAME=#Provide the My Oracle Support PasswordMYORACLESUPPORT_PASSWORD=&lt;secure value="">#Set this to true if you wish to decline the security updates. Setting this to true and providing empty string for My Oracle Support username will ignore the Oracle Configuration Manager configurationDECLINE_SECURITY_UPDATES=true#Set this to true if My Oracle Support Password is specifiedSECURITY_UPDATES_VIA_MYORACLESUPPORT=false#Provide the Proxy HostPROXY_HOST=#Provide the Proxy PortPROXY_PORT=#Provide the Proxy UsernamePROXY_USER=#Provide the Proxy PasswordPROXY_PWD=&lt;secure value="">#Type String (URL format) Indicates the OCM Repeater URL which should be of the format [scheme[Http/Https]]:/[repeater host]:[repeater port]COLLECTOR_SUPPORTHUB_URL=EOF</span><span class="token operator">&lt;</span>/secure<span class="token operator">></span><span class="token operator">&lt;</span>/secure<span class="token operator">></span></code></pre><pre class=" language-bash"><code class="language-bash">/usr/bin/echo <span class="token string">"Created the response file"</span>/usr/bin/chown wladmin:wladmin /WebLogic/oracle/Install.rsp</code></pre><p><strong>Step-5:  WebLogic-Installation-Prerequisite</strong>  </p><pre class=" language-bash"><code class="language-bash">/usr/bin/ls -ltr /WebLogic/oracle/middleware<span class="token function">export</span> WL_HOME<span class="token operator">=</span>/WebLogic/oracle/middleware/wlserver/usr/bin/cp  /root/fmw\_12.2.1.3.0\_wls.jar /home/wladmin//usr/bin/chown wladmin:wladmin  /home/wladmin/fmw\_12.2.1.3.0\_wls.jar/usr/bin/su  - wladmin -c <span class="token string">"java -jar /home/wladmin/fmw\_12.2.1.3.0\_wls.jar -silent -invPtrLoc/etc/oraInst.loc -responseFile /WebLogic/oracle/Install.rsp -logfile /WebLogic/oracle/wlsInstall.log"</span>/usr/bin/ls -ltr /WebLogic/oracle/middleware</code></pre><p><strong>Step-6:  Disable Firewall or open firewall ports</strong> We need to either disable the firewall or open ports in the firewall. For this example, we will disable the firewall in the template.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> firewalld stopsystemctl disable firewalld</code></pre><p>Once the Template is ready, export and use it in vRealize Automation.</p><h4 id="Blueprint-Creation"><a href="#Blueprint-Creation" class="headerlink" title="Blueprint Creation"></a>Blueprint Creation</h4><p>Using the above template create a Blueprint in vRealize Automation (as per your requirement). A sample screenshot is provided below: </p><p><img src="/images/2018/02/Blueprint-1.jpg" alt="Blueprint 1" class="responsive"></p><p>Blueprint 1</p><p>Save the blueprint and follow the process to expose it as a Catalog Item in vRealize Automation. </p><p><strong> Please note, while giving entitlement, please provide </strong>“Scale Out (Deployment)”** as an Action Item on the items. </p><p><strong>Import the vRO Package:</strong> Download the vRO package from <a href="https://github.com/sajaldebnath/Weblogic-as-a-Service" target="_blank" rel="noopener">GitHub Repository</a>. Next, import the vRO package <strong>“com.vmware.library.weblogic-as-a-service.package”</strong> in vRealize Orchestrator server.</p><h4 id="Build-the-Catalog-Item"><a href="#Build-the-Catalog-Item" class="headerlink" title="Build the Catalog Item"></a>Build the Catalog Item</h4><p>Next, build a XaaS catalog item in vRealize Automation. Login to vRA with a user with proper rights to create a XaaS Blueprint. Go to Design à XaaS à XaaS Blueprints. Click on New, in the new window, select “Weblogic-as-a-Service” workflow under the Weblogic-as-a-Service Folder in vRO workflow list. Press next and select all the default values. </p><p><img src="/images/2018/02/Blueprint-2.jpg" alt="Image1" class="responsive"></p><h4 id="Setting-up-Values-in-vRO"><a href="#Setting-up-Values-in-vRO" class="headerlink" title="Setting up Values in vRO"></a>Setting up Values in vRO</h4><p>We need to set up the following values in <strong>“Weblogic-as-a-Service”</strong> in vRO. </p><p><img src="/images/2018/02/Value-List.png" alt="Image2" class="responsive"></p><p>Provided below are few screenshots as an example. </p><p><img src="/images/2018/02/vRO-Package-Values-1.jpg" alt="Image3" class="responsive"></p><p><img src="/images/2018/02/vRO-Package-Values-2.jpg" alt="Image4" class="responsive"></p><p><img src="/images/2018/02/vRO-Package-Values-3.jpg" alt="Image5" class="responsive"></p><p><img src="/images/2018/02/vRO-Package-Values-4.jpg" alt="Image6" class="responsive"></p><h4 id="Requesting-the-Item"><a href="#Requesting-the-Item" class="headerlink" title="Requesting the Item"></a>Requesting the Item</h4><p>Login to the vRealize Automation portal with proper rights. Select the exported Catalog Item and Click on “Request”. </p><p><img src="/images/2018/02/Request-1-1.jpg" alt="Image7" class="responsive"></p><p>In the next page provide the following details:</p><ul><li>Enter the number of Cluster Nodes:</li><li>Enter the Weblogic User Name:</li><li>Enter the Weblogic User Password:</li></ul><p><img src="/images/2018/02/Request-2-1.jpg" alt="Image8" class="responsive"></p><p>Once the request is submitted, it will initiate tasks in vRO which in turn will initiate the following serial tasks in vRA.</p><ul><li>Deploying an instance of the Weblogic Catalog Item</li><li>Scale out the Deployment from above step as per the number of cluster nodes.</li><li>Once both the above tasks as finished, rest of the Weblogic installation and configuration will be done in vRO</li></ul><p>Once all the above is complete, the original Catalog Item request of “Weblogic-as-a-Service” will complete and marked as “Successful”. A typical successful workflow run in vRO looks like following: </p><p><img src="/images/2018/02/vRO-workflow-run-1.jpg" alt="Image 9" class="responsive"></p><h4 id="Testing-the-Deployment"><a href="#Testing-the-Deployment" class="headerlink" title="Testing the Deployment"></a>Testing the Deployment</h4><p>Once the Request is successful, identify the Admin node with the lowest denominator. For example, if you had chosen a 4-node cluster and the nodes are named as weblogic-1, weblogic-2, weblogic-3 and weblogic-4 then weblogic-1 is the Admin node. Remember, the node with lowest number is always the Admin node as it is deployed first. </p><p><img src="/images/2018/02/Admin-Node-1.jpg" alt="Image 10" class="responsive"></p><p>Note, the IP of the Admin Node. SSH to the admin node and run the following commands:</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># cd /WebLogic/oracle/middleware/user_projects/domains/base_domain/bin</span><span class="token comment" spellcheck="true"># nohup ./startNodeManager.sh &amp;</span><span class="token comment" spellcheck="true"># nohup ./startWebLogic.sh &amp;</span><span class="token comment" spellcheck="true"># ./startManagedWebLogic.sh MS-01 http://&lt;ip of="" admin="" node="">:7001</span><span class="token operator">&lt;</span>/ip<span class="token operator">></span></code></pre><p>Note, the last command. MS-01 is the admin node, provide the IP address of Admin node in the URL. After the above open the following URL in a browser: <strong>http://<ip of="" admin="" node="">:7001/console</ip></strong> This will open the Weblogic Console. Login with Weblogic admin user id and password provided at setup time. In my case, the user was <strong>“weblogic”</strong>. </p><p><img src="/images/2018/02/Weblogic-Page-1.jpg" alt="Image 11" class="responsive"></p><p><img src="/images/2018/02/Weblogic-Page-2.jpg" alt="Image 12" class="responsive"></p><h4 id="Workflow-Explanation"><a href="#Workflow-Explanation" class="headerlink" title="Workflow Explanation"></a>Workflow Explanation</h4><p>The vRO workflow is divided into multiple parts.</p><ul><li>The first part deploys the required number of VM’s in vRA and collects the relevant information about them (IPADDRESS, Hostname etc.)</li><li>The Second part runs the scripts inside the Guest Operating system of the nodes to install and configure Weblogic Cluster in the nodes.</li></ul><p><strong>In the next section, we will elaborate each one of them.</strong> </p><p><img src="/images/2018/02/Main-Workflow-First-part.jpg" alt="Image 13" class="responsive"></p><ul><li>First part of the script requests the deployment in vRA. This first VM is considered the Admin node.</li></ul><p><img src="/images/2018/02/Workflow-1.png" alt="Image 14" class="responsive"></p><ul><li>In the next part, depending on the number of nodes, if a single node cluster is selected, then a Single Node Cluster configuration is set.</li></ul><p><img src="/images/2018/02/Workflow-2.png" alt="Image 15" class="responsive"></p><p><strong>The script related to single Node Cluster is provided below:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadTemplate('/WebLogic/oracle/middleware/wlserver/common/templates/wls/wls.jar')cd('Servers/AdminServer')cmo.setListenAddress("<span class="token variable">$HostName01</span>.lab.local")setOption('ServerStartMode','prod')set('ListenPort', 7001)create('AdminServer','SSL')cd('SSL/AdminServer')set('Enabled', 'True')set('ListenPort', 7002)cd('/')cd('Security/base_domain/User/weblogic')cmo.setPassword('<span class="token variable">$weblogicpass</span>')setOption('ServerStartMode','prod')setOption('OverwriteDomain', 'true')writeDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')closeTemplate()exit()EOF</span>/usr/bin/echo <span class="token string">"Domain Configured on <span class="token variable">$HostName01</span>.lab.local"</span>/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')cd('/')create('MS-01', 'Server')cd ('Servers')cd ('MS-01')set('ListenPort', 7004)set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')create('basecluster', 'Cluster')assign('Server', 'MS-01','Cluster','basecluster')cd('Cluster/basecluster')set('ClusterMessagingMode', 'unicast')set('WeblogicPluginEnabled', 'true')cd('/')create('Machine01', 'Machine')assign('Server', 'MS-01','Machine','Machine01')cd('Machines/' + 'Machine01/')create('Machine01', 'NodeManager')cd('NodeManager/' + 'Machine01')set('NMType', 'Plain')set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')set('DebugEnabled', 'false')updateDomain()closeDomain()disconnect()exit()EOF</span><span class="token function">export</span> DOMAIN\_HOME<span class="token operator">=</span>/WebLogic/oracle/middleware/user\_projects/domains/base_domain<span class="token function">export</span> WL_HOME<span class="token operator">=</span>/WebLogic/oracle/middleware/wlserver/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security"</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/cat > /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security/boot.properties"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFusername=<span class="token variable">$weblogicuser</span>password=<span class="token variable">$weblogicpass</span>EOF</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/sed -i -e 's/SecureListener=true/SecureListener=false/g' /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/nodemanager/nodemanager.properties"</span>/usr/bin/su - wladmin -c <span class="token string">"nohup /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/bin/startNodeManager.sh &amp;"</span>/usr/bin/su - wladmin -c <span class="token string">"nohup /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/bin/startWebLogic.sh &amp;"</span>/usr/bin/su - wladmin -c <span class="token string">"nohup /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/bin/startManagedWebLogic.sh MS-01"</span></code></pre><ul><li>In the next section we scale out the deployment to match the number of required nodes</li></ul><p><img src="/images/2018/02/Workflow-3.png" alt="Image 16" class="responsive"></p><ul><li>Next, we collect the required information regarding the Managed Nodes</li></ul><p><img src="/images/2018/02/Workflow-4.png" alt="Image 17" class="responsive"></p><ul><li>Next, we prepare the Admin Node for initial settings</li></ul><p><img src="/images/2018/02/Workflow-5.jpg" alt="Image 18" class="responsive"></p><p><strong>Provided below is the script for Admin Node Setup:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadTemplate('/WebLogic/oracle/middleware/wlserver/common/templates/wls/wls.jar')cd('Servers/AdminServer')cmo.setListenAddress("<span class="token variable">$HostName01</span>.lab.local")setOption('ServerStartMode','prod')set('ListenPort', 7001)create('AdminServer','SSL')cd('SSL/AdminServer')set('Enabled', 'True')set('ListenPort', 7002)cd('/')cd('Security/base_domain/User/weblogic')cmo.setPassword('<span class="token variable">$weblogicpass</span>')setOption('ServerStartMode','prod')setOption('OverwriteDomain', 'true')writeDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')closeTemplate()exit()EOF</span>/usr/bin/echo <span class="token string">"Domain Configured on <span class="token variable">$HostName01</span>.lab.local"</span>/usr/bin/touch /tmp/answers.txt/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFreadDomain('/WebLogic/oracle/middleware/user\_projects/domains/base\_domain')cd('/')create('MS-01', 'Server')cd('Servers')cd('MS-01')set('ListenPort', 7004)set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')EOF</span></code></pre><p><strong>Next comes the second major part of the Workflow. In this section, we configure the managed nodes.</strong> </p><p><img src="/images/2018/02/Workflow-6.png" alt="Image 19" class="responsive"></p><p>In this portion, we are dynamically building an answers.txt file which will have all the inputs for the Weblogic Cluster. This file is dynamic as the number of nodes vary and so does the IPADDRESS and Hostname. Let’s break up and elaborate the parts one by one. </p><p><img src="/images/2018/02/Workflow-6-3.png" alt="Image 20" class="responsive"></p><p><strong>The script used in answersBuild1 is provided below:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFcd('/')create('MS-REPLACE', 'Server')cd('Servers')cd('MS-REPLACE')set('ListenPort', 7004)set('ListenAddress', '<span class="token variable">$HostNameReplace</span>.lab.local')EOF</span></code></pre><ul><li>Next part has the answersbuild2 script.</li></ul><p><img src="/images/2018/02/Workflow-6-2.png" alt="Image 21" class="responsive"></p><p><strong>The script of answersbuild2:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFcd('/')create('basecluster', 'Cluster')assign('Server', 'WEBLOGICSERVERNODES','Cluster','basecluster')cd('Cluster/basecluster')set('ClusterMessagingMode', 'unicast')set('WeblogicPluginEnabled', 'true')cd('/')create('Machine01', 'Machine')assign('Server', 'MS-01','Machine','Machine01')cd('Machines/' + 'Machine01/')create('Machine01', 'NodeManager')cd('NodeManager/' + 'Machine01')set('NMType', 'Plain')set('ListenAddress', '<span class="token variable">$HostName01</span>.lab.local')set('DebugEnabled', 'false')EOF</span></code></pre>*   Next is answersBuild3 script:<img src="/images/2018/02/Workflow-6-3.png" alt="Image 22" class="responsive">**The script for answersBuild3:**<pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFcd('/')create('MachineREPLACE', 'Machine')assign('Server', 'MS-REPLACE','Machine','Machine02')cd('Machines/' + 'MachineREPLACE/')create('MachineREPLACE', 'NodeManager')cd('NodeManager/' + 'MachineREPLACE')set('NMType', 'Plain')set('ListenAddress', '<span class="token variable">$HostName02</span>.lab.local')set('DebugEnabled', 'false')EOF</span></code></pre><ul><li>Next is answersBuild4. At this stage our answers.txt file is ready. Now we can simply read this file for the inputs to Weblogic Cluster setup.</li></ul><p><img src="/images/2018/02/Workflow-6-4.png" alt="Image 23" class="responsive"></p><p><strong>The script for answersBuild4:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/cat <span class="token operator">>></span> /tmp/answers.txt <span class="token operator">&lt;&lt;</span> <span class="token string">EOFupdateDomain()closeDomain()disconnect()exit()EOF</span><span class="token function">cat</span> /tmp/answers.txt/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle_common/common/bin/wlst.sh &lt; /tmp/answers.txt"</span>/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle\_common/common/bin/pack.sh -managed=true -domain=/WebLogic/oracle/middleware/user\_projects/domains/base\_domain -template=/WebLogic/oracle/middleware/user\_projects/domains/base\_domain-wlsTemplate.jar -template\_name=base_domain"</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security"</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/cat > /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/servers/AdminServer/security/boot.properties"</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOFusername=<span class="token variable">$weblogicuser</span>password=<span class="token variable">$weblogicpass</span>EOF</span>/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/sed -i -e 's/SecureListener=true/SecureListener=false/g' /WebLogic/oracle/middleware/user\_projects/domains/base\_domain/nodemanager/nodemanager.properties"</span></code></pre><ul><li>Next, we copy the generated template.jar file to each of the managed nodes</li></ul><p><img src="/images/2018/02/Workflow-6-5.png" alt="Image 24" class="responsive"></p><p><strong>Script for packFileBuildAdminNode:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/su - wladmin -c <span class="token string">"sshpass -p '<span class="token variable">$wladminpass</span>' scp -o StrictHostKeyChecking=no  /WebLogic/oracle/middleware/user\_projects/domains/base\_domain-wlsTemplate.jar  wladmin@<span class="token variable">$HostNameIPAdd</span>:/WebLogic/"</span>/usr/bin/echo <span class="token string">"<span class="token variable">$HostNameIPAdd</span>  <span class="token variable">$HostName02</span>.lab.local <span class="token variable">$HostName02</span>"</span> <span class="token operator">>></span> /etc/hosts</code></pre><ul><li>At the last stage, we login to each of the managed nodes and unpack the template.jar file in each one of them.</li></ul><p><img src="/images/2018/02/Workflow-6-6.png" alt="Image 24" class="responsive"></p><p><strong>Script for unpackManagedNode:</strong></p><pre class=" language-bash"><code class="language-bash">/usr/bin/echo <span class="token string">"<span class="token variable">$HostName1IPAdd</span>  <span class="token variable">$HostName1</span>.lab.local <span class="token variable">$HostName1</span>"</span> <span class="token operator">>></span> /etc/hosts/usr/bin/echo <span class="token string">"<span class="token variable">$AdminIPAdd</span>  <span class="token variable">$Admin</span>.lab.local <span class="token variable">$Admin</span>"</span> <span class="token operator">>></span> /etc/hosts/usr/bin/su - wladmin -c <span class="token string">"/usr/bin/mkdir -p  /WebLogic/oracle/middleware/user\_projects/domains/base\_domain"</span>/usr/bin/su - wladmin -c <span class="token string">"/WebLogic/oracle/middleware/oracle\_common/common/bin/unpack.sh -domain=/WebLogic/oracle/middleware/user\_projects/domains/base\_domain -template=/WebLogic/base\_domain-wlsTemplate.jar"</span></code></pre><h4 id="Yet-to-Do"><a href="#Yet-to-Do" class="headerlink" title="Yet to Do:"></a>Yet to Do:</h4><p>Currently, the package cannot do the following:</p><ul><li>Once the VM’s are deployed in vRA and later configuring the Weblogic packages if the workflows fail, the VM’s remain in vRA. The VM’s are not cleared.</li><li>As a future option, I plan to add an action item which will let the end user add a number of nodes at a later point in time</li></ul><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>Using the process described in the post you can create Oracle Weblogic-as-a-Service in vRealize Automation environment. As always do let me know if this was helpful to you.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VMworld report from the field</title>
      <link href="/vmworld-report-from-the-field.html"/>
      <url>/vmworld-report-from-the-field.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I am attending this year’s VMworld US and decided to write my experience so far. Read on to know what’s new with VMware and other technologies.</p><a id="more"></a><h4 id="Details"><a href="#Details" class="headerlink" title="Details:"></a>Details:</h4><p>First, this is an amazing experience. If you are someone working with VMware technologies, then at least once you need to be in a VMworld. It’s amazing to see so many people in a single place talking about the same technology. The energy is infectious and you get that sense of belonging. This year VMworld is not an exception. So without further ado let me start about my experience so far.</p><h4 id="Day-1-keynote"><a href="#Day-1-keynote" class="headerlink" title="Day 1 keynote:"></a>Day 1 keynote:</h4><p>It is the keynote which is most important part to watch out for. It is where you get to understand where the company is heading forward to. Pat did not disappoint in giving his views on future of technology. As per him “tech is leaving the nest of tech and is now woven into the future of our fabric”. Andy Jassy of AWS joined Pat in the keynote to announce the initial availability of VMware on AWS solution. He also announced few new offerings.</p><ul><li>VMware Cloud Services</li><li>VMware Appdefense</li><li>New version of VMware integrated OpenStack and vRealize Network Insight</li></ul><h4 id="Day-2-General-Session"><a href="#Day-2-General-Session" class="headerlink" title="Day 2 General Session:"></a>Day 2 General Session:</h4><p>Day 2 started with an amazing general session. It started with a fireside chat between Pat Gelsinger and Michael Dell. Later they were joined on stage by Rob Mee of Pivotal and Sam Ramjee of Google. They talked about Pivotal Cloud Foundry/Services and “Kubo”. Full support for Kubernetes cluster. Automation for Kubernetes. Amazing to see container as the first class citizen. Also, now containers have full support out of the box for storage and network. NSX provides out of the box network support for containers. Next came the most exciting part, demo, I was very impressed with the demo presented by Purnima Padmanavan and Chris Wolf of VMware. The way the entire story was built is amazing. The showcased capabilities blew the mind. VMware Cloud Services (a series of features on Cloud - SaaS model) is something I am looking forward to. Now VMware has IaaS, PaaS, CaaS (container as a service) and FaaS services. The most exciting for me though was VMware FaaS services (Function as a Service). Something similar to what you get in AWS Lambda. But the important point is, you get the same functionality in an on-prem environment. Do you have vSphere environment? Sure, we run FaaS there. How cool is that? Did you know that vRealize Network Insight not only monitors your network environment but also profiles your applications? It can tell you which applications are a good fit for migration to Cloud and which are probably not.  It understands the dependencies from the network flow and provide suggestions.</p><h4 id="Solution-Exchange"><a href="#Solution-Exchange" class="headerlink" title="Solution Exchange:"></a>Solution Exchange:</h4><p>Like every year, this year also a range of partners have setup booth in Solution Exchange showcasing the amazing range of technologies. The major focus can be seen in the following areas:</p><ul><li>Infrastructure as a Service</li><li>Monitoring. Which again can be divided into the following groups<ul><li>Datacenter monitoring</li><li>Network monitoring</li><li>Cloud based monitoring</li><li>On-prem monitoring</li></ul></li><li>Software defined Storage</li><li>Software defined Network</li><li>Security. Both cloud based and on-prem</li></ul><p>VMvillage is something to look forward to. VMTN community has a good presence. Felt good to meet Corey Romero in person. Tim, amazing job with VMware{code}.</p><h4 id="Other-points"><a href="#Other-points" class="headerlink" title="Other points:"></a>Other points:</h4><p>No VMworld is complete without Hands-on-Labs. Awesome work. You need to be there to get the feel. The scale and time in which they built that are unbelievable. Certification site, Partner Exchange, Education booth all are amazing. This time VMware has a special zone for VMware solutions. Exciting to see the IoT and other solutions from VMware. As VMware employee, I did not have access to schedule builder. It is for customer and partners after all. But if there is a place I can always walk up to and attend. Due to my engagements and customer workshops, I could not attend any. But I will get and go through the sessions later as they become available.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>I feel honored and humbled to be in a VMworld. Being in the presence of so many amazing people humbles you. Also, you get the amazing opportunity to network with great minds. This is the place where you get to meet the people of whom we read. We learn from their blogs. Now we can directly meet them. I am looking forward to next two days.</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to manually edit vRealize Automation vPostgres database</title>
      <link href="/how-to-manually-edit-vrealize-automation-vpostgres-database.html"/>
      <url>/how-to-manually-edit-vrealize-automation-vpostgres-database.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Did you ever have the need to manually edit the vRealize Automation vPostgres database? This post covers exactly that topic. It provides detailed steps on how you can access the database and modify it. So without further ado start reading the post.</p><a id="more"></a><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>There are times when we are forced to modify the inbuilt database of vRA server.  Whereas very little documentation is available around it. This is for a good reason though. Modifying the database manually is very dangerous. It can render the entire environment useless. So <span style="color:red"><strong>DO NOT do it</strong></span> or at least avoid doing it. Unless you are hundred percent sure of what you are doing. I will consider you are warned enough. So, now I will go ahead and explain exactly how you can do it.</p><h4 id="Steps-to-modify-vRealize-Automation-vPostgres-Database"><a href="#Steps-to-modify-vRealize-Automation-vPostgres-Database" class="headerlink" title="Steps to modify vRealize Automation vPostgres Database:"></a>Steps to modify vRealize Automation vPostgres Database:</h4><p>Follow the below steps in sequence to modify the database. Before I explain the procedure, let me explain the use case first. I had the following problem: </p><p><strong>Issue:</strong> I had one custom resource type item (SQL:Database) in vRA. I had mistakenly deleted the original database from DB. Also, removed the Database entry from vCO SQL Databases list. So, now the item existed only in vRA DB. </p><p><strong>Action Taken</strong>: I created a Remove Database custom resource action in vRA and applied it on the item. It did not help. So the only option left was to manually remove the entry from vPostgres database. If you are stuck in a similar situation. Then this will be helpful for you. The logical steps are:</p><ul><li>First, enable access to vPostgres database</li><li>Then find out the password of the postgres user</li><li>Connect to the database and complete the tasks</li></ul><p>In my case, I wanted to connect to the database remotely from another machine. Use pgAdmin as a GUI tool and do the task from there. In your case, you may want to just log into the database locally and edit the database from SQL prompt. I chose GUI tool as I wanted to visually explore the database.</p><h4 id="Enabling-access-to-vPostgres-Database"><a href="#Enabling-access-to-vPostgres-Database" class="headerlink" title="Enabling access to vPostgres Database:"></a>Enabling access to vPostgres Database:</h4><p>First, log into the vRA appliance or SSH to it using root account. Next edit <strong>pg_hba.conf</strong> file</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /storage/db/pgdata/pg_hba.conf</code></pre><p>Check for the presence of the line</p><pre class=" language-bash"><code class="language-bash">local      all              postgres                            trust</code></pre><p>What this enables, is using the local machine you can use vcac user to login to the database. Since I wanted to access it remotely, I added the following line:</p><pre class=" language-bash"><code class="language-bash">host       all              all         10.110.23.148/24               trust</code></pre><p>The above line allows any user from the machine 10.110.23.148 to connect to the database. In the next step, edit the postgresql.conf file.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /storage/db/pgdata/postgresql.conf</code></pre><p>In that file add the following line</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#listen_addresses = 'localhost'         # what IP address(es) to listen on;</span>listen_addresses <span class="token operator">=</span> <span class="token string">'*'</span></code></pre><p>What I am doing here, is listening to everything. The above steps will let me connect to the database from my machine at 10.110.23.148.</p><h4 id="Get-the-vcac-user-password"><a href="#Get-the-vcac-user-password" class="headerlink" title="Get the vcac user password:"></a>Get the vcac user password:</h4><p>In the next stage, we need to get the password for the vcac user. Detailed steps for doing so is provided in this <a href="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2144071" target="_blank" rel="noopener">VMware KB article</a>. Run the following command</p><pre class=" language-bash"><code class="language-bash"><span class="token function">cat</span> /etc/vcac/server.xml <span class="token operator">|</span><span class="token function">grep</span> password<span class="token operator">=</span><span class="token string">"*"</span></code></pre><p>You get an output similar to: </p><pre class=" language-bash"><code class="language-bash"><span class="token operator">&lt;</span>resource abandonwhenpercentagefull<span class="token operator">=</span><span class="token string">"0"</span> auth<span class="token operator">=</span><span class="token string">"Container"</span> driverclassname<span class="token operator">=</span><span class="token string">"org.postgresql.Driver"</span> factory<span class="token operator">=</span><span class="token string">"com.vmware.vcac.tools.tomcat.db.CafeEncryptedDataSourceFactory"</span> fairqueue<span class="token operator">=</span><span class="token string">"false"</span> initialsize<span class="token operator">=</span><span class="token string">"10"</span> jdbcinterceptors<span class="token operator">=</span><span class="token string">"ResetAbandonedTimer"</span> jmxenabled<span class="token operator">=</span><span class="token string">"true"</span> logabandoned<span class="token operator">=</span><span class="token string">"true"</span> logvalidationerrors<span class="token operator">=</span><span class="token string">"true"</span> maxactive<span class="token operator">=</span><span class="token string">"100"</span> maxidle<span class="token operator">=</span><span class="token string">"20"</span> maxwait<span class="token operator">=</span><span class="token string">"120000"</span> minevictableidletimemillis<span class="token operator">=</span><span class="token string">"60000"</span> minidle<span class="token operator">=</span><span class="token string">"10"</span> name<span class="token operator">=</span><span class="token string">"jdbc/cafe"</span> **password<span class="token operator">=</span><span class="token string">"s2enc~646fCCJWPaSYJe91XKBpkrc1E+3N83n7ZIF3a+PGEaI="</span> **<span class="token operator">=</span><span class="token string">""</span> removeabandoned<span class="token operator">=</span><span class="token string">"true"</span> removeabandonedonborrow<span class="token operator">=</span><span class="token string">"true"</span> removeabandonedonmaintenance<span class="token operator">=</span><span class="token string">"true"</span> removeabandonedtimeout<span class="token operator">=</span><span class="token string">"240"</span> suspecttimeout<span class="token operator">=</span><span class="token string">"60"</span> testonborrow<span class="token operator">=</span><span class="token string">"true"</span> testonreturn<span class="token operator">=</span><span class="token string">"false"</span> testwhileidle<span class="token operator">=</span><span class="token string">"true"</span> timebetweenevictionrunsmillis<span class="token operator">=</span><span class="token string">"30000"</span> type<span class="token operator">=</span><span class="token string">"javax.sql.DataSource"</span> url<span class="token operator">=</span><span class="token string">"jdbc:postgresql://127.0.0.1:5433/vcac"</span> username<span class="token operator">=</span><span class="token string">"vcac"</span> validationinterval<span class="token operator">=</span><span class="token string">"30000"</span> validationquery<span class="token operator">=</span><span class="token string">"select 1"</span> validationquerytimeout<span class="token operator">=</span><span class="token string">"2"</span><span class="token operator">></span> <span class="token operator">&lt;</span>/resource<span class="token operator">></span></code></pre><p>Note the encrypted value after the password field. In this case the value is  <strong>“s2enc~646fCCJWPaSYJe91XKBpkrc1E+3N83n7ZIF3a+PGEaI=”.</strong>  In the next step we will find the actual password.</p><pre class=" language-bash"><code class="language-bash">/usr/lib/vcac/tools/config/bin/vcac-config prop-util -d --p s2enc~646fCCJWPaSYJe91XKBpkrc1E+3N83n7ZIF3a+PGEaI<span class="token operator">=</span> <span class="token operator">|</span> <span class="token function">less</span></code></pre><p>This will give you the password.</p><h4 id="Connecting-to-vPostgres-using-pgAdmin"><a href="#Connecting-to-vPostgres-using-pgAdmin" class="headerlink" title="Connecting to vPostgres using pgAdmin:"></a>Connecting to vPostgres using pgAdmin:</h4><p>Now all that is left is to connect to the database using the user id and password. Create a new connection to the vPostgres database and connect to it. Post connection it looks like the following: </p><p><img src="/images/2017/08/vPostgres-added-346x188.png" alt="Image 1" class="responsive"></p><p>Note the expanded view on the left. Next, we will explore the tables: </p><p><img src="/images/2017/08/Exploring-Views-1.png" alt="Image 2" class="responsive"></p><h4 id="Modifying-the-Database"><a href="#Modifying-the-Database" class="headerlink" title="Modifying the Database:"></a>Modifying the Database:</h4><p>Note the vRA items screen. It shows the information. </p><p><img src="/images/2017/08/With-Items.png" alt="Image 3" class="responsive"></p><p>Since I have resources which are custom resources. So the table I am interested in is <strong>asd_resource</strong>. This will have a list of items for custom resource. Now one of deleting is object by object. We need to follow this if say we have 10 items and we want to delete one or two of them.</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> asd_resource <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'sajalpgdb'</span><span class="token punctuation">;</span></code></pre><p>It will show the information with the resource id as well. Note the id. Try to delete the item by running the following command:</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">DELETE</span> <span class="token keyword">from</span> asd_resource  <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'sajalpgdb'</span><span class="token punctuation">;</span></code></pre><p>In all probability, it is going to fail showing a list of other tables where the item exists with the same name. For example, the table containing information about requests has reference to this. For this reason, the entry can not be deleted. So, you need to delete those references first and then, at last, delete the reference from this table. For example, provided below a list of possible places:</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> cat_resource <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'sajalpgdb'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> cat\_resource\_owners  <span class="token keyword">WHERE</span> resource_id <span class="token operator">=</span> <span class="token string">'c7ae9023-da0c-4960-b279-ae4dea6d0e8d'</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">from</span> cat\_resource\_owners  <span class="token keyword">WHERE</span> resource_id <span class="token operator">=</span> <span class="token string">'c7ae9023-da0c-4960-b279-ae4dea6d0e8d'</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">from</span> cat\_request <span class="token keyword">WHERE</span> resource\_id <span class="token operator">=</span> <span class="token string">'c7ae9023-da0c-4960-b279-ae4dea6d0e8d'</span><span class="token punctuation">;</span></code></pre><p>Likewise, it will go one, until the time we clear last of them. Since I have a lab environment which does not have much information. So I used another command which is very helpful:</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">TRUNCATE</span> asd_resource <span class="token keyword">CASCADE</span><span class="token punctuation">;</span><span class="token keyword">TRUNCATE</span> cat_resource  <span class="token keyword">CASCADE</span><span class="token punctuation">;</span></code></pre><p>What this does (TRUNCATE), it will clear the table from all information. Also, it will clear all the other references to these data (CASCADE). </p><p><img src="/images/2017/08/Truncate-1.png" alt="Image 4" class="responsive"></p><p><img src="/images/2017/08/Truncate-2.png" alt="Image 5" class="responsive"></p><p>Post the operation my vRA items list is blank: </p><p><img src="/images/2017/08/Clean-Items.png" alt="Image 6" class="responsive"></p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This is an easy and quick hack to tweak the inbuilt database. But please remember, <span style="color:red"><strong>this is destructive and strictly forbidden</strong></span>. Take responsibility and then perform these operations. Only do these as last resort and at that time also let VMware Support team do the work. Only do yourself if you are 200% sure of what you are doing. Hope after all that warning you still found this to be useful :).</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OOTB Shared DB as a Service complete with Day 2 Operations</title>
      <link href="/ootb-shared-db-as-a-service-complete-with-day-2-operations.html"/>
      <url>/ootb-shared-db-as-a-service-complete-with-day-2-operations.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>The [first part of the post]<a href="/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html" title="Out-of-the-box shared DB-as-a-Service in vRealize Automation">Out-of-the-box shared DB-as-a-Service in vRealize Automation</a> dealt with “Out of the box Shared DB as a Service”. In addition to other points, where I explained about Shared DB as a Service using a vRO package. Limitation of that package is, it only creates the DB in real Database. Created databases do not appear in vRA items list.<br><a id="more"></a><br>Also any Day 2 operation is not possible on the created Databases. While this post provides a complete package which adds the created databases as items in vRA. In addition, supports all Day 2 operations. Also now the package provides actions for out of the box Day 2 operations. This post details about that package.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>I received a lot of good feedback on the first version of the package. Also, I received many requests for making it fully functional. In its current form, it is very basic. Only creating shared databases in the database server actually achieves not much. So, I decided to take it further and give a complete feature set. Making it ideal for proof of concept environments. The functionalities are all there. The only point is, it is not fully tested for all the gotchas. So feel free to update the original workflows and packages.</p><h4 id="How-Shared-DB-as-a-Service-package-works"><a href="#How-Shared-DB-as-a-Service-package-works" class="headerlink" title="How Shared DB as a Service package works:"></a>How Shared DB as a Service package works:</h4><p>Like the [original package]<a href="/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html" title="Out-of-the-box shared DB-as-a-Service in vRealize Automation">Out-of-the-box shared DB-as-a-Service in vRealize Automation</a> , this time also all the workflows are available as a single package with the name <strong>“com.vmware.db-as-a-service-v3.package”</strong>. Please follow thebelow mentioned steps to import and run the workflows.</p><ul><li>Login to vRO client and go to Admin mode</li><li>Import the package in the Package manager</li><li>Once imported, go to Design mode.</li><li>You can find a new folder with the name “Database-as-a-Service”. Expand it and you can find the workflow “Setup Database-as-a-Service Environment”</li><li>Run this workflow and this will setup the entire environment</li></ul><p>Folder structure: </p><p><img src="/images/2017/08/Folder-Structure.png" alt="Shared DB as a Service folder structure" class="responsive"></p><h4 id="Important-Information"><a href="#Important-Information" class="headerlink" title="Important Information:"></a>Important Information:</h4><p>Before you can run the workflows please check the important information provided below:</p><ul><li>In the vRO server you need to add vRA CAFE and IaaS server as an endpoint.</li><li>vCenter server where the Database VM’s live, needs to be added as an endpoint in vRO. All these are mentioned in the video.</li><li>After the workflow run, log into vRA portal, go to <strong>Design –&gt; XaaS –&gt; Resource Actions –&gt; Select “Delete a Database”</strong>. Edit this action. In the second page select “Destroy”.</li><li>There was a knows issue with MySQL connector for vRO in vRA 7.2. I found the same issue in vRA 7.3 as well. Please check this <a href="https://kb.vmware.com/selfservice/microsites/search.do?language=en_US&amp;cmd=displayKC&amp;externalId=2148277" target="_blank" rel="noopener">VMware KB Article</a> to solve the issue.</li></ul><h4 id="Known-limitations"><a href="#Known-limitations" class="headerlink" title="Known limitations:"></a>Known limitations:</h4><p>The following limitation is there in the current form.</p><ul><li>While creating the databases, the workflow does not check whether the user already exists or not. It only checks for the Database existence</li><li>If a user already exists, then the database creation will fail</li><li>While deleting the database, the user is also deleted</li><li>MySQL database name does not support ‘-‘ in the name</li></ul><p>The above happens because of the assumption that a single user will create a single database. Clearly, this is a limitation. To remove this limitation, I need to update the Database creation scripts. At this stage, my primary focus is to give the functionalities. Anyone requiring more flexibility, please update the core scripts for database creations. In the video, I have covered how you can change the scripts.</p><h4 id="Database-creation-scripts"><a href="#Database-creation-scripts" class="headerlink" title="Database creation scripts:"></a>Database creation scripts:</h4><p>I am no authority on these databases. I created and configured the databases the quickest and easiest way. These do not conform the best practices :). These are applicable to a PoC environment only. Provided below are the steps for setting up the database environment.</p><h4 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL:"></a><strong>PostgreSQL:</strong></h4><p>I used CentOS 7.3 as base OS. Install steps:</p><pre class=" language-bash"><code class="language-bash">yum <span class="token function">install</span> postgresql*systemctl start postgresql.servicesystemctl status postgresql.servicesystemctl <span class="token function">enable</span> postgresql.service/usr/bin/postgresql-setup initdb<span class="token function">vi</span> /var/lib/pgsql/data/pg_hba.conf</code></pre><p>In the <strong>pg_hba.conf</strong> file check for the below lines and make changes as per your requirement</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># "local" is for Unix domain socket connections only</span>local   all             all                                     trust<span class="token comment" spellcheck="true"># IPv4 local connections:</span>host    all             all             127.0.0.1/32            identhost    all             all             0.0.0.0/0         trust</code></pre><p>Note, I gave all permission to everyone in the local machine. Also, I trusted everyone from everyone. Next, modify postgresql.conf file.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /var/lib/pgsql/data/postgresql.conf</code></pre><p>And made the following change</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#listen_addresses = 'localhost'         # what IP address(es) to listen on;</span>listen_addresses <span class="token operator">=</span> <span class="token string">'*'</span></code></pre><p>Finally ran the following:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">service</span> postgresql restartsystemctl disable firewalldsystemctl stop firewalldsystemctl status firewalld</code></pre><p><strong>Creating the Database:</strong></p><pre class=" language-bash"><code class="language-bash"><span class="token function">sudo</span> -u postgres psql -c <span class="token string">"CREATE USER usr WITH PASSWORD 'passwd'"</span><span class="token function">su</span> - postgres -c <span class="token string">"createdb testdb -O usr"</span></code></pre><p>Used pgAdmin version 4 as the front-end management component for managing PostgreSQL databases.</p><h4 id="MySQL-DB"><a href="#MySQL-DB" class="headerlink" title="MySQL DB:"></a>MySQL DB:</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">wget</span> https://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpmrpm -ivh mysql57-community-release-el7-9.noarch.rpmyum <span class="token function">install</span> mysql-serversystemctl start mysqldsystemctl status mysqldsystemctl <span class="token function">enable</span> mysqld<span class="token function">grep</span> <span class="token string">'temporary password'</span> /var/log/mysqld.logmysql\_secure\_installationmysqladmin -u root -p version</code></pre><p>Edited my.cnf file with</p><pre class=" language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/my.cnf</code></pre><p>And commented out the bind-address</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#bind-address   = 127.0.0.1</span></code></pre><p>I also enabled password less login for root user. So that while running the scripts, it will not ask for the password:</p><pre class=" language-bash"><code class="language-bash">mysql_config_editor <span class="token keyword">set</span> --login-path<span class="token operator">=</span>client --host<span class="token operator">=</span>localhost --user<span class="token operator">=</span>root –password</code></pre><p>I used HeidiSQL 9.4.0.5125 as the front-end management component for managing MySQL databases. Creating the Database:</p><pre class=" language-bash"><code class="language-bash">mysql -u root -e <span class="token string">"CREATE DATABASE IF NOT EXISTS testdb;"</span>mysql -u root -e <span class="token string">"CREATE USER 'usr'@'%' IDENTIFIED BY 'passwd';"</span>mysql -u root -e <span class="token string">"GRANT ALL PRIVILEGES ON testdb.* TO 'usr'@'%';"</span>mysql -u root -e "FLUSH PRIVILEGES<span class="token punctuation">;</span></code></pre><h4 id="MSSQL-DB"><a href="#MSSQL-DB" class="headerlink" title="MSSQL DB:"></a>MSSQL DB:</h4><p>Creating the Database:</p><pre class=" language-powershell"><code class="language-powershell"><span class="token namespace">[reflection.assembly]</span>::LoadWithPartialName<span class="token punctuation">(</span><span class="token string">"Microsoft.SqlServer.Smo"</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> <span class="token function">Out-Null</span><span class="token variable">$currenthost</span> = hostname<span class="token variable">$defaultInstance</span> = <span class="token string">"notdefault"</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$defaultInstance</span> <span class="token operator">-eq</span> <span class="token string">"yes"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>"</span><span class="token punctuation">}</span><span class="token keyword">Else</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>\\SHAREDINS"</span><span class="token punctuation">}</span><span class="token variable">$server</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SQLServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Server <span class="token variable">$ServerName</span><span class="token variable">$dbExists</span> = <span class="token boolean">$FALSE</span><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$individual_db</span> in <span class="token variable">$server</span><span class="token punctuation">.</span>databases<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$individual_db</span><span class="token punctuation">.</span>name <span class="token operator">-eq</span> <span class="token string">"testdb"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Database already exists."</span>    <span class="token variable">$dbExists</span> = <span class="token boolean">$TRUE</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$dbExists</span> <span class="token operator">-eq</span> <span class="token boolean">$FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$login</span> = <span class="token function">New-Object</span> Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Login <span class="token operator">-</span>ArgumentList <span class="token variable">$ServerName</span><span class="token punctuation">,</span> <span class="token string">"usr"</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>LoginType = <span class="token string">'SqlLogin'</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>PasswordPolicyEnforced = <span class="token boolean">$false</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>PasswordExpirationEnabled = <span class="token boolean">$false</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>Create<span class="token punctuation">(</span><span class="token string">'passwd'</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Login usr created"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Can not create Login usr"</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$database</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Database <span class="token operator">-</span>argumentlist <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token string">"testdb"</span>    <span class="token variable">$database</span><span class="token punctuation">.</span>Create<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Database testdb created"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Database testdb cannot be created"</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$user</span> = <span class="token string">"usr"</span>    <span class="token variable">$db_user</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>User <span class="token operator">-</span>argumentlist <span class="token variable">$database</span><span class="token punctuation">,</span> <span class="token variable">$user</span>    <span class="token variable">$db_user</span><span class="token punctuation">.</span>Login = <span class="token variable">$user</span>    <span class="token variable">$db_user</span><span class="token punctuation">.</span>Create<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Database user usr created"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Database user usr cannot be created"</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span>  <span class="token keyword">try</span><span class="token punctuation">{</span>    <span class="token variable">$server</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SQLServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Server <span class="token variable">$ServerName</span>    <span class="token variable">$data</span> = <span class="token function">New-Object</span> Microsoft<span class="token punctuation">.</span>SqlServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Database    <span class="token variable">$data</span> = <span class="token variable">$server</span><span class="token punctuation">.</span>Databases<span class="token punctuation">.</span>Item<span class="token punctuation">(</span><span class="token string">'testdb'</span><span class="token punctuation">)</span>    <span class="token variable">$data</span><span class="token punctuation">.</span>SetOwner<span class="token punctuation">(</span><span class="token string">'usr'</span><span class="token punctuation">,</span> <span class="token boolean">$TRUE</span><span class="token punctuation">)</span>    <span class="token variable">$data</span><span class="token punctuation">.</span>Alter<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token function">Write-Host</span> <span class="token string">"Database owner changed to usr"</span>  <span class="token punctuation">}</span>  <span class="token keyword">catch</span><span class="token punctuation">{</span>    <span class="token function">Write-Host</span> <span class="token string">"Cannot set database ownership to usr"</span>    <span class="token variable">$database</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token variable">$db_user</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token variable">$login</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">exit</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="Database-deletion-scripts"><a href="#Database-deletion-scripts" class="headerlink" title="Database deletion scripts:"></a>Database deletion scripts:</h4><p>I used the following scripts to delete the databases</p><h4 id="PostgreSQL-1"><a href="#PostgreSQL-1" class="headerlink" title="PostgreSQL:"></a>PostgreSQL:</h4><pre class=" language-bash"><code class="language-bash"><span class="token function">su</span> - postgres -c <span class="token string">"dropdb POSTGRESQLDB"</span><span class="token function">su</span> - postgres -c <span class="token string">"dropuser POSTGREUSER"</span></code></pre><h4 id="MySQL-DB-1"><a href="#MySQL-DB-1" class="headerlink" title="MySQL DB:"></a>MySQL DB:</h4><pre class=" language-bash"><code class="language-bash">mysql -u root -e <span class="token string">"DROP DATABASE MYSQLDB;"</span>mysql -u root -e <span class="token string">"DROP USER 'MYSQLUSER'@'%';"</span></code></pre><h4 id="MSSQL-DB-1"><a href="#MSSQL-DB-1" class="headerlink" title="MSSQL DB:"></a>MSSQL DB:</h4><pre class=" language-powershell"><code class="language-powershell"><span class="token namespace">[reflection.assembly]</span>::LoadWithPartialName<span class="token punctuation">(</span><span class="token string">"Microsoft.SqlServer.Smo"</span><span class="token punctuation">)</span> <span class="token punctuation">|</span> <span class="token function">Out-Null</span><span class="token variable">$currenthost</span> = hostname<span class="token variable">$defaultInstance</span> = <span class="token string">"yes"</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$defaultInstance</span> <span class="token operator">-eq</span> <span class="token string">"yes"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>"</span><span class="token punctuation">}</span><span class="token keyword">Else</span><span class="token punctuation">{</span>    <span class="token variable">$ServerName</span> = <span class="token string">"<span class="token variable">$currenthost</span>\\MSSQLINSTANCE"</span><span class="token punctuation">}</span><span class="token variable">$server</span> = <span class="token function">New-Object</span> <span class="token operator">-</span>TypeName Microsoft<span class="token punctuation">.</span>SQLServer<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Smo<span class="token punctuation">.</span>Server <span class="token variable">$ServerName</span><span class="token variable">$DatabaseName</span> = <span class="token string">"sajalmsdb"</span><span class="token variable">$DatabaseUser</span> = <span class="token string">"sajal"</span><span class="token function">Write-Host</span> <span class="token variable">$DatabaseName</span><span class="token function">Write-Host</span> <span class="token variable">$DatabaseUser</span><span class="token variable">$DBObject</span> = <span class="token variable">$Server</span><span class="token punctuation">.</span>Databases\<span class="token punctuation">[</span><span class="token variable">$DatabaseName</span>\<span class="token punctuation">]</span><span class="token function">Write-Host</span> <span class="token variable">$DBObject</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$DBObject</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token variable">$Server</span><span class="token punctuation">.</span>KillDatabase<span class="token punctuation">(</span><span class="token variable">$DatabaseName</span><span class="token punctuation">)</span>  <span class="token function">Write-Host</span> <span class="token string">"Deleted the Database"</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Server</span><span class="token punctuation">.</span>Logins<span class="token punctuation">.</span>Contains<span class="token punctuation">(</span><span class="token variable">$DatabaseUser</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token variable">$Server</span><span class="token punctuation">.</span>Logins\<span class="token punctuation">[</span><span class="token variable">$DatabaseUser</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span>Drop<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token function">Write-Host</span> <span class="token string">"Deleted the user login"</span> <span class="token punctuation">}</span></code></pre><p>Please note: <span style="color:red"><strong>NOT A SECURITY BEST PRACTICE</strong>. <strong>Do not do it in production</strong></span>. I only did it for PoC environment.</p><h4 id="The-Video"><a href="#The-Video" class="headerlink" title="The Video:"></a>The Video:</h4><p>Please watch the following video for a detailed demo and further explanation. </p><div class="video-container"><iframe src="//www.youtube.com/embed/1aoGHALKiv8" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This concludes this particular use case “Shared DB as a Service”. Please remember, the workflows I created are for PoC purpose only. My primary aim was to create the structure with the functionalities. Since the structure is ready, you can change the structure to suit your need. The vRA and vRO part is pretty much ok. I would strongly suggest the change or change the Database creation, change, and Deletion Shell/PowerShell scripts to make those more robust.   I specifically made this use case to show that you can do amazing things with vRealize Automation. It is a tool using which you can build whatever you want. When you have the tool you do not need everything out of the box. You can build your own items. With this thought, I am closing this post.  Till the next one, keep safe and happy automating!!!!</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Out-of-the-box shared DB-as-a-Service in vRealize Automation</title>
      <link href="/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html"/>
      <url>/out-of-the-box-shared-db-as-a-service-in-vrealize-automation.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>This blog post provides details of shared DB-as-a-Service capability in vRealize Automation. This functionality provided by vRO workflows. A vRO package was created and is available here. Details of the required tools and configuration steps are also provided. Also, the repository details of the package given.<br><a id="more"></a></p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h3><p>In last few months, I got many requests for shared DB-as-a-Service for private cloud. Specifically, the private clouds built with <a href="https://www.vmware.com/in/products/vrealize-automation.html" target="_blank" rel="noopener">VMware</a> vRealize Automation. Considering this, I decided to create a vRealize Orchestrator package for this purpose. This will provide such capability out-of-the box in vRA. Import the package, run a single workflow, provide the inputs. The services published in vRA Catalog. Any consumer requiring such service can request the items from Catalog. As of now, this package supports three different types of databases, MSSQL, PostgreSQL and MySQL.</p><h4 id="Why-Shared-DB-as-a-Service"><a href="#Why-Shared-DB-as-a-Service" class="headerlink" title="Why Shared DB-as-a-Service:"></a>Why Shared DB-as-a-Service:</h4><p>I want to cover a little background before going into details of the package contents. A dedicated database server is generally used for a production environment or for heavy workloads. For development or for testing we do not need a dedicated database server. The Same policy applies to milder workloads as well. For these use cases, we need a shared database server. Here we create a database instance on the same database server and consume it as per our need.</p><p>With the rise of Cloud services, shared DB-as-a-Service became very popular.  There, Database instances created and consumed as and when required. This post gives details of the vRO package which provides this exact functionality. This package used in vRealize Automation environment to provide shared DB-as-a-Service.</p><h4 id="How-it-works"><a href="#How-it-works" class="headerlink" title="How it works:"></a>How it works:</h4><p>First, download and import the vRealize Orchestrator package “com.vmware.db-as-a-service.package”. After import, as an admin, run the main workflow “Setup Database-as-a-Service Environment”. This workflow will set the environment. The workflow asks for the inputs and sets the environment. It publishes Catalog items. End users request for the item and get the services. Users provide details of user name, password and db name to create the databases.</p><h4 id="Required-environment"><a href="#Required-environment" class="headerlink" title="Required environment:"></a>Required environment:</h4><p>Provided below are the environmental details.</p><ul><li><p>vCenter Server 6.5</p></li><li><p>vRealize Automation Server 7.3</p></li><li><p>vRealize Orchestrator 7.3</p></li></ul><p><strong>Database versions.</strong></p><ul><li><p>PostgreSQL 9.4</p></li><li><p>MySQL 5.7.18</p></li><li><p>MSSQL 2014</p></li></ul><p><strong>VMware Environmental setup:</strong></p><ul><li><p>vRealize Orchestrator should have the following configuration</p></li><li><p>vCenter Server registered as an endpoint in vRO</p></li><li><p>Registered vRealize Automation Appliance (VAMI/CAFE APPLIANCE)</p></li><li><p>Registered IaaS server</p></li><li><p>A configured vRA environment (For details on how to configure check <a href="https://docs.vmware.com/en/vRealize-Automation/index.html" target="_blank" rel="noopener">this link</a>)</p></li></ul><p><strong>Database Environmental Setup:</strong></p><ul><li><p>A working PostgreSQL server</p></li><li><p>Remote connection configured in PostgreSQL server</p></li><li><p>Configured MySQL server</p></li><li><p>Local root login enabled in MySQL server. Configured passwordless root login. For security, you can configure password (in that case, change the original workflow)</p></li><li><p>MSSQL server installed and configured</p></li></ul><p> <strong>MSSQL Server:</strong></p><ul><li>Mixed mode or windows mode authentication is needed</li><li>The domain user which has access to the VM (runs the PowerShell script) should have admin access to the database to be able to create and delete databases and users.</li></ul><p>You can change the configurations as per your need. Let me know what modifications you need and I will incorporate them.</p><p>Also, configuring all three of the databases is not mandatory. If you have only one database environment, configure that and the rest skipped.</p><h4 id="Package-source-and-details"><a href="#Package-source-and-details" class="headerlink" title="Package source and details:"></a>Package source and details:</h4><p>I have created a <a href="https://github.com/sajaldebnath/shared-db-as-a-service" target="_blank" rel="noopener">GitHub repository</a> from where you can download the package. The package name is “com.vmware.db-as-a-service.package”. The package will create a folder “Database-as-a-Service” under the main workflow window. It also has “Helper Workflows”, “Database Creation Workflows” and “Environment Setup Workflows” folders. All these under this main “Database-as-a-Service” folder. The “Environment Setup Workflows” contains the workflows related to setting up the environment. The “Database Creation Workflows” contains the workflows which create the actual databases. “Helper Workflows” folder contains workflows to set and get the environment details.</p><p><img src="/images/2017/07/Folder-Structure.png" alt="Folder Structure for shared DB-as-a-Service" class="responsive"></p><p>The package contains other related workflows, actions, and resource items.</p><h4 id="How-to-run-the-workflows"><a href="#How-to-run-the-workflows" class="headerlink" title="How to run the workflows?"></a>How to run the workflows?</h4><p>The first thing to do is to setup the environment. So login to vRO server, import the package. Next, as an administrator run the “Setup Database-as-a-Service Environment” workflow. This will ask for the following inputs:</p><ul><li><p>vRA Cafe Appliance</p></li><li><p>Service to which to add the catalog items</p></li><li><p>Entitlement where to add the catalog items</p></li><li><p>Approval Policies (if any)</p></li></ul><p>Next three pages ask the database server details. Select the database server VM. Provide user name and password for the database VM’s. This will create and publish three different catalog items:</p><ul><li><p>MSSQL DB-as-a-Service</p></li><li><p>MySQL DB-as-a-Service</p></li><li><p>PostgreSQL DB-as-a-Service</p></li></ul><h4 id="Update"><a href="#Update" class="headerlink" title="Update:"></a><strong>Update:</strong></h4><p>Please note, the earlier version of the package only catered to the default instance of an MSSQL server (thanks Rawlinson Rivera for pointing this out). In the updated version, the MSSQL server database creation considers the named instances as well.</p><p>So for the MSSQL server provide the following added information:</p><p><strong>Default Instance:</strong> Whether default instance is used to DB creation. Please note, the default instance is typical “MSSQLSERVER” or “SQLExpress”. If at the time of installing the database, default instance name was selected then this should be “yes”. Otherwise “no” should be typed in.</p><p>Also note, please type in only “yes” or “no”. Currently, I have not provided any input validation here.</p><p><strong>Instance Name:</strong> Provide the instance name in which DB to be created. This is typically the named instance. Note, if this is the only instance on the server, still if the default name was not selected, then provide this value here.</p><p>All set, now end users can request the catalog items and get respective databases. They need to provide required inputs. The inputs required are </p><ul><li><p>User Name</p></li><li><p>Password</p></li><li><p>Database Name</p></li></ul><p>The workflows create a user in the database server. The password for the user is the one user provided. Also, a database created with the provided name. The created user is the owner of the database.</p><p><strong>Please watch the following video to see details and working of the service.</strong></p><div class="video-container"><iframe src="//www.youtube.com/embed/CSZGpqqcNHI" frameborder="0" allowfullscreen></iframe></div><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>This solution was based on work done by Christophe Decanini. I used the modified package available at <a href="https://code.vmware.com/samples/1151/guest-script-manager-package-for-vro-7-orginally-created-by-cdecanini-?h=vRealize%20Orchestrator" target="_blank" rel="noopener">this link</a>. The core logic uses the workflows created and described by his. So full credit goes to Christophe for this wonderful package.</p><h4 id="To-do"><a href="#To-do" class="headerlink" title="To do:"></a>To do:</h4><ul><li>Workflows for Deletion of an existing database.</li><li>To implement Error checking</li><li>Thorugh stability testing</li></ul><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the package and associated workflows to provide shared DB-as-a-Service in vRealize Automation environment. At this stage, the workflows are for PoC environment only. Though the workflows were tested for performance, not all use cases were covered nor diligent error checking was done. Till then please go ahead use it and let me know your feedbacks. Do let me know if you need more modifications or something else.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Automatically create custom dynamic groups in vROps as per vCenter Tags</title>
      <link href="/automatically-create-custom-dynamic-groups-in-vrops-as-per-vcenter-tags.html"/>
      <url>/automatically-create-custom-dynamic-groups-in-vrops-as-per-vcenter-tags.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Do you want to create custom dynamic groups in vROps which matches the tags created in vCenter server? You can do this manually, but you have large number of tags created. How to tackle that programmatically? This post covers the exact point. Read on to know how you can automatically create custom dynamic groups in vROps server. These groups will match the tags created in vCenter server.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>Last week I got a request from my friend Sunny Dua about a script which will automatically create custom groups in vROps server as per vCenter server tags. This started me thinking. If you have a large environment and you want to keep it organized, then tags in vCenter server is a must. Also creating custom dynamic groups in vROps matching to these vCenter Tags makes sense. So I created scripts to achieve this. Provided below are details of the scripts.</p><h4 id="Purpose-of-the-scripts"><a href="#Purpose-of-the-scripts" class="headerlink" title="Purpose of the scripts:"></a>Purpose of the scripts:</h4><p>The purpose of the script is two-fold.</p><ul><li>First, it should gather the tag names and tag category names from vCenter</li><li>Second, it would create custom dynamic groups in vROps server with matches the following criteria’s<ul><li>The name of the group is same as the tag names.</li><li>Also the membership of the group is dynamic in nature. Those VM’s will be part of a group for which “vSphere Tag” is equal to or contains the tag name/group name</li><li>If a “Group Type” is created in vROps server which is</li></ul></li></ul><p>So essentially you get custom groups in vROps server with names equal to tag names in vCenter server. The members of the group are the respective VM’s tagged with tagname.</p><h4 id="Capabilities-and-limitations"><a href="#Capabilities-and-limitations" class="headerlink" title="Capabilities and limitations:"></a>Capabilities and limitations:</h4><p>Provided below are a list of capabilities of the script:</p><p><strong>Data gathering:</strong></p><ul><li>Default behavior is to return all the tag names and their respective tag category names.</li><li>You can specify if you need the tag names of a particular tag category. If you specific the category name then only the tag names belonging to that category will be returned</li></ul><p><strong>Custom Group Creation:</strong></p><p>Create the custom group as per the vCenter tag name</p><ul><li>The VM’s with the tag names will be part of those custom groups</li><li>If “Group Type” is pre-created in vROps server (as per the Tag Category name), then the custom groups will be part of the respective “Group Type”</li><li>You can specify the following custom values:<ul><li>adapterKind</li><li>resourceKind</li><li>Properties (with which to match the members)</li><li>operator (method of checking, e.g., IS|CONTAINS| IS NOT etc.)</li><li>adapterKindkey</li><li>create_by_tag_category</li></ul></li></ul><p><strong>Provided below are the limitation of the custom group creation</strong> In vROps server we can have two different custom dynamic groups with the same name, provided they are part of different “Group Type”. The script currently checks for duplicate custom group name but does not check for the Group type. So you will not be able to create two custom dynamic groups with same name in any way. To do: If a match for custom group name found then further check for the Group Type field.</p><h4 id="Required-environment"><a href="#Required-environment" class="headerlink" title="Required environment:"></a>Required environment:</h4><p>I tested the scripts in the following environment.</p><ul><li>vCenter Server 6.0 U3</li><li>vROps server 6.6</li><li>PowerCLI 6.5 R1</li><li>PowerShel 5.0</li><li>Python 2.7.x</li></ul><p>To run the script you would need Nagini module (python client) for vROps REST API. Please <a href="http://www.vrandom.com/vrops/python-api/" target="_blank" rel="noopener">check this blog</a> for details on how you can download and use this module.</p><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>Before I start writing this blog I need to say thanks to few people.</p><ul><li>To save time, for data gathering, I used the <a href="https://blogs.vmware.com/PowerCLI/2014/03/using-vsphere-tags-powercli.html" target="_blank" rel="noopener">ExportImportTags.ps1 given here</a> (originally created by <strong>Dimitar Barfonchovski</strong>). It is a small and simple script and I made many changes to the original script (removed the import portion and exported data in JSON format in place or original XML format). Instead of saving the entire data, I am saving a subset of it.</li><li>My friend <strong>Vinith Menon</strong> already written a script similar to this. His original blog was further re-created by <strong>John Dias.</strong> You can find <a href="https://blogs.vmware.com/management/2017/03/access-internal-rest-apis-in-vr-ops-with-powershell.html" target="_blank" rel="noopener">details here</a>. Vinith written the script in PowerShell.</li></ul><h4 id="Why-similar-script-for-creating-custom-dynamic-groups"><a href="#Why-similar-script-for-creating-custom-dynamic-groups" class="headerlink" title="Why similar script for creating custom dynamic groups?"></a>Why similar script for creating custom dynamic groups?</h4><p>Question is, why I wrote script which does the similar task for which Vinith Menon already had a script? Provided below are my reasons:</p><ul><li>Vinith mainly showed how you can access vROps internal REST API’s to create custom groups. My script provides a more complete solution.</li><li>I always stressed that when it comes to vROps REST API, python is a far more cleaner and easier way to do it.</li></ul><p>Note, in PowerShell way you will actually have to do the bare bone Invoke-RestMethod. Python already handles those for you. Just call the methods and you are good.</p><h4 id="Where-to-get-the-scripts-and-what-is-included"><a href="#Where-to-get-the-scripts-and-what-is-included" class="headerlink" title="Where to get the scripts and what is included?"></a>Where to get the scripts and what is included?</h4><p>I have created a <a href="https://github.com/sajaldebnath/vrops-custom-group-creation/" target="_blank" rel="noopener">GitHub repository</a> from where you can download the scripts.   The following scripts are available:</p><ul><li><p>create-custom-group-vrops.py</p></li><li><p>Get-TagNames.ps1</p></li><li><p>set-env.py</p></li></ul><h4 id="How-to-run-the-scripts"><a href="#How-to-run-the-scripts" class="headerlink" title="How to run the scripts?"></a>How to run the scripts?</h4><p>Download the scripts and store them in the same folder.</p><p>First you need to run the Get-TagNames.ps1 script. Follow the following process to run the script. I am assuming you are running the script from VMware PowerCLI console. Note, I am dot sourcing [.] the <strong>Get-TagNames.ps1</strong> script so that the function defined in it is available in the environment.</p><pre class=" language-powershell"><code class="language-powershell"><span class="token function">PS</span>:> <span class="token variable">$server</span> = Connect<span class="token operator">-</span>VIserver <span class="token operator">-</span>Server &lt;vcenter server=<span class="token string">""</span> ip=<span class="token string">""</span> fqdn=<span class="token string">""</span>><span class="token function">PS</span>:> <span class="token punctuation">.</span> <span class="token punctuation">.</span>\Get<span class="token operator">-</span>TagNames<span class="token punctuation">.</span>ps1   <span class="token function">PS</span>:> Export<span class="token operator">-</span>Tag <span class="token operator">-</span>Server <span class="token variable">$server</span> <span class="token punctuation">[</span><span class="token operator">-</span>Category &lt;tag<span class="token operator">-</span>category<span class="token operator">-</span>name><span class="token punctuation">]</span>&lt;<span class="token operator">/</span>tag<span class="token operator">-</span>category<span class="token operator">-</span>name>&lt;<span class="token operator">/</span>vcenter></code></pre><p>Note, the <strong>-Category</strong> option is optional. If specified, script will get the tag names from that tag category only.</p><p>Running the script will generate a “taglist.json” file which has the data (tagName and categoryName).</p><p>Next run, python scripts from command prompt:</p><pre class=" language-console"><code class="language-console">C:\> python set-env.py</code></pre><p>This will ask inputs for configuring the environment and will generate a “env.json” file which will have the environment information to be used later.</p><p>Next run:</p><pre class=" language-console"><code class="language-console">C:\> python create-custom-group-vrops.py</code></pre><p>This will create the custom groups in vROps server. Watch the video for further explanation of the scripts and run-time information.</p><div class="video-container"><iframe src="//www.youtube.com/embed/lST9G2qUiX4" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the script to dynamically create dynamic groups in vROps inline with the vCenter Serer tags .</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> vRealize Suite </category>
          
          <category> PowerCLI </category>
          
          <category> Python </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
            <tag> Python </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to configure Auto-Scaling for Private Cloud</title>
      <link href="/how-to-configure-auto-scaling-for-private-cloud.html"/>
      <url>/how-to-configure-auto-scaling-for-private-cloud.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Have you checked the auto-scaling feature provided in public cloud solutions like AWS and Azure and wished to get the same feature in your private cloud environment? Do you have an existing private cloud environment or building a new one and want to make it auto-scale enabled? This post covers this exact topic. It details what auto-scaling is and provides step by step guide on how you can build one using various VMware products.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>In recent months, during my interactions with customers, one requirement came up pretty often than others. That is of auto-scaling. Seems majority of customers who deploy Private Cloud require auto-scaling in some or other formats. Since out of the box vRealize Automation provides “Scale-Out” and “Scale-In” functions (albeit manual), these can be used in conjunction with other products to provide auto-scaling functionality. I had to configure this feature for multiple customers, so thought of writing a blog post detailing the steps. Readers can follow the blog to do it themselves. Also, auto-scaling is very dynamic in nature. Typically auto-scaling parameter requirement changes from environment to environment. Keeping that mind I have explained the steps involved so that you can customize it as per your need.</p><h4 id="Required-prior-knowledge"><a href="#Required-prior-knowledge" class="headerlink" title="Required prior knowledge:"></a>Required prior knowledge:</h4><p>Though you can simply import the package in vRealize Orchestrator and follow the guide to configure other products, having a knowledge of the following will help you further configure it.</p><ul><li>Working knowledge of vRealize Orchestrator</li><li>If you want to customize the workflows, then you need to know a bit of JavaScript</li><li>For configuration of Webhook Shims, basic knowledge of Linux will help (though not strictly required, John Dias did an amazing job providing step by step guide).</li><li>Familiarity with vRealize Operations Manager will help</li><li>Working knowledge of vRealize Automation is required</li><li>If you want to replicate my example of multi-tier application with application installation at runtime. Then you need to know NSX usage and advanced configuration of blueprints in vRealize Automation.</li></ul><p>If you are using vRealize Automation 7.2 and prior then [this blog post] on NSX integration with <a href="/integrating-nsx-with-vrealize-automation-part-i.html" title="Integrating NSX with vRealize Automation-Part I">Integrating NSX with vRealize Automation-Part I</a> vRA will help. Integration method has changed in 7.3 and it is simplified a lot. Check the <a href="https://docs.vmware.com/en/vRealize-Automation/7.3/com.vmware.vra.prepare.use.doc/GUID-1DCCA922-7220-405F-998B-626563C3F682.html" target="_blank" rel="noopener">VMware documentation on how it is done in</a> vRA 7.3. On how to configure Software components you can check my [earlier blog post here] <a href="/vra-7-2-auto-scale-application-authoring-container-on-demand-lb.html" title="vRA 7.2 -  Auto-Scale , Application Authoring, Container, On-Demand LB">vRA 7.2 -  Auto-Scale , Application Authoring, Container, On-Demand LB</a>.</p><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>Before I start writing this blog I need to say thanks to few people. Though I demonstrated this feature (with PowerCLI and vCenter) 2 years back to a customer, it was never a true auto-scaling solution. So, here it goes:</p><ul><li>First and loudest thanks to <strong>Carsten Schaefer</strong> for com.vmware.pso.cemea.autoscaling package. It had the main “Scale Up Blueprint Layer based on VM MOID” and “Scale Down Blueprint Layer based on VM MOID”. All my other works are based on these two core workflows. These two workflows do the actual task. So thanks a lot mate for your hard work and help.</li><li>Thanks to <strong>Vishal Jain, Diwan Chandrabose, Ajay Kalla and team</strong> for the Load balancer handling script. Normally when an alert is fired, it is based on a VM. But when network load comes from Load-Balancer and it fires an alert, we get the load balancer name. The script co-relating the load balancer to the corresponding virtual machine is written by the team. They showed how we can use NSX and vROps integration to handle load balancer parameters. Thanks a lot guys for this.</li><li>Last but not least <strong>Vinith Menon</strong>, I was wondering how I would put a load on the test website. I was thinking of using JMeter. But it was too much to just put HTTP requests on a web page. Your one liner is absolutely fantastic and time saver for me. Thanks a lot brother for that.</li></ul><p>My friend Vinith Menon also have written a blog post on auto-scaling. You can check it <a href="http://virtualize-automate.com/wp/index.php/2017/05/06/auto-scale-vra-workloads-vropsvro-nsx/" target="_blank" rel="noopener">here</a>.</p><h4 id="Where-to-get-the-package-for-auto-scaling"><a href="#Where-to-get-the-package-for-auto-scaling" class="headerlink" title="Where to get the package for auto-scaling?"></a>Where to get the package for auto-scaling?</h4><p>I have created a single vRealize Orchestrator package containing all the workflows, SNMP Policy and Action items. Download the package from <a href="https://github.com/sajaldebnath/auto-scaling-vra" target="_blank" rel="noopener">the GitHub repository</a> (<a href="https://github.com/sajaldebnath/auto-scaling-vra" target="_blank" rel="noopener">https://github.com/sajaldebnath/auto-scaling-vra</a>) and import it into vRealize Orchestrator server. Rest of the details are provided in the rest of the blog post.</p><h4 id="What-is-included-in-the-package"><a href="#What-is-included-in-the-package" class="headerlink" title="What is included in the package?"></a>What is included in the package?</h4><p>The following workflows are included in the package:</p><ul><li>Scale Down Blueprint Layer based on VM MOID</li><li>Scale Up Blueprint Layer based on VM MOID</li><li>Scale Down vRA Deployment based on LB Load - SNMP</li><li>Scale Up vRA Deployment based on LB Load - SNMP</li><li>Scale Down vRA Deployment based on CPU-Mem Load - vROps REST Notification</li><li>Scale Up vRA Deployment based on CPU-Mem Load - vROps REST Notification</li><li>Scale Down vRA Deployment based on LB Load - vROps REST Notification</li><li>Scale Up vRA Deployment based on LB Load - vROps REST Notification</li></ul><p>The helper workflows are:</p><ul><li>Count VMs in Layer</li><li>Get VM Name from vROps REST Notification</li><li>JSON Invoke a REST operation</li><li>Submit to vRA</li></ul><p>The action items are:</p><ul><li>getCatalogResourceForIaasVmEntity</li><li>findObjectById</li><li>getVirtualMachineProperties</li></ul><p>The included SNMP policy is:</p><ul><li>vROps SNMP Trap for NSX</li></ul><p>Note, the first two workflows are core workflows (written by Carsten) all other workflows depends on these two to get the work done. If you are not using Webhook Shims, then you do not need to configure workflows which ends with “vROps REST Notification”. Also, for SNMP, you do not need to configure “Get VM Name from vROps REST Notification” and “JSON Invoke a REST operation” workflows. Alternately, if you are not going to use SNMP traps, then you do not need to configure the SNMP policy.</p><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>Before you can run everything you need to have the environment ready. I used the following versions:</p><ul><li>vRealize Automation 7.3</li><li>vCenter &amp; vSphere 6.5</li><li>vRealize Operations 6.5</li><li>vRealize Orchestrator 7.3 (internal to vRA)</li><li>NSX 6.3</li><li>Webhook Shims</li></ul><p>The workflows should work with other versions as well. You need to have these products installed, configured and integrated to follow the example end to end.</p><h4 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE::"></a><span style="color:red">UPDATE::</span></h4><h4 id="How-to-handle-the-SNMP-trap-data"><a href="#How-to-handle-the-SNMP-trap-data" class="headerlink" title="How to handle the SNMP trap data?"></a><span style="color:red">How to handle the SNMP trap data?</span></h4><p>My friend Senthil asked me to provide the SNMP trap handling script as well. So provided below is the script which I used to Handle the SNMP trap data. If you are using the SNMP method for monitoring the traps, then use the following script to handle the on trap tasks and fire the respective workflow.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Handling SNMP Trap</span>System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"SNMP Trap Received"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Agent: "</span> <span class="token operator">+</span> event<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">"agent"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> key <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> snmpResult <span class="token operator">=</span> SnmpService<span class="token punctuation">.</span><span class="token function">retrievePolicyData</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Get data as Array of Properties</span><span class="token keyword">var</span> result <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token string">"com.vmware.library.snmp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processSnmpResult</span><span class="token punctuation">(</span>snmpResult<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//System.log("Enterprise: " + snmpResult.enterprise);</span><span class="token comment" spellcheck="true">// Log data</span>System<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token string">"com.vmware.library.snmp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logResult</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> dataMatch <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">var</span> lb <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">// Setting the workflow ID's</span><span class="token keyword">var</span> wfIdCpuDown <span class="token operator">=</span> <span class="token string">"2e8e822b-f919-4453-97e8-ce5dacd816f4"</span><span class="token punctuation">;</span><span class="token keyword">var</span> wfIdCpuHigh <span class="token operator">=</span> <span class="token string">"14d602b6-e1ff-4d15-83af-4f9a97928940"</span><span class="token punctuation">;</span><span class="token keyword">var</span> wfIdLbDown <span class="token operator">=</span> <span class="token string">"7daf80e6-852a-4a10-a3df-5d54b182f5b0"</span><span class="token punctuation">;</span><span class="token keyword">var</span> wfIdLbHigh <span class="token operator">=</span> <span class="token string">"db9fdd03-1c11-4305-9d22-3536c3374971"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// Processing the trap data. Element 19 has the alert name</span><span class="token comment" spellcheck="true">// So checking the presence of particular Alert Name</span><span class="token comment" spellcheck="true">// Element 4 has the Object name which fired the alert. So if the corrent alert is present then</span><span class="token comment" spellcheck="true">// getting the object name from Element 4</span><span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"VM vCPU Usage High - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"VM Name : "</span> <span class="token operator">+</span> vmName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdCpuHigh<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"VM vCPU Usage Down - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"VM Name : "</span> <span class="token operator">+</span> vmName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdCpuDown<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"LB Load High - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lbName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> endIndex <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">" Load Balancer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lb <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">//    System.log("LB Name : " + vmName+ "  Var lb value:"+lb);</span>    <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdLbHigh<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"LB Load Down - Sajal"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Trap Found::"</span><span class="token operator">+</span>result\<span class="token punctuation">[</span><span class="token number">18</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> lbName <span class="token operator">=</span> result\<span class="token punctuation">[</span><span class="token number">3</span>\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"value"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> endIndex <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">" Load Balancer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> vmName <span class="token operator">=</span> lbName<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>endIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    lb <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">//    System.log("LB Name : " + vmName+ " Var lb value:"+lb);</span>        <span class="token keyword">var</span> wfId <span class="token operator">=</span> wfIdLbDown<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>    System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"No data match"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dataMatch <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// If the actual alert is found then getting the Moref of the Object in vCenter and calling the workflow</span><span class="token keyword">if</span> <span class="token punctuation">(</span> dataMatch <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> lb <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> vmMoref <span class="token operator">=</span> vmName        <span class="token comment" spellcheck="true">//        System.log("Calling out workflow for LB: "+ vmMoref);</span>        <span class="token comment" spellcheck="true">//        runWF(wfId,vmMoref);</span>    <span class="token punctuation">}</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token function">findVms</span><span class="token punctuation">(</span>vmName<span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"The VM is:"</span><span class="token operator">+</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>vm <span class="token keyword">instanceof</span> <span class="token class-name">VcVirtualMachine</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>                System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Sucessfully located the vm object"</span> <span class="token operator">+</span> vm<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">var</span> vmMoref <span class="token operator">=</span> vm<span class="token punctuation">.</span>id<span class="token punctuation">;</span>            System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"VM MoRef is "</span> <span class="token operator">+</span> vmMoref <span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Calling out to workflow run function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token function">runWF</span><span class="token punctuation">(</span>wfId<span class="token punctuation">,</span>vmMoref<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// This function finds the Moref of the object in terms of vCenter server</span><span class="token keyword">function</span> <span class="token function">findVms</span><span class="token punctuation">(</span>vmName<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token keyword">var</span> vms <span class="token operator">=</span> VcPlugin<span class="token punctuation">.</span><span class="token function">getAllVirtualMachines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> vmResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>  b <span class="token operator">&lt;</span> vms<span class="token punctuation">.</span>length<span class="token punctuation">;</span> b<span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> vmName <span class="token operator">==</span> vms<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>                 vmResult <span class="token operator">=</span> vms<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">;</span>                 <span class="token keyword">break</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> vmResult<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// This function calls out the workflow</span>    <span class="token keyword">function</span> <span class="token function">runWF</span><span class="token punctuation">(</span>wfid<span class="token punctuation">,</span> vmMoref<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">var</span> workflowToLaunch <span class="token operator">=</span> Server<span class="token punctuation">.</span><span class="token function">getWorkflowWithId</span><span class="token punctuation">(</span>wfid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>workflowToLaunch <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>        <span class="token punctuation">{</span>             <span class="token keyword">throw</span> <span class="token string">"Workflow not found"</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> workflowParameters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> lb <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            workflowParameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"lbName"</span><span class="token punctuation">,</span>vmMoref<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> <span class="token punctuation">{</span>            workflowParameters<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"targetId"</span><span class="token punctuation">,</span>vmMoref<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//    System.log("Launching Workflow. Please refer to that workflow for specific logs."+ wfid+" :VM     Info:"+vmMoref);</span>        <span class="token keyword">var</span> wfToken <span class="token operator">=</span> workflowToLaunch<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>workflowParameters<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> wfToken<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h4 id="How-to-configure-auto-scale"><a href="#How-to-configure-auto-scale" class="headerlink" title="How to configure auto-scale?"></a>How to configure auto-scale?</h4><p>There are too many steps and explanation to cover in a single post. So instead I created a video to cover all of that. Please watch the video for details on how to configure the different components. It also covers where and how you can modify the steps.  This video covers everything along with few ppt slides to cover the environment and slight background.</p><div class="video-container"><iframe src="//www.youtube.com/embed/wBreU7R_r2k" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the steps detailed in the video to configure auto-scaling in your environment. This is an amazing feature. It will be a real help if you can test it out and let me know the outcome. Also, any further suggestions are welcome. I hope this helps you as it helped me. Do provide me feedbacks on this. Also, let me know if I missed something or you need further clarification.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Operations </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to programmatically push data in vRealize Operations Manager</title>
      <link href="/how-to-programmatically-push-data-in-vrealize-operations-manager.html"/>
      <url>/how-to-programmatically-push-data-in-vrealize-operations-manager.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Did you ever feel the need to push custom data to vRealize Operations Manager (vROps)? Did you wish, you could see that one parameter or metric specific to your environment in vROps? This post provides exactly that information. Here I demonstrate a script which pushes custom data into vROps. At the same time, I explained how you can customize it according to your requirement.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>A few weeks back I got the request from two of my colleagues for friends Luciano Gomes and Iwan (e1) Rahabok about a script which can push data into vRealize Operations Manager. Both of them requested similar task albeit the data was different. So I picked Luciano’s request as he already had the script which will generate the input. All I had to do is modify the script a bit so that I can consume the data in my required format and push the data to vROps. His script generates “Creation Time” and “Hostname inside guest” for each virtual machine in an environment. He wanted to see these two values under each VM resource in vROps. So the task is defined in front of me.  </p><h4 id="Prior-Work-on-pushing-data-to-vRealize-Operations-Manager"><a href="#Prior-Work-on-pushing-data-to-vRealize-Operations-Manager" class="headerlink" title="Prior Work on pushing data to vRealize Operations Manager:"></a>Prior Work on pushing data to vRealize Operations Manager:</h4><p>Understand, this is not a new topic. Very good blog posts are already available on similar topics. But before I explain my method, please check the following excellent blogs on similar topics:</p><ul><li><a href="http://www.valcolabs.com/2014/06/24/programmatically-push-custom-data-into-vcenter-operations/" target="_blank" rel="noopener">Programmatically Push Custom Data into vCenter Operations</a> - The original awesome post by Josh Coen - Sadly Http Adapter is no longer in vogue and may be extinct soon.</li><li><a href="https://virtualviking.net/2015/12/15/vraidmon-a-vrealize-operations-adapter-written-in-python/" target="_blank" rel="noopener">vraidmon – A vRealize Operations Adapter Written in Python</a> - By Pontus (you rule)</li><li><a href="http://vman.ch/vrops-suite-api-properties-import/" target="_blank" rel="noopener">vRops – suite-api – addProperties</a> - By vMAN - Does similar things but calling out direct REST API</li><li><a href="http://next.nutanix.com/t5/Scripts/VMware-vRealize-Operations-Adapter-for-Nutanix/td-p/4716" target="_blank" rel="noopener">VMware vRealize Operations Adapter for Nutanix</a> - By Andreas Diemer - The best is for the last</li></ul><h4 id="Why-a-new-method"><a href="#Why-a-new-method" class="headerlink" title="Why a new method?"></a>Why a new method?</h4><p>If you are wondering why a new method and script?  The topic and method of these blog posts can be divided into two categories. In the first category, you have an easy way, but the method used is to push a whole new set of information, e.g, creating a new adapter, resource kind, and type. Then push custom data in this new resource. Here my end goal is not that. All the VM’s are already present in the environment. All I need to do is push custom value into it. In the second category, custom data is pushed to vRealize Operations Manager, but the method is direct REST API calls. Which makes the script pretty complex. So I tried to find an easy way and hence this post and script.</p><h4 id="What-I-chose-and-why"><a href="#What-I-chose-and-why" class="headerlink" title="What I chose and why?"></a>What I chose and why?</h4><p>I chose to create new Properties for existing resources (VM’s). Since the data I am pushing is text in nature so created new Properties. If the data was of numeric in nature, then I would have chosen new stats. Based on the requirement you can chose either of them. They are detailed in the following locations: https://<vrops server="">/suite-api/docs/rest/index.html The methods are:</vrops></p><pre class=" language-javascript"><code class="language-javascript">POST <span class="token operator">/</span>api<span class="token operator">/</span>resources<span class="token operator">/</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token operator">/</span>statsPOST <span class="token operator">/</span>api<span class="token operator">/</span>resources<span class="token operator">/</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token operator">/</span>properties</code></pre><p>Note, I did not create any new adapter or resourcekind or resource type. All I am doing is adding properties or stats.</p><h4 id="Where-to-get-it"><a href="#Where-to-get-it" class="headerlink" title="Where to get it?"></a>Where to get it?</h4><p>You can get the script by going to <a href="https://github.com/sajaldebnath/vrops-data-push" target="_blank" rel="noopener">GitHub page</a> (<a href="https://github.com/sajaldebnath/vrops-data-push" target="_blank" rel="noopener">https://github.com/sajaldebnath/vrops-metric-collection</a>)and downloading it from there. There are samples provided with the script.</p><h4 id="What-is-included"><a href="#What-is-included" class="headerlink" title="What is included:"></a>What is included:</h4><p>There are two Python script files and three PowerShell script files. The Powershell scripts are used to gather the data that needs to be pushed to vROPs. The Python files are used to process and push the data to vROps</p><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>These programs were written in Python2.7 and Powershell 5.0 versions.So your system should have Python 2.7 and Powershell 5.0. Also, download and install the nagini module from vRealize Operations Manager. It can be found at “https:///suite-api” . Visit the page, download and install the Python Client. Typically Windows boxes don’t have Python installed in it. Download and install Python 2.7.x version on your Windows machine.</p><h4 id="How-to-run"><a href="#How-to-run" class="headerlink" title="How to run:"></a>How to run:</h4><p>Download all the files to the same location. The program has three parts. </p><p><strong>Part 1: Setting up the environment:</strong>  For the first time run, <strong>Set-VCdetails.ps1</strong> using PowerShell. You can simply open PowerShell windows and run the script with <strong>*C:\ .\Set-VCdetails.ps1</strong>. This will ask you for the following information:</p><ul><li>vCenter Server Name:</li><li>vCenter User Id:</li><li>Password:</li></ul><p>Once this information is provided, it will create <strong>vcdetails.txt</strong> (contains vCenter server name and user name) and <strong>passwd.txt</strong> (contains the password in encrypted format). Next run <strong>set-env.py</strong> file. You can run it like following: </p><pre class=" language-shell"><code class="language-shell"># python set-env.py</code></pre><p>This will ask for the following inputs:</p><ul><li>Adapter Kind:</li><li>Resource Kind:</li><li>vROPs server IP/FQDN:</li><li>user id:</li><li>vROps password:</li></ul><p>Once all the above information is provided, the script generates env.json in the same location. The provided password is saved in encrypted format. </p><p><strong>Part 2: Getting the data from vCenter server:</strong>  Run the “Get-VMDetails.ps1” file with PowerShell cmdline. This will get values from vcdetails.txt and passwd.txt file and generate <strong>data.json</strong> file in the same location. This <strong>data.json</strong> will have the desired output values. </p><p><strong>Part 3: Pushing the data to vROps server:</strong> Next run <strong>data-push.py</strong> from cmdline with </p><pre class=" language-shell"><code class="language-shell"># python data-push.py</code></pre><p>This will gather required information from <strong>env.jon, data.json</strong> and push data to vROps server You should schedule two jobs, one for <strong>Get-VMDetails.ps1</strong> and another for <strong>data-push.py</strong> to run these scripts one after other. Check the format of the <strong>data-push.json</strong> file to further utilize the data. </p><p><strong>Points to Note:</strong> Though this has specific use cases implemented, you should be able to easily modify the scripts to suit your need.</p><h4 id="What-great"><a href="#What-great" class="headerlink" title="What great?"></a>What great?</h4><p>As you can see from the script, all I had to do was two separate calls to vROps using nagini methods. The first one is to find out UUID of each VM. The second one does the actual job. A single <strong>add_properties</strong> method does all the heavy lifting for me.</p><p>I do not need to make direct REST calls, nagini is a wrapper for that. It does all the heavy lifting.</p><p>Watch the following video for the detailed run and sample output.</p><div class="video-container"><iframe src="//www.youtube.com/embed/behW2uIHalg" frameborder="0" allowfullscreen></iframe></div><h4 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement:"></a>Acknowledgement:</h4><p>Python client for vRealize Operations Manager (nagini) is not very well documented. I struggled with a particular method call as I couldn’t figure out which format it expects data. Thanks to Vibhu Rastogi for arranging a call and Shankar Kommineni, thank you. You rock man. Thanks for the help and explanation.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the script if you want to get push custom data directly to vROps server. I did not test the script extensively. It will be a real help if you can test it out and let me know the outcome. Also, any further suggestions are welcome. I hope this helps you as it helped me. Customize it as per your requirement.</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> vRealize Suite </category>
          
          <category> PowerCLI </category>
          
          <category> Python </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
            <tag> Python </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to programmatically collect metric values from vROps</title>
      <link href="/how-to-programmatically-collect-metric-values-from-vrops.html"/>
      <url>/how-to-programmatically-collect-metric-values-from-vrops.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Few customers inquired about how they can collect metric values directly from vROps. They majorly wanted to get that information using REST API’s. I wrote [another blog post detailing how you can do it]<a href="/learn-all-about-vrops-rest-notifications-and-rest-apis-in-60-minutes.html" title="Learn all about vROps REST notifications and REST APIs in 60 minutes">Learn all about vROps REST notifications and REST APIs in 60 minutes</a>. I wrote a python script to automatically collect metric values from vROps.<br><a id="more"></a><br>This post provides details about that script. Where you can get that script and how it needs to be run.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>This python script uses the vROps python client to query and gather information directly from vROps server. Its task is to collect metric values from vROps. It uses REST API’s at the backend to get the information. So, to run the script you to download and install Python Client from vROps server. Also, this script was written and tested in Python 2.7 environment. Check my other blog post on details about how you can use python client to interact with vROps server.</p><h4 id="Use-Case"><a href="#Use-Case" class="headerlink" title="Use Case:"></a>Use Case:</h4><p>This script will automate the task of collecting metric values directly from vROps for you. You can later use the values as per your requirements.</p><h4 id="Where-to-get-it"><a href="#Where-to-get-it" class="headerlink" title="Where to get it?"></a>Where to get it?</h4><p>You can get the script by going to <a href="https://github.com/sajaldebnath/vrops-metric-collection" target="_blank" rel="noopener">GitHub page</a> (<a href="https://github.com/sajaldebnath/vrops-metric-collection)and" target="_blank" rel="noopener">https://github.com/sajaldebnath/vrops-metric-collection)and</a> downloading it from there. There are samples provided in the script.</p><h4 id="How-to-run"><a href="#How-to-run" class="headerlink" title="How to run?"></a>How to run?</h4><p>There are two scripts, “<a href="https://github.com/sajaldebnath/vrops-metric-collection/blob/master/metric-collection.py" title="metric-collection.py" target="_blank" rel="noopener">metric-collection.py</a>“ and <a href="https://github.com/sajaldebnath/vrops-metric-collection/blob/master/set-config.py" title="set-config.py" target="_blank" rel="noopener">set-config.py</a>. Download both the scripts in the same location.<br>Run <strong>set-config.py</strong> first. </p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># python &lt;localtion to="" file="">/set-config.py </span><span class="token operator">&lt;</span>/localtion<span class="token operator">></span></code></pre><p>It will set the environment. Then run <strong><em>metric-collection.py</em></strong> to collect the metric values. </p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># python &lt;localtion to="" file="">/metric-collection.py</span><span class="token operator">&lt;</span>/localtion<span class="token operator">></span></code></pre><p>Ideally, you should automate the running of this script using a schedular like cron jobs. Script should not run less than 5 minutes apart. Since vROps collects data every 5 minutes, so running this script less than that time frame will result in redundant data. In this mode “Maximum number of samples to collect” parameter should be left to default value 1. If you want to run the script one time and get as much data as possible (historical), then set the above parameter to the desired value. For example, setting it to 5 will result in getting data from last 5 collections.</p><h4 id="How-does-it-collect-metric-values"><a href="#How-does-it-collect-metric-values" class="headerlink" title="How does it collect metric values:"></a>How does it collect metric values:</h4><p>Running <strong>set-config.py</strong> sets up the environment. It will ask for the following information:</p><ul><li>Adapter Kind</li><li>Resource Kind</li><li>vROPs server IP/FQDN</li><li>user id</li><li>vROps password</li><li>Maximum number of samples to collect</li><li>Number of Keys to Monitor</li><li>Keys (one by one)</li></ul><p>The adapter kind is the adapter for which you want information (e.g, VMware).</p><p>The resource kind is the type of resource you want to monitor (e.g., VirtualMachine). </p><p>These two parameters are used to filter the results. vROps server and user details are asked to connect to the server. <strong>Maximum number of samples to collect</strong> value is used to determine how many samples we need to collect data for. By default, it is set to 1. </p><p>Next is the number of keys to monitor. As the name suggests, this determines the number of keys. The last parameter <strong>Keys</strong> takes the key values one by one. Running the <strong>set-config.py</strong> script stores these values in JSON format in <strong>config.json</strong> file. This file is placed in the same directory. Note, the password is not saved as plain text, it is saved in encrypted format. I agree, probably it is not the best encryption, but at least better than plain text password. </p><p>Next run <strong>metric-collection.py</strong>, this script will read the values from config.json file and save the output in JSON format in metric-data.json file. This file is also saved in the same location. Watch the following video for the detailed run and sample output. </p><div class="video-container"><iframe src="//www.youtube.com/embed/TWBX-0g_IbM" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>You can use the script if you want to get the metric values directly from vROps server. I did not test the script extensively. It will be a real help if you can test it out and let me know the outcome. Also, any further suggestions are welcome. I hope this helps you as it helped me.</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> vRealize Suite </category>
          
          <category> Python </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> Automation </tag>
            
            <tag> Python </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Learn all about vROps REST notifications and REST APIs in 60 minutes</title>
      <link href="/learn-all-about-vrops-rest-notifications-and-rest-apis-in-60-minutes.html"/>
      <url>/learn-all-about-vrops-rest-notifications-and-rest-apis-in-60-minutes.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>vRealize Operations Manager (vROps) is an absolutely amazing and must have tool for any virtualised datacenter. Out of the box (OOTB), it provides a lot of functionalities. Unlike custom dashboards and super metrics, REST API’s are less explored areas of vROps. For notifications, we typically use “Send an Email” as a notification option. The less explored options are SNMP notifications and REST notifications plugins.<br><a id="more"></a><br>So we should use REST notifications plugin over others and how can we do it? How can we utilize the REST API’s to do something programmatically or say simply collect information from vROps? This post answers and explores those options. If you have vROps in your environment and want to explore these areas, then this video is for you.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h4><p>Notification is an important and integral part of any monitoring and analytical tool. A tool may be very good but if it cannot send me a notification, then it is of not much use to me. For example, consider my datacenter has serious issues, few servers went down at 2 a.m. in the morning. I get an alert in the tool console but do not get a notification about it. So I cannot do much about it. So the tool fails the purpose. The second point, out of the box vROps provides a lot of information. It collects, processes and shows the information in UI console and Dashboards. What if I want to collect some information from vROps and process it as per my requirement? How can I get that RAW information that vROps collects? We can do that easily by using REST API’s. Using REST API’s we can not only collect information but do many tasks programmatically. So to automate REST API’s is very useful. So it is essential to know how to interact and utilise those API’s. This blog post covers both the areas.</p><h4 id="Why-use-REST-notifications-Plugin"><a href="#Why-use-REST-notifications-Plugin" class="headerlink" title="Why use REST notifications Plugin?"></a>Why use REST notifications Plugin?</h4><p>For notifications, we can use Email plugin, SNMP plugin or REST based notification plugin. So why should we use REST notification? While SNMP notification configuration is easier, handling it is more complex and inefficient. For this example, we will consider vRO server as trap destination. In SNMP, vROps server works as a source and vRO server (or any SNMP traps receiver) as sink. So for any defined alert and notification, we get SNMP traps to vRO. So in vRO, we need to continuously monitor for any incoming traps and then parse each of them to identify whether it satisfies our criteria to run a workflow. In comparison, for REST notifications, we configure an outbound instance for a single workflow only. So if the alerting criteria is met, then the outbound notification is fired and corresponding workflow is run in vRO. There is no need for constant monitoring of the traps. So REST notifications is much more precise and efficient.  </p><h4 id="What-is-covered"><a href="#What-is-covered" class="headerlink" title="What is covered?"></a>What is covered?</h4><p>When we talk about information in terms of vROps. There are two aspects.</p><ul><li>Information Sharing</li><li>Information Gathering</li></ul><p>In the first part, I will cover about “Information Sharing”. Since vROps already provides so much information so we can focus on Information Sharing first. In the second part, I will cover “Information Gathering”  using REST API’s. </p><p><strong>Specifically, the following topics are covered in this post:</strong></p><ul><li>How to create Outbound Instance using REST Notification Plugin</li><li>What is Webhook-Shims and why you need one</li><li>Configuring custom “Symptom Definition”</li><li>How to configure custom “Alert Definition”</li><li>Tying everything together and configure notifications using all the above</li><li>How to explore and know details about vROps REST API’s</li></ul><p>So if you are looking for these information, please run and watch the video. </p><div class="video-container"><iframe src="//www.youtube.com/embed/Kez5kyW9Tt4" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>vROps is a very powerful tool for monitoring and analysing a virtualised datacenter. With proper alerting and notifications we can avoid many operational disruptions. Also at the same time automating tasks with vROps we can make our datacenter more efficient. I hope this post makes these areas clear to you. For more details please check <a href="https://www.vmware.com/support/pubs/vrealize-operations-manager-pubs.html" target="_blank" rel="noopener">vROps documentation</a>. Also check the following blogs for more information on this.</p><ul><li><a href="https://blogs.vmware.com/management/2017/01/vrealize-webhooks-infinite-integrations.html?src=so_5703fb3d92c20&amp;cid=70134000001M5td" target="_blank" rel="noopener">More on Webhooks</a></li><li><a href="https://blogs.vmware.com/management/2017/02/self-healing-datacenter.html" target="_blank" rel="noopener">Amazing blog series by John Dias on Webhook Shims configuration</a></li><li><a href="https://github.com/vmw-loginsight/webhook-shims" target="_blank" rel="noopener">VMware github page on Webhook-Shims</a></li></ul><p>As always do provide me feedbacks so that I can make more meaningful and useful blog posts for you.  </p><h4 id="Related-post"><a href="#Related-post" class="headerlink" title="Related post:"></a>Related post:</h4><p>I have written a small python script which gets the raw metrics from vROps for you. You need to provide inputs like how many metrics and which metrics you want to gather information for, how many samples you want to collect, etc. Once you provide the required inputs, the script will fetch and store the information in JSON format. You can further use the information as per your requirement. </p><p>You can check it [here]<a href="/how-to-programmatically-collect-metric-values-from-vrops.html" title="How to programmatically collect metric values from vROps">How to programmatically collect metric values from vROps</a></p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Learn basic to advance vSAN in 80 minutes</title>
      <link href="/learn-basic-to-advance-vsan-in-80-minutes.html"/>
      <url>/learn-basic-to-advance-vsan-in-80-minutes.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>If you are working in Virtualization and Cloud space, then you must have heard about Software Defined Storage (SDS). It is part of Software-Defined Data Center (SDDC) (a term coined by VMware). Since VMware started the SDDC journey and is a pioneer in this technology, so, today I am going to cover VMware solution in this space. Virtual SAN or vSAN is the solution from VMware which provides SDS capabilities in VMware environment.<br><a id="more"></a><br>This post will cover vSAN in detail with a demo at the end. By following this post you will have a clear understanding of vSAN and would be able to utilize it in your environment.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>Before we discuss vSAN, let’s talk about Software Defined Storage a bit. In <a href="http://www.vmware.com/products/software-defined-storage.html" target="_blank" rel="noopener">VMware words</a>, Software-defined storage (SDS) abstracts the underlying storage through a virtual data plane, making the VM (and the application) the fundamental unit of storage provisioning and management across heterogeneous storage systems. Also, in the <a href="http://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/whitepaper/solutions/vmware-perspective-on-software-defined-storage-white-paper.pdf" target="_blank" rel="noopener">VMware software-defined storage (SDS)</a> model, storage services are dynamically composed and driven by policy. This is accomplished by abstracting the underlying hardware, similar to the server and network virtualization. Unlike traditional SAN environment, in SDS, the end VM’s are of utmost importance. In typical SAN environment, we configure storage first. The endpoints consume storage through configured LUN’s.  All VM’s residing in the LUN gets the same protection, performance, and incurs same IO penalty. For example, a transactional database will benefit greatly from a LUN backed by RAID10. A typical website with random read/write will benefit from RAID5. Archival data benefits from a RAID6 LUN. We rarely segregate VM’s per their IO profile in a traditional enviornment. Which leads to less performing VM’s. Per VM policies and specialized software define storage in SDS environment. So, if a VM hosts a database we can set individual policies according to it. It has no effect on another VM. Thus we benefit greatly from this type of setup. Besides management of these environments are really easy.</p><h4 id="Any-Doubts"><a href="#Any-Doubts" class="headerlink" title="Any Doubts?"></a>Any Doubts?</h4><p>SDS is generally considered to be slower than traditional storages. The performance of a traditional SAN certainly does not come from capacity disks. Highest performing disks give you 15K RPM. So, whether it is in a storage box or local to a server, performance of a disk remains same. The performance of the storage boxes comes from the large cache they use. Essentially, a storage box runs a specialized software in a dedicated processor and the performance is from the high performing cache tier. What if we give such a cache tier on every server? In a typical virtualized environment, we don’t use the local disks as a capctiy tier. Thus underutilizing resources. We can utilize this storage as capacity tier. For performance, we provide a high performing cache tier on each server. Also, we put a specialized software for handling storage in the hypervisor code. So essentially we mimic a traditional SAN environment.  A dedicated processor handles data processing in a traditional storage. Though a Hypervisor already handles IO requests for VM’s, putting storage decisions in it will place extra load on its resources (about 10%). With careful design and accounting this extra loadremoves the problem. Besides, since Hypervisor now provides both virtualization and storage capabilities, it has greater visibility into the environment and can define policies with more granularity.</p><h4 id="Why-vSAN"><a href="#Why-vSAN" class="headerlink" title="Why vSAN?"></a>Why vSAN?</h4><p>vSAN has the following advantages:</p><ul><li>Virtual SAN eliminates the need for an external expensive storage array</li><li>vSAN is designed specifically for vSphere Administrators. So storage maintenance does not require a special team.</li><li>Predictive performance is achieved through per VM policies</li><li>Tier-1 applications can use vSAN storage without any performance issue</li><li>It is much cheaper than traditional costly storages at the same time providing similar performance</li><li>Since it is built into industry proven vSphere hypervisor, it is robust</li><li>Very simple to manage. Enabling it takes a single click</li><li>Upgrading vSAN is a cakewalk</li><li>Highly secure</li></ul><h4 id="Topics-covered"><a href="#Topics-covered" class="headerlink" title="Topics covered"></a>Topics covered</h4><p>Given below is the list of the topics covered in the session:</p><ul><li>Overview of vSAN</li><li>Important terms</li><li>How it works</li><li>Simplicity of use</li><li>Advanced use cases</li><li>Demo</li></ul><p>Specifically, this session will answer the following:</p><ul><li>Why non-data locality is not a problem in vSAN. Actually, it is an advantage to have</li><li>How a write and read operation is performed in vSAN in both all-flash and hybrid environment</li></ul><p>As always live demo is provided in the session to showcase the information provided in the slides.  </p><div class="video-container"><iframe src="//www.youtube.com/embed/-jnujKHC2-k" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>The vSAN software is already included in the hypervisor. To use it all you need to do is unlock the capabilities with a license key. It is an amazing technology which makes storage so easy to use. So if you are not actively using it, I hope this session will enable and encourage you to start using it. For more details please check the official <a href="http://www.vmware.com/in/products/virtual-san.html" target="_blank" rel="noopener">VMware site</a> and <a href="https://www.vmware.com/support/pubs/virtual-san-pubs.html" target="_blank" rel="noopener">product documentation</a>. As always I welcome your feedbacks. Please do share them so that I can fine tune my further sessions.</p>]]></content>
      
      <categories>
          
          <category> VSAN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSAN </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Learn all about vRealize Log Insight in under 90 minutes</title>
      <link href="/learn-all-about-vrealize-log-insight-in-under-90-minutes.html"/>
      <url>/learn-all-about-vrealize-log-insight-in-under-90-minutes.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>This post is aimed towards anyone who does a lot of Log Analysis. In this post I showcased the capabilities of VMware vRealize Log Insight. This will enable you to confidently utilise this tool to not only analyse the diverse logs that you can think of but also visualise the patterns and much more. So, if you are a hands on person who loves to do root cause analysis, or want to solve that nagging performance issue, then this post is for you.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>To troubleshoot software related issues your only friend are logs. Every software developer some or other logging mechanism so that later on you can troubleshoot any issue. If something crashes you go ahead and look into the logs to find out what went wrong. But log analysis is not only limited to crashing of software. If there is any performance issue, you analyse the logs. Some security breach happens, you audit the logs for any clue. So every organisation has some ways to store logs from different sources. Traditionally a syslog server was utilised for this purpose. In the initial days when number of servers were less, it was easy to maintain and manage the logs. But as virtualisation became popular, there was an explosion of virtual machines. Organisations runs thousands of virtual machines, but number of people managing those servers has not increased accordingly. This is because virtualisation increases efficiency and admin to server ratio has increased dramatically. This increase of virtual servers has also led to tremendous increase in logs. So now maintaining and auditing those logs is a nightmare. This is where log management &amp; analyser tools help.</p><h4 id="Why-vRealize-Log-Insight"><a href="#Why-vRealize-Log-Insight" class="headerlink" title="Why vRealize Log Insight?"></a>Why vRealize Log Insight?</h4><p>VMware vRealize Log Insight is one of the best if not the best tools available to manage and analyse any type of log. Underlying it runs a syslog server, so that anything which can send log to a syslog server can forward logs to this tool. But on top of that unstructured data, it runs it’s intelligent engine to analyse that data and bring structure to it. It uses machine learning to understand the pattern and gives a stunning visual representation to that data. Typically in traditional environment if I had to analyse logs for root cause analysis, I would find error in a log file, then note the timestamp and then find in other log files what was happening at that time. In Log Insight, since the pattern is understood by the intelligent logic, I can query the logs for particular patterns. It’s like querying a database for some information.</p><h4 id="Use-cases-of-vRealize-Log-Insight"><a href="#Use-cases-of-vRealize-Log-Insight" class="headerlink" title="Use cases of vRealize Log Insight:"></a>Use cases of vRealize Log Insight:</h4><p>Provided below are the typical use cases for vRealize Log Insight:</p><ul><li>Troubleshooting &amp; Root Cause Analysis<ul><li>Follow the trail from vRealize Operations Manager to logs to get to root cause to an observed problem</li><li>Identify the needle in the haystack in real time when troubleshooting a problem</li></ul></li><li>Monitoring<ul><li>Monitor metrics and events (performance &amp; change) that are visible only in logs</li><li>Identify problems proactively, ensure SLAs and comply to IT policies</li></ul></li><li>Unstructured Data Warehouse<ul><li>Collect all the data in one place without the need for custom parsing, transformation of data</li><li>Get full visibility across all your IT environment from a single place</li></ul></li></ul><h4 id="Topics-covered"><a href="#Topics-covered" class="headerlink" title="Topics covered"></a>Topics covered</h4><p>Given below is the list of the topics covered in the session:</p><ul><li>Why vRealize Log Insight</li><li>Overview</li><li>Integration &amp; Extensibility</li><li>Architecture</li><li>Machine Learning</li><li>Performance</li><li>Playing with API</li></ul><p>As always live demo is provided throughout the session to showcase the information provided in the slides. </p><div class="video-container"><iframe src="//www.youtube.com/embed/DWpOnY9JQr4" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>vRealize Log Insight comes pre-bundled with all the versions of vRealize Suite. It is an amazing tool which can make your life much easier. So if you are not actively using it, I hope this session will enable and encourage you to start using it. For more details please check the official <a href="http://www.vmware.com/products/vrealize-log-insight.html" target="_blank" rel="noopener">VMware site</a> and <a href="https://www.vmware.com/support/pubs/log-insight-pubs.html" target="_blank" rel="noopener">product documentation</a>. As always I welcome your feedbacks. Please do share them so that I am fine tune my further sessions.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize LogInsight </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize LogInsight </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Learn Advance PowerCLI in under 100 minutes</title>
      <link href="/learn-advance-powercli-in-under-100-minutes.html"/>
      <url>/learn-advance-powercli-in-under-100-minutes.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Automation in a virtualised datacenter is must for any IT-Admin. PowerShell is perhaps the most important tool in such virtualised datacenter.  For VMware environment PowerCLI provides that capability to the admins. This is the second session on PowerCLI, covering the advance topics. If you are just starting or plan to start with PowerShell, then first read the [first part]<br><a id="more"></a></p><a href="/learn-basics-of-powershell-powercli-under-1-5-hours.html" title="Learn basics of PowerShell & PowerCLI under 1.5 hours">Learn basics of PowerShell & PowerCLI under 1.5 hours</a><p>and come back here.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>As mentioned, PowerShell has become an invaluable tool in any IT-Admin’s kitty. The power of PowerShell is not only the ease of use but the things you can do with this. In first part I have shown basics covering how you can use variables and write small functions. I also covered concepts on basic cmdlets, pipeline and tying everything together for getting complex tasks done. Every software is built to interface with external world. For human users they have graphical or command line based interface. But for interacting with other softwares they provide APIs. API is the interface of Software’s for software’s. So to programatically utilise any software to it’s fullest capacity you need to know how you can use API of the software. With today’s technology everyone is moving towards using REST API’s. They are fun and easy to use. For example, VMware vSphere 6.5 comes with fully supported REST API’s.  </p><h4 id="What-is-covered-in-this-session"><a href="#What-is-covered-in-this-session" class="headerlink" title="What is covered in this session?"></a>What is covered in this session?</h4><p>In this session I have covered advance topics of PowerShell. I am not going to and possibly cannot cover everything. Instead I covered what is essential in everyday life. Mainly I covered the following topics:</p><ul><li>More on Variables (typing, array, hash tables)</li><li>Advance functions</li><li>Writing Help files</li><li>API in general and how you can explore and utilise vSphere API’s</li><li>REST API in general and how you can utilise REST API in VMware environment</li></ul><p>My main aim is to enable you to explore these features. You should build upon these foundation and explore further to master these topics. I strongly believe in showing how it is done rather than giving a particular solution. I believe, if you know what is API and how to utilise them, then you can go ahead and explore them by your own and make wonderful things. Hope you like the session and have fun as much as I had giving the session.   </p><div class="video-container"><iframe src="//www.youtube.com/embed/cDOBgzSpZgQ" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This session gives you understanding advance functions. What are they, how to write them and most importantly where to use them. You have also learned about API and REST API and how to utilise them. I hope you will build further on this knowledge and do amazing things. Do let me know your feedback on this topic.</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vRA 7.2 -  Auto-Scale , Application Authoring, Container, On-Demand LB</title>
      <link href="/vra-7-2-auto-scale-application-authoring-container-on-demand-lb.html"/>
      <url>/vra-7-2-auto-scale-application-authoring-container-on-demand-lb.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Today I got to demo advance capabilities and various possibilities in &amp; around vRA 7.2 (vRealize Automation) to an audience. This involved auto-scaling, on-demand load balancers, application authoring and containers. So, if you are a cloud admin or infra admin and wondering what features you can implement using vRA, then this post shows few of them.<br><a id="more"></a></p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>If you want to build a cloud environment with a lot of flexibility then vRA is the tool for you. The power of vRA comes from the customisation capabilities through vRO. In vRA 7.2 it had been taken to another level with NSX integration and container integration through Admiral. The infra that I am running is on nested environment. Every disk is a vDisk, even the VSAN that you see is a VMDK. So performance is pretty slow. Also I have NSX on top of NSX (VXLAN on top of VXLAN) so I have limited capability in terms of network connectivity. Please bear with me for all that. The plus point, it will show how robust VMware environment is.</p><h4 id="Auto-Scaling"><a href="#Auto-Scaling" class="headerlink" title="Auto-Scaling:"></a>Auto-Scaling:</h4><p>Before I start I wanted to answer few questions regarding Auto-Scaling. Seems this is the most in-demand feature for any cloud. Customers mostly expect this feature to work as it works in public cloud. Please understand, what you see in public cloud is an end result. Cloud providers like AWS and Azure spent considerable time and effort to build those. Also they do have their limitations as well. So, when you build a cloud solution and act like a provider, you need to spend some time and effort to do the same. It is wrong to expect every feature out of the box. For example, you can build a building using Lego Blocks, but expecting it OOTB is wrong? What you need to check is, whether you have the right tools to help you to build those. vRA along with vRO gives you those exact tools. Saying above, in future I expect this particular feature to be available OOTB in vRA. Currently, you already have Scale Out/In option out of the box. Another point, without knowing whether auto-scaling will help them or not everyone wants it. For example, it is very easy to scale-out or scale-in a VM. But if the application in the VM is not clustered, then there’s no point with auto-scaling. The opposite is also true. A lot of times people ask me that auto-scaling at infra level is fine but what about application? Understand, in auto-scaling the major task is spinning a VM or container based on certain parameters. If the application is cluster capable, it will be able to take help of auto-scaling. Application may be anything like SQL cluster, Oracle RAC or Apache Tomcat cluster. If clustering and runtime node addition or removal is supported, then auto-scaling is for application. If the underlying infra supports scaling, then put any application on top of it, and scaling is done for it. As a provider, the most important question is, how exactly the underlying infra is scaled and which parameters are supported.</p><h4 id="What-is-demoed-for-vRA-7-2"><a href="#What-is-demoed-for-vRA-7-2" class="headerlink" title="What is demoed for vRA 7.2?"></a>What is demoed for vRA 7.2?</h4><p>Mainly I am showcasing the following:</p><ul><li>How you can build 3 tier/complex blueprints in vRA</li><li>How you can get on-demand load balancer and security groups through NSX integration</li><li>Auto-Scale Out/In with varying inputs</li><li>Different mechanism for auto-scaling input trigger</li><li>Explain and demo application authoring in vRA using Software Components</li><li>A demo to show vRA to host Container Host and deploy  containerised application in the container Host</li></ul><p>Interested to see the demo? Since I am showcasing a lot of use cases, the video is 1 hours 11 minutes long. I promise it will be worth the time :).</p><div class="video-container"><iframe src="//www.youtube.com/embed/QXw9u3RiYng" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This video should give you a pretty good idea about advance capabilities of vRA 7.2. Specially if you are interested in Auto-Scaling. For more details please refer to <a href="https://www.vmware.com/in/products/vrealize-automation.html" target="_blank" rel="noopener">VMware Site</a>. Hope you will find this post useful.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Learn basics of PowerShell &amp; PowerCLI under 1.5 hours</title>
      <link href="/learn-basics-of-powershell-powercli-under-1-5-hours.html"/>
      <url>/learn-basics-of-powershell-powercli-under-1-5-hours.html</url>
      <content type="html"><![CDATA[<h3 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h3><p>Automation in datacenter is a must for any IT-Admin. And scripting is the most important skill they can have. PowerShell is the most important scripting language in today’s virtualised environment. This is a session on basics of PowerShell and PowerCLI which I did for a customer. If you are just starting or plan to start with PowerShell and wondering where to start, then this session is for you.<br><a id="more"></a></p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h3><p>Scripting started with SHELL (*nix environment) and BATCH (Windows) and has matured over the years. In this current age, the art of scripting has outgrown these two.Now we have Perl, Python or PowerShell to our rescue. Though shell and batch are still widely used, specially Shell Scripts in *nix environment, but for virtualisation you need PowerShell (vSphere, Hyper-V, RHEV, Xen). Till now PowerShell was limited to Windows environment but recently Microsoft has extended the support for Linux and Mac environment too. If you have a VMware environment, then apart from other tools, probably PowerCLI is the most helpful and powerful and easy to use tool out there. If you want to automate VMware environment then I strongly recommend you to learn this tool.</p><h3 id="How-PowerCLI-is-different-from-traditional-tools"><a href="#How-PowerCLI-is-different-from-traditional-tools" class="headerlink" title="How PowerCLI is different from traditional tools?"></a>How PowerCLI is different from traditional tools?</h3><p>When we talk about traditional scripting tools, they are text based. Meaning they take Text as input and provide text as output. In contradiction PowerShell is an Object-Oriented scripting language. Meaning it takes an object as input and provides object as an output. This puts PowerShell in an entire league altogether. Actually using this tool, you can build pretty much anything that you want to build. PowerCLI is based on PowerShell and provides special cmdlets (pronounced as commandlets) applicable to VMware environment. So to learn or master PowerCLI you need to know PowerShell first.</p><h3 id="What-is-covered-in-this-session"><a href="#What-is-covered-in-this-session" class="headerlink" title="What is covered in this session?"></a>What is covered in this session?</h3><p>In this session I have covered absolute basics of PowerShell. This is not a cover everything basics. For example, I spoke about variables but did not cover how many types of variable supported in PowerShell (e.g, array or hashtables). I plan to cover those in the next session (Advance PowerCLI). Hope you like the session and have fun as much as I had giving the session. </p><div class="video-container"><iframe src="//www.youtube.com/embed/LED-NdEEk70" frameborder="0" allowfullscreen></iframe></div><h3 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h3><p>I have covered very basic of PowerShell and PowerCLI. This session should get you started. Next week, I am scheduled to give another session on advance topic. I am planning to cover the following points in that session:</p><ul><li>Advance Functions</li><li>Exploring API</li><li>Exploring REST API</li></ul><p>I will upload the recording of that session as and when I deliver the session. Till then do let me know your feedback on this session.</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Automating Infrastructure with vRealize Code Stream and Artifactory</title>
      <link href="/automating-infrastructure-with-vrealize-code-stream-and-artifactory.html"/>
      <url>/automating-infrastructure-with-vrealize-code-stream-and-artifactory.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>The purpose of this post is to show how to automate infrastructure in virtualized dataceter through vRealize Code Stream and using other tools like Artifactory. Target audience for this post are System Admins, Cloud Admins etc. who are not full fledged developers but has some experience in scripting and automation or building blueprints in vRA. Also in the process this post clarifies on how to use vRealize Code Stream for any other automation<br><a id="more"></a><br>purpose that you want.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>One point of clarification before I go ahead and start discussing about this topic. vRealize Code Stream (vRCS) is an amazing tool which gives probably the best Continuous Integration/Continuous Delivery (CI/CD) experience for DevOps environment. But in this topic I am using the same set of tools and using it to automate my infrastructure. There are other traditional ways you can achieve the same result and perhaps you have been doing it for long in that way. But I want to showcase how easily you can do the same tasks with vRCS and more elegantly. Interested enough???? Read On…..</p><h4 id="vRealize-Code-Stream-What-is-it"><a href="#vRealize-Code-Stream-What-is-it" class="headerlink" title="vRealize Code Stream-What is it?"></a>vRealize Code Stream-What is it?</h4><p>In VMware words “VMware vRealize Code Stream provides release automation and continuous delivery to enable frequent, reliable software releases while reducing operational risks”. So, vRealize Code Stream is an automation tool which helps you to get the following:</p><ul><li>Application Delivery Automation</li><li>Pipeline Modeling</li><li>Artefact Management</li><li>Release Dashboard and Reports</li></ul><p>Among many other points. The strength of the solution is simplicity and integration capability. You typically integrate the solution with tools like Artifactory (for artefact management) and Jenkins (build automation), vRealize Automation (infrastructure deployment) to automate your entire product development, build, test and deployment life cycle.</p><h4 id="Example-Setup"><a href="#Example-Setup" class="headerlink" title="Example Setup:"></a>Example Setup:</h4><p>A typical example of the setup is provided below:</p><ul><li>Have a Artifactory server deployed in your environment. Say Java is the development tool for your Organization. Integrate Maven with Artifactory. Artifactory will provide the artefacts management capability.</li><li>Next deploy a Jenkins server. Integrate Jenkins with Git repository for source control management. Also integrate Artifactory with Jenkins. Configure Maven for Jenkins as well.</li><li>For testing purpose for example, use Selenium and integrate it again with Jenkins.</li><li>Integrate vRealize Code Stream with vRealize Automation. Where you have deployed and configured vRealize Automation.</li><li>You can build a pipeline in vRCS where the for example two stages are defined, Dev and Prod. Both stages start with deploying a VM in respective area in vRA and then deploy packages from Artifactory and then runs some tests in Selenium, runs few jobs from Jenkins.</li></ul><h4 id="Sample-Use-Case"><a href="#Sample-Use-Case" class="headerlink" title="Sample Use Case:"></a>Sample Use Case:</h4><p>In above setup, whenever a developer submits a code in Git, it fires a job in Jenkins so it builds the respective code and pushes it to Artifactory Server. You can then start the pre-defined pipeline in vRCS which will do the following for you:</p><ul><li>Deploys a VM in vRealize Automation in Dev environment</li><li>Deploys the application from Artifactory server to the newly deployed VM</li><li>Runs few pre-defined tests</li><li>Runs few Jenkins jobs</li></ul><p>Depending on the output of the above tests (you can apply Gating Rules) next stage i.e, Prod is executed which runs similar pre-defined tasks. All these are done automatically without any manual intervention. So essentially from the point where developer submits the code to the production deployment no manual tasks is needed. Thus with vRCS will can essentially build a no-touch environment. You may be thinking, this sounds so developer-ish, so complex. It is actually not. It is a simple drag-drop-select environment which you can see in the video.</p><h4 id="What-is-covered"><a href="#What-is-covered" class="headerlink" title="What is covered?"></a>What is covered?</h4><p>As mentioned above, in this post I am not going to cover a DevOps life cycle. I am actually covering something completely different. For all the System Admins and Cloud Admins out there, we know we have a lot of scripts running in our environment to automate the entire infrastructure (at least the areas we can cover). For example consider the following:</p><ul><li>Today NSX has automated the network and security areas completely. But in most datacenters, after a VM running some server is deployed and all the patches, security measures are implemented then it goes to security team for their audit. Once it passes that audit then it goes to production. What if I can automate that audit itself?</li><li>In most cases the servers are not connected directly to internet and you have some kind of repository for patch management (yum repository, RHEL Satelite Server, WSUS server etc.). All these provide patch management in your environment. What if I write my own RPM’s and want to merge it into the repository? I write my own python scripts which I want to run in all the servers (new or old)? I have a bunch of Shell, PowerShell and PowerCLI scripts and want to manage and run them from a central repository. How do I do that?</li></ul><h4 id="Demonstrated-use-case"><a href="#Demonstrated-use-case" class="headerlink" title="Demonstrated use case:"></a>Demonstrated use case:</h4><p>This is exactly what I am trying to showcase. In the given video I am demonstrating an environment where the VM deployment is done through vRealize Automation. I have an Artifactory server working as a central repository for RPM packages, Python packages and my Shell Script and other documents. I want to achieve the following simple use case: Want to configure a pipeline which once executed will do the following:</p><ul><li>Deploy a VM in Dev area through vRA</li><li>Modify environment in deployed VM so that Artifactory server will be used as a central YUM Repository and Python Package repository</li><li>Download and install rpm packages and python packages from Artifactory.</li><li>Install and setup a WebServer inside the VM</li></ul><p>I could easily do some testing and based on the testing result I could set a gating rule (I can set an approval policy as well) and run the same things in production environment. But since through this post I wanted to showcase other use cases of vRCS so by this time you have a general understanding of the product (how to use it) and further utilize it as per your requirement. Interested enough? Watch this video of 28 minutes. </p><div class="video-container"><iframe src="//www.youtube.com/embed/SeIy-uY0LTk" frameborder="0" allowfullscreen></iframe></div><h4 id="Suggested-Reads"><a href="#Suggested-Reads" class="headerlink" title="Suggested Reads:"></a>Suggested Reads:</h4><p>Greg Kullberg has amazing series of session on vRealize Code Stream. I strongly suggest you to watch them. Specially the following ones:</p><ul><li><a href="http://www.vmware.com/products/vrealize-code-stream.html" target="_blank" rel="noopener">Modeling a Pipeline In vRealize Code Stream 2.x</a></li><li><a href="https://www.youtube.com/watch?v=2PPJIhxB3Lc&amp;index=3&amp;list=PLrFo2o1FG9n7Pr4Fq-7exPvN6ThDYRcPV" target="_blank" rel="noopener">Executing and Tracking Pipelines in vRealize Code Stream 2.x</a></li><li><a href="https://www.youtube.com/watch?v=u6ZkL82OVYQ&amp;index=4&amp;list=PLrFo2o1FG9n7Pr4Fq-7exPvN6ThDYRcPV" target="_blank" rel="noopener">Working with Code Stream 2.x and vRealize Orchestrator</a></li><li><a href="https://www.youtube.com/watch?v=78AXncoRQ0A&amp;index=5&amp;list=PLrFo2o1FG9n7Pr4Fq-7exPvN6ThDYRcPVfactory" target="_blank" rel="noopener">vRCS 2.2 Resolving Artifacts from Artifactory</a></li></ul><p>Also, as I always say, your best friend is <a href="https://www.vmware.com/support/pubs/vrcs-pubs.html" target="_blank" rel="noopener">VMware documentation for vRCS</a>.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>The idea behind this post was to showcase a slightly different use case of vRealize Code Stream. In the process explain what it is. Though implementation of the use case you should be able to get a clear idea of how you can utilize vRealize Code Stream for not only DevOps environment but also for automating your daily life. I hope this post helps you in reducing few of your daily challenges faced in any datacenter. As always do give me your feedback. It is through your feedback I get to know whether I am writing useful topics or not. So happy reading and watching till the next post.</p>]]></content>
      
      <categories>
          
          <category> DevOps </category>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Code Stream </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DevOps </tag>
            
            <tag> vRealize Code Stream </tag>
            
            <tag> vRealize Suite </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Demystifying vRealize Automation – Getting it Right!</title>
      <link href="/demystifying-vrealize-automation-%E2%80%93-getting-it-right.html"/>
      <url>/demystifying-vrealize-automation-%E2%80%93-getting-it-right.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Recently I got a request to from my colleague Raminder Singh to deliver a session for customers on vRealize Automation (vRA). Though vRealize Automation is generally available for few years, still it seems there are challenges faced by customers. Specially if they are trying it out for the first time. This post aims at clearing the confusion and making it clear what steps needs to be done while implementing vRA.<br><a id="more"></a><br>If you want to clear your concepts around this technology then this post is for you.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>Building a Cloud environment using vRealize Automation has two parts. First part is to be able to successfully deploy all the components of vRealize Automation and getting it running. The second part is configuring it to successfully create a Cloud environment. In my opinion first part is easy but second part requires overall understanding of concepts related to vRA environment. Before you can configure it, understanding the different flows and sequence to be followed needs to be clarified. So in this post I will try to clarify the following:</p><ul><li>First explain the different components of vRealize Automation and what each of them do.</li><li>Second, the general flow of roles and responsibilities. Also different tasks that needs to be done logically so that a successful working Cloud can be built.</li><li>Third, giving a demo showing everything that we covered in theory.</li></ul><p>Provided below is the video of the Webex session I did covering the above points. Go through it and let me know if it helped you. For more details go to <a href="http://www.vmware.com/products/vrealize-automation.html" target="_blank" rel="noopener">documentation from VMware</a>. The best information is always provided there. </p><div class="video-container"><iframe src="//www.youtube.com/embed/qD6gbF4Jhc" frameborder="0" allowfullscreen></iframe></div>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to use API in vRO to build XaaS services in vRA</title>
      <link href="/how-to-use-api-in-vro-to-build-xaas-services-in-vra.html"/>
      <url>/how-to-use-api-in-vro-to-build-xaas-services-in-vra.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>The purpose of this post is to show how to build XaaS services in vRealize Automation (vRA) by using available API’s in vRealize Orchestrator (vRO). Target audience for this post is System Admins, Cloud Admins etc. who are not full fledged developers but has some experience in scripting and build Blueprints in vRA. Also in the process this post will clarify how to use vRO and also<br><a id="more"></a><br>how to explore API structure and use them in building custom workflows.</p><h4 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction:"></a>Introduction:</h4><p>First, a bit of background of this post. Recently, I got a request from a customer to build a custom workflow for the following use case: Build a catalog item in vRA which when requested will do the following:</p><ol><li>It should have a Form which does the following<ul><li>Shows a list of available business groups in tenant. User should be able to select one of the Business Groups</li><li>A list of all available entitlements. User should be able to select one or multiple Entitlements</li><li>Let the user input a user name</li></ul></li><li>Once the above information is provided and the user finishes the request, provided username should be added to the selected Business group and the entitlements.</li></ol><p>Obviously, all of the above tasks are typically done through normal admin tasks in vRA, but giving this workflow will let the user streamline the requests and delegate the tasks. By default, users will be part of a group where they can run this workflow. So, they can run this workflow and make themselves part of the business groups and entitlements. For security reasons there will be approval policies associated with the workflow so that all the requests will be moderated. There are no out of the box workflows available which we can use to do this. To build the above we will require building a custom workflow in vRO and exporting it as a XaaS item in vRA. It is very easy to build workflows in vRO using other pre-defined actions or workflows. But it becomes a bit complicated when none of the pre-built workflows or actions will work for you and you need to write own Javascript using the API’s. It seems for normal non-developer community there is not enough documentation available which explains the workings. There are few available blogs explaining things a bit but nothing clears the finer points. So, this post tries to explain those points while building the above solution step by step.</p><h4 id="Few-Concepts-before-we-start"><a href="#Few-Concepts-before-we-start" class="headerlink" title="Few Concepts before we start:"></a>Few Concepts before we start:</h4><p>Before I go ahead and dive into building the solution let’s cover some basic concepts:</p><h5 id="General-programming-perspective"><a href="#General-programming-perspective" class="headerlink" title="General programming perspective:"></a>General programming perspective:</h5><p><strong>API:</strong> Typically, a program has two interfaces, GUI which is mostly used by Human Users and another is API (Application Programming Interface) through which another program or piece of software interact with the program. Using API, we can programmatically communicate with another software. </p><p><strong>Class:</strong> In Object-Oriented Programming, a Class is what a Blueprint is in vRealize Automation. They define the structure but is not the actual implementation. We use this structure to declare objects. </p><p><strong>Object:</strong> An Object is the actual representation of a running entity. They are similar to what a running workload is in vRealize Automation. Actual workloads are the implementation and Blueprint in the structure. So, Class is like Blueprint but Object is the deployed workload from the Blueprint. </p><p><strong>Method:</strong> These are the pre-defined tasks that can be performed on the Objects. Taking the similar analogy, methods are tasks that can be performed on the workloads. For example, “Power On”, “Power Off”, “Suspend” are the tasks that can be performed on a deployed VM in vRA, similarly, length() is a defined method in a string object. </p><p><strong>Attribute:</strong> These are the properties of an Object. For example, name, amount of RAM etc. of a VM, are the properties of that VM. Attribute is similar properties of an object.</p><h5 id="vRealize-Orchestrator-vRO-Perspective"><a href="#vRealize-Orchestrator-vRO-Perspective" class="headerlink" title="vRealize Orchestrator - (vRO) Perspective:"></a>vRealize Orchestrator - (vRO) Perspective:</h5><p><strong>Action:</strong> Actions are small unit of program which can take multiple inputs but always return a single value. They can be perceived as a Function which when called does certain tasks and return a single value (the value may be of void type). </p><p><strong>Module:</strong> A module is a collection of Actions.</p><h4 id="Implementation-in-vRO"><a href="#Implementation-in-vRO" class="headerlink" title="Implementation in vRO"></a>Implementation in vRO</h4><p><strong>Decision Making process:</strong></p><ul><li><p>Requirement: We must show a form where user will provide input.</p><ul><li>Process: We will take help of Presentation option in vRO to ask for the input from users. We will build a Form in vRA to show the required information.</li></ul></li><li><p>Requirement: We need to pre-populate the form with Business Group and Entitlement list from current environment.</p><ul><li>Process: We will take help of Actions to achieve this</li></ul></li></ul><p>There is no Out of the Box defined workflow or Action which will give us a list of all the Business Groups or Entitlement. So, we will create two custom Actions which when run will return a list of Business Groups which we will use to pre-populate the form. </p><p><strong>Actions:</strong> The first custom action is “<strong>listBusinessGroups</strong>”. This script will return a list of Business Groups in Array of String format. The code regarding this is provided below:</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">//Defining the variable of array of strings type which will hold the business group names</span>    <span class="token keyword">var</span> bgNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Finding the CAFÉ host and then the Business Groups in that Tenant</span>    <span class="token keyword">var</span> cafeHost <span class="token operator">=</span> Server<span class="token punctuation">.</span><span class="token function">findAllForType</span><span class="token punctuation">(</span><span class="token string">"vCACCAFE:VCACHost"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> businessGroups <span class="token operator">=</span> vCACCAFEEntitiesFinder<span class="token punctuation">.</span><span class="token function">getBusinessGroups</span><span class="token punctuation">(</span>cafeHost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Storing the names of all the Business Groups in the variable bgNames</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> businessGroups<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        bgNames<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>businessGroups<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// returning the variable bgNames</span>    <span class="token keyword">return</span> bgNames<span class="token punctuation">;</span></code></pre><p>Next action item is “<strong>listAllEntitlements”</strong>. When run, this script will return a list of available Entitlements. Code regarding this action is provided below</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// Defining the variable type of array of strings to hold the entitlement names</span>    <span class="token keyword">var</span> entitlements <span class="token operator">=</span> \<span class="token punctuation">[</span>\<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Finding the CAFÉ host and the entitlements</span>    <span class="token keyword">var</span> cafeHost <span class="token operator">=</span> Server<span class="token punctuation">.</span><span class="token function">findAllForType</span><span class="token punctuation">(</span><span class="token string">"vCACCAFE:VCACHost"</span><span class="token punctuation">)</span>\<span class="token punctuation">[</span><span class="token number">0</span>\<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> entitlementlist <span class="token operator">=</span> vCACCAFEEntitiesFinder<span class="token punctuation">.</span><span class="token function">findEntitlements</span><span class="token punctuation">(</span>cafeHost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Storing the entitlement names in the variable entitlements</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>entitlementlist<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">=</span><span class="token string">""</span> entitlements<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>entitlementlist\<span class="token punctuation">[</span>i\<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">}</span><span class="token operator">=</span><span class="token string">""</span> returning<span class="token operator">=</span><span class="token string">""</span> the<span class="token operator">=</span><span class="token string">""</span> variable<span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">with</span><span class="token operator">=</span><span class="token string">""</span> entitlements<span class="token operator">=</span><span class="token string">""</span> name<span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">return</span><span class="token operator">=</span><span class="token string">""</span> entitlements<span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> <span class="token operator">&lt;=</span><span class="token string">""</span> code<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>entitlementlist<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token operator">></span></code></pre><p><strong>Main Workflows:</strong> Next we will write the main Workflow to add the user to selected business group and entitlements. The workflow name is “<strong>addUserToBG-Entitlements</strong>”. The main workflow will have two scriptable tasks, one for adding user to Business Group and another for adding user to entitlements. Details of this workflow and the scriptable tasks are provided below. </p><p><strong>The Inputs:</strong> </p><table><thead><tr><th><strong>Name</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>bgName</td><td>String</td><td>Business Group where user needs to be added</td></tr><tr><td>userName</td><td>string</td><td>User name to be added</td></tr><tr><td>entitlementnames</td><td>Array/string</td><td>List of entitlement names</td></tr></tbody></table><p>One important point to note here, both the actions which we already defined  returns an “Array of Strings” as output, but here <strong>bgName is a String</strong> whereas <strong>entitlementnames</strong> is an <strong>Array of String</strong>. This is because we want user to select a single Business Group, whereas they can select multiple entitlements. </p><p><strong>Attributes:</strong></p><table><thead><tr><th><strong>Name</strong></th><th><strong>Type</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>businessGroups</td><td>Array/vCACCAFE:BusinessGroup</td><td>List of Business Groups</td></tr><tr><td>finalBG</td><td>vCACCAFE:BusinessGroup</td><td>Business Group where user needs to be added</td></tr><tr><td>vCACACAFEHost</td><td>vCACCAFE:VCACHost</td><td>CAFE Host</td></tr><tr><td>entitlement</td><td>vCACCAFE:Entitlement</td><td>Entitlement Where user to be added</td></tr><tr><td>entitlementslist</td><td>Array/vCACCAFE:Entitlement</td><td>A list of all the entitlements</td></tr></tbody></table><p>In vRO, attributes are Global variables, we can use these variables from any workflow and they are consistent throughout the lifetime of the main workflows. For more information on different variables please read the wonderful blog at <a href="http://www.vvork.info/2015/06/variables-in-vrealize-orchestrator.html" target="_blank" rel="noopener">http://www.vvork.info/2015/06/variables-in-vrealize-orchestrator.html</a>. </p><p><img src="/images/2016/12/Attributes.png" alt="Image 1" class="responsive"></p><p>Attribute of the vRO workflow</p><p><strong>Schema:</strong> Provided below is the schema presentation of the workflow: </p><p><img src="/images/2016/12/Schema.png" alt="Image 2" class="responsive"></p><p>Schema of vRO workflow</p><p>The first and major step is to define the form which will be presented to user at runtime. We can do that using the Presentation Tab. The input variables will automatically be shown in Presentation tab. We need to select the variables and then add parameter for them. For parameter type we will select “Predefined Answer” and for Value we will select OGNL. In OGNL type we will select the action items we defined earlier. Provided below are the screenshots for them. </p><p><img src="/images/2016/12/Presentation-1.png" alt="Image 3" class="responsive"></p><p>First input parameter presentation</p><p><img src="/images/2016/12/Presentation-2.png" alt="Image 4" class="responsive"></p><p>Second Parameter Presentation</p><p>Note for the values we selected the respective action items. Next we will focus on the individual Scriptable tasks. Also provided below is the Visual binding of the parameters for the first scriptable task (Add user to Business Group): </p><p><img src="/images/2016/12/Visual-Binding-1.png" alt="Image 5" class="responsive"></p><p>Visual Binding for first vRO workflow</p><p>Code for the first scriptable task is provided below:</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// Encapsulating the entire script in try - catch statement</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Getting a list of all business groups</span>        businessGroups <span class="token operator">=</span> vCACCAFEEntitiesFinder<span class="token punctuation">.</span><span class="token function">getBusinessGroups</span><span class="token punctuation">(</span>vCACACAFEHost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Running a for loop to match business group name with the user</span>    <span class="token comment" spellcheck="true">// provided business group name. Once the match is found get the Business</span>    <span class="token comment" spellcheck="true">// group object</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> businessGroups<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>bgName <span class="token operator">==</span> businessGroups\<span class="token punctuation">[</span>i\<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> finalBG <span class="token operator">=</span> businessGroups\<span class="token punctuation">[</span>i\<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// Getting a list of all existing users in the Business Group</span>    <span class="token keyword">var</span> userNames <span class="token operator">=</span> finalBG<span class="token punctuation">.</span><span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>userNames<span class="token punctuation">)</span><span class="token punctuation">{</span>        size <span class="token operator">=</span> userNames<span class="token punctuation">.</span>length<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> alreadyExists<span class="token punctuation">;</span>    alreadyExists <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Checking to see if the user already exists in the Business group</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size <span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>userName <span class="token operator">==</span> userNames\<span class="token punctuation">[</span>j\<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                System<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"User "</span> <span class="token operator">+</span> userName <span class="token operator">+</span> <span class="token string">" is already added to the Business Group "</span><span class="token operator">+</span>finalBG<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">".         The user will be skipped."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                alreadyExists <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>alreadyExists<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// If this is true that means user is not already present in the BG</span>        userNames\<span class="token punctuation">[</span>size\<span class="token punctuation">]</span> <span class="token operator">=</span> userName<span class="token punctuation">;</span>        finalBG<span class="token punctuation">.</span><span class="token function">setUsers</span><span class="token punctuation">(</span>userNames<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>finalBG<span class="token punctuation">.</span>activeDirectoryContaier<span class="token punctuation">)</span><span class="token punctuation">{</span>            finalBG<span class="token punctuation">.</span><span class="token function">setActiveDirectoryContainer</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Adding user to business Group "</span> <span class="token operator">+</span> finalBG<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Adding the user to Business Group</span>        vCACACAFEHost<span class="token punctuation">.</span><span class="token function">createInfrastructureClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInfrastructureBusinessGroupsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>finalBG<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"User added to Business Group "</span> <span class="token operator">+</span> finalBG<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">catch</span><span class="token punctuation">(</span>errorCode<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// In case of any error throw the error</span>        System<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>errorCode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> errorCode<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><p>Visual Binding for the second scriptable task (Add user to Entitlements) is provided below: </p><p><img src="/images/2016/12/Visual-Binding-2.png" alt="Image 6" class="responsive"></p><p>Visual Binding of second vRO workflow</p><p>Code for the second scriptable task is provided below:</p><pre class=" language-javascript"><code class="language-javascript">    <span class="token comment" spellcheck="true">// Encapsulating the entire script block in try - catch statement</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// getting a list of all the entitlements</span>        entitlementslist <span class="token operator">=</span> vCACCAFEEntitiesFinder<span class="token punctuation">.</span><span class="token function">findEntitlements</span><span class="token punctuation">(</span>vCACACAFEHost<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// Running the loop to get the entitlement which user specified</span>        <span class="token comment" spellcheck="true">// entitlementnames holds all the entitlement names which user specified</span>        <span class="token comment" spellcheck="true">// entitlementlist holds the list of all the entitlements.</span>        <span class="token comment" spellcheck="true">// note entitlementnames is an array of strings while entitlementslist is an array of entitlement object</span>        <span class="token keyword">for</span><span class="token punctuation">(</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>entitlementnames<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token operator">=</span><span class="token string">""</span> j<span class="token operator">=</span><span class="token string">"0;"</span> j<span class="token operator">&lt;</span>entitlementslist<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">if</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">(</span><span class="token operator">=</span><span class="token string">""</span> entitlementnames\<span class="token punctuation">[</span>i\<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"="</span> entitlementslist\<span class="token punctuation">[</span>j\<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">=</span><span class="token string">""</span> entitlement<span class="token operator">=</span><span class="token string">"entitlementslist\[j\];"</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">}</span><span class="token operator">=</span><span class="token string">""</span> at<span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">this</span><span class="token operator">=</span><span class="token string">""</span> stage<span class="token operator">=</span><span class="token string">""</span> we<span class="token operator">=</span><span class="token string">""</span> found<span class="token operator">=</span><span class="token string">""</span> our<span class="token operator">=</span><span class="token string">""</span> object<span class="token operator">=</span><span class="token string">""</span> validating<span class="token operator">=</span><span class="token string">""</span> the<span class="token operator">=</span><span class="token string">""</span> system<span class="token punctuation">.</span><span class="token function">getmodule</span><span class="token punctuation">(</span><span class="token string">"com.vmware.library.vcaccafe.util"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validateobject</span><span class="token punctuation">(</span>entitlement<span class="token punctuation">,</span><span class="token operator">=</span><span class="token string">""</span> <span class="token string">"entitlement"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> getting<span class="token operator">=</span><span class="token string">""</span> cafe<span class="token operator">=</span><span class="token string">""</span> host<span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">var</span><span class="token operator">=</span><span class="token string">""</span> service<span class="token operator">=</span><span class="token string">""</span> client<span class="token operator">=</span><span class="token string">"host.createCatalogClient().getCatalogEntitlementService();"</span> alreadyexists<span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> alreadyexists<span class="token operator">=</span><span class="token string">"false;"</span> checking<span class="token operator">=</span><span class="token string">""</span> to<span class="token operator">=</span><span class="token string">""</span> see<span class="token operator">=</span><span class="token string">""</span> user<span class="token operator">=</span><span class="token string">""</span> already<span class="token operator">=</span><span class="token string">""</span> exists<span class="token operator">=</span><span class="token string">""</span> <span class="token keyword">in</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">(</span><span class="token keyword">var</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> <span class="token operator">&lt;=</span><span class="token string">""</span> entitlement<span class="token punctuation">.</span><span class="token function">getprincipals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">=</span><span class="token string">""</span> j<span class="token operator">++</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">{</span><span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">"="</span> entitlement<span class="token punctuation">.</span><span class="token function">getprincipals</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\<span class="token punctuation">[</span>j\<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">""</span> system<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"user="</span><span class="token string">" "</span><span class="token operator">=</span><span class="token string">""</span> <span class="token operator">+</span><span class="token operator">=</span><span class="token string">""</span> username<span class="token operator">=</span><span class="token string">""</span> is<span class="token operator">=</span><span class="token string">""</span> assigned<span class="token operator">=</span><span class="token string">""</span> <span class="token string">"+entitlement.getname()+"</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token string">""</span> will<span class="token operator">=</span><span class="token string">""</span> be<span class="token operator">=</span><span class="token string">""</span> skipped<span class="token punctuation">.</span><span class="token string">");="</span><span class="token string">" (!alreadyexists)="</span><span class="token string">" means="</span><span class="token string">" not="</span><span class="token string">" principal="</span><span class="token keyword">new</span><span class="token string">" vcaccafecatalogprincipal();="</span><span class="token string">" principal.settype(vcaccafeprincipaltype.user);="</span><span class="token string">" principal.setref(username);="</span><span class="token string">" principal.settenantname(host.tenant);="</span><span class="token string">" system.getmodule("</span>com<span class="token punctuation">.</span>vmware<span class="token punctuation">.</span>library<span class="token punctuation">.</span>vcaccafe<span class="token punctuation">.</span>util<span class="token string">").addelementtolist(entitlement,="</span><span class="token string">" "</span>getprincipals<span class="token string">",="</span><span class="token string">" principal);="</span><span class="token string">" system.log("</span>assigning<span class="token operator">=</span><span class="token string">""</span> entitlement<span class="token punctuation">.</span><span class="token function">getname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">""</span> <span class="token string">"..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> client<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>entitlement<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">=</span><span class="token string">""</span> system<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"user="</span><span class="token string">" entitlement.getname());="</span><span class="token string">" catch(errorcode){="</span><span class="token string">" system.error(errorcode);="</span><span class="token string">" throw="</span><span class="token string">" errorcode;="</span><span class="token string">" code="</span>"<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>entitlementnames<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span class="token operator">></span></code></pre><p>The explanation for the codes and other detailed discussion points are provided in the video. Mainly, the following points are covered in the video:</p><ol><li>General Modes of vRO</li><li>How to create custom actions and workflows</li><li>How to explore and use API’s</li><li>Details of the above provided codes</li><li>How to build a XaaS item in vRA</li><li>How to build a Form in vRA</li><li>Final result</li></ol><div class="video-container"><iframe src="//www.youtube.com/embed/3Dx9qBvm5Rg" frameborder="0" allowfullscreen></iframe></div><p>Provided below is another short video to explain how to explore the API in vRO and use them in Scripts. </p><div class="video-container"><iframe src="//www.youtube.com/embed/FYmBdz_ot70" frameborder="0" allowfullscreen></iframe></div><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a>Conclusion:</h4><p>This post explains the API explorer in vRO and how we can use them to write custom scripts and workflows to build XaaS services in vRealize Automation. Do let me know your feedback on this topic or any other topic that you want me to cover.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> vRealize Orchestrator </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Integrating NSX with vRealize Automation-Part II</title>
      <link href="/integrating-nsx-with-vrealize-automation-part-ii.html"/>
      <url>/integrating-nsx-with-vrealize-automation-part-ii.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Dear Readers, this is the second and last part of the series on integrating NSX with vRealize Automation. Initially I thought of writing three separate blogs on this topic covering Integration, Consumption and Result. But then due to the size I decided to put a video and few screenshots. This reduced the size to a great extent and hence I will club part II and III in this post.<br><a id="more"></a><br> In this post I am going to cover the after integration parts. That is, how to consume NSX entities in vRealize Automation Blueprints and then show the end result.</p><h4 id="Pre-Requisites"><a href="#Pre-Requisites" class="headerlink" title="Pre-Requisites:"></a>Pre-Requisites:</h4><p>As mentioned in the [first part]<a href="/integrating-nsx-with-vrealize-automation-part-i.html" title="Integrating NSX with vRealize Automation-Part I">Integrating NSX with vRealize Automation-Part I</a>, before you can use the NSX entities, you need to configure and use them in the reservation. So first you need to configure network profile and then in Reservation map those profiles to the portgroups created and exposed by NSX. Note: The Logical Switch you create in NSX will be exposed and listed as a portgroup here in vRA (at the end of the day, those logical switches are portgroups created in dvSwitch). Also note, the security policies created in NSX will be available in reservation tab. So the security profiles you want to use in a Business Group needs to be selected in Reservation tab. Once selected, they will be available to be consumed in Blueprints. Once the above is done we will further go ahead and use those entities in Blueprint.</p><h4 id="Configuring-the-vRA-Blueprint-with-NSX"><a href="#Configuring-the-vRA-Blueprint-with-NSX" class="headerlink" title="Configuring the vRA Blueprint with NSX"></a>Configuring the vRA Blueprint with NSX</h4><p>For this example the following scenario is taken:</p><ul><li>This is a multi-tier blueprint with Web, App and DB components in it</li><li>The Web and App tier will multiple machines in cluster so that they can scale when needed</li><li>The Web tier will use a Dynamic Load balancer. So whenever an instance is deployed from this Blueprint, a load balancer will be deployed for this</li><li>All the VM’s created from this blueprint will be under activity monitoring security policy.</li><li>SSH port will be automatically blocked to all the VM’s through Block-SSH security policy.</li></ul><p>The below video shows the steps to create the blueprint and use NSX entities. It also covers publishing, entitlement and “Request for Catalog item” as well.</p><h4 id="Steps-Used-for-Configuration"><a href="#Steps-Used-for-Configuration" class="headerlink" title="Steps Used for Configuration:"></a>Steps Used for Configuration:</h4><ul><li>Create a New Blueprint, use NSX settings</li><li>In the designer form use 3 vSphere Machines (one for each category)</li><li>Make subsequent modification in each of them (used clone and linked clone methods of create a VM)</li><li>Added network and configured them</li><li>Added security policies and configured them</li><li>Added load balancer and made required configuration</li><li>Publish the blueprint, entitle it and then from Catalog consume the entity</li></ul><div class="video-container"><iframe src="//www.youtube.com/embed/GomHcNx2-04" frameborder="0" allowfullscreen></iframe></div><h4 id="Result-of-NSX-Integration"><a href="#Result-of-NSX-Integration" class="headerlink" title="Result of NSX Integration:"></a>Result of NSX Integration:</h4><p>Provided below are the screenshots from the deployment stage. For example I have taken a Multi-Machine blueprint named Multimachine-Web. It has the same configuration as that of the above example. To request for the item go to Catalog and click on Request. </p><p><img src="/images/2016/11/result-1.jpg" alt="NSX - 1" class="responsive"></p><p>Click on Submit to request for the item. </p><p><img src="/images/2016/11/result-2.jpg" alt="NSX - 2" class="responsive"></p><p>The request is successfully submitted. </p><p><img src="/images/2016/11/result-3.jpg" alt="NSX - 3" class="responsive"></p><p>Go to Requests tab to check for the request. Click on the request number to get more details. </p><p><img src="/images/2016/11/result-5.jpg" alt="NSX - 5" class="responsive"></p><p>Click on “Execution Information” to get detailed step by step execution information. </p><p><img src="/images/2016/11/result-6.jpg" alt="NSX - 6" class="responsive"></p><p>In details information you can check completed, pending and failed (if any) steps. </p><p><img src="/images/2016/11/result-7.jpg" alt="NSX - 7" class="responsive"></p><p><img src="/images/2016/11/result-8.jpg" alt="NSX - 8" class="responsive"></p><p>At the backend, in vCenter we can get the new entities that are being created. </p><p><img src="/images/2016/11/result-8.1.jpg" alt="result - 8-1" class="responsive"></p><p>The job successfully completed. </p><p><img src="/images/2016/11/result-9.jpg" alt="result - 9" class="responsive"></p><p>Let’s check the details of a VM </p><p><img src="/images/2016/11/result-14.jpg" alt="result - 14" class="responsive"></p><p>This is the Web component, it automatically got two IP’s   </p><p><img src="/images/2016/11/result-16.jpg" alt="result - 16" class="responsive"></p><p>Details of On-demand load balancer. </p><p><img src="/images/2016/11/result-17.jpg" alt="result - 17" class="responsive"></p><p>Here we can see that the created VM is connected to the respective Logical Switch. </p><p><img src="/images/2016/11/result-18.jpg" alt="result - 18" class="responsive"></p><p>A separate logical switch has been created for On-Demand routed network. </p><p><img src="/images/2016/11/result-19.jpg" alt="result - 19" class="responsive"></p><p>A new edge gateway has been created for On-Demand Load Balancer. </p><p><img src="/images/2016/11/result-20.jpg" alt="result - 20" class="responsive"></p><p>The parameters for monitoring on Edge. </p><p><img src="/images/2016/11/result-21.jpg" alt="result - 21" class="responsive"></p><p>The load balancer is automatically configured. </p><p><img src="/images/2016/11/result-22.jpg" alt="result - 22" class="responsive"></p><p>Pools are configured in Load Balancer. </p><p><img src="/images/2016/11/result-23.jpg" alt="result - 23" class="responsive"></p><p>Virtual Servers are configured with IP </p><p><img src="/images/2016/11/result-24.jpg" alt="result - 24" class="responsive"></p><p>Created VM’s are automatically added to the security Policies. </p><p><img src="/images/2016/11/result-1.1.jpg" alt="result - 1-1" class="responsive"></p><p>This concludes this series for NSX integration with vRealize Automation and consumption of NSX provided entities using vRA blueprint.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> NSX </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> NSX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vRealize Operations Manager - Monitoring vs Forensic</title>
      <link href="/vrealize-operations-manager-monitoring-vs-forensic.html"/>
      <url>/vrealize-operations-manager-monitoring-vs-forensic.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Did you ever wonder or faced the following questions from a customer regarding vRealize Operations Manager?</p><ul><li>Why the resource utilization metrics shown by OS and other monitoring tools does not match with those shown in vRealize Operations Manager?<a id="more"></a></li><li>Why vRealize Operations Manager shows so many parameters and is complex to look at?</li><li>Why the reclamation suggestions provided by vRealize Operations Manager does not align with other tools?</li><li>Why only badges are shown instead of utilization in <a href="http://www.vmware.com/products/vrealize-automation.html" target="_blank" rel="noopener">vRealize Automation</a> when you integrate it with vRealize Operations Manager?</li></ul><p>If your answer is yes to any of the above, then this blog is for you. Before I go ahead and discuss the above questions, let’s cover some basics first.</p><h4 id="What-is-Monitoring"><a href="#What-is-Monitoring" class="headerlink" title="What is Monitoring?"></a><strong>What is Monitoring?</strong></h4><p>Monitoring can be defined as observing the current behavior of any system to make sure that it runs as expected or well within the defined boundaries. We use this method in our everyday life in all possible areas. For this discussion, I am confining myself to only Datacenter monitoring and more specifically to Virtualized Datacenter. From Datacenter perspective, monitoring means the process of using manual or automated tools and techniques to continuously observe the different components of Datacenter to make sure that the health of every one of them is in compliance with defined criteria’s. Traditionally from Datacenter perspective we majorly monitor the following components:</p><ul><li>Physical Hardware (Server)</li><li>Network</li><li>Operating System and Applications</li><li>Security</li></ul><p>In every datacenter we typically have Network Operations Center (NOC) and Security Operations Center (SOC) where we monitor network and security operations of an Organization. Traditionally we have a live display or Dashboard where we project and continuously monitor these environments. We have solutions like Cacti, Nagios and players like BMC, CA etc. in this monitoring space.</p><h4 id="How-monitoring-a-Virtualized-Datacenter-is-different"><a href="#How-monitoring-a-Virtualized-Datacenter-is-different" class="headerlink" title="How monitoring a Virtualized Datacenter is different?"></a><strong>How monitoring a Virtualized Datacenter is different?</strong></h4><p>With traditional Datacenter monitoring we were monitoring only the hardware, network, storage, Operating Systems and Applications. But virtualization changed the scenario. It introduced another major and vital component between Servers and the operating systems, which is THE HYPERVISOR. Thus with and without virtualization the troubleshooting and monitoring criteria changes significantly. Functionally the rest of the components remains same (Physical Server, Network, Storage and OS/Applications), but the way resource management is done in Virtualized environment is different from traditional one. Please NOTE, though I said everything is same it is actually not, with Software Defined Network and Storage it is different, but that is the subject of discussion for another time. Let’s see how it is different in virtual environment. In traditional environment all the resources of a server is dedicated to the running operating system and in turn to the application/applications running inside that operating system (OS). Here, the operating system manages all the physical resources available in the underlying physical hardware. In contrast, in virtualized server, the Hypervisor manages the resources for the virtual machines and thus the resources are shared by many different VM’s and in turn the OS and Applications running inside them. But the entire process is abstracted to the OS running inside the VM. It can see only the resources provided to it by the admin and thinks it has all the resources only for it’s use which is what actually allocated for it. This is not a fact. We are tricking the VM into thinking like this. It is more clear in the following picture. </p><p><img src="/images/2016/10/traditional-vs-virtual.png" alt="traditional-vs-virtual" class="responsive"></p><p>Traditional vs Virtual Architecture</p><p>Also troubleshooting in virtualized environment is different because a resource crunch at the hypervisor layer may lead to performance problem in VM. For example, say a virtual machine is using only 50% of all the resources allocated to it, but since there is a storage latency at Hypervisor level, the VM may perform poorly. So now you have another critical layer to monitor for. </p><p>Actually, I will go so far to say that in Virtualized Environment, Hypervisor perspective is <strong>THE MOST</strong> important perspective for maintaining performance in that environment. <strong>For obvious reasons, traditional monitoring tools fail to understand or provide the insight required for monitoring a virtualized datacenter. We need more modern, specialized and sophisticated tools for that.</strong> </p><p>So, traditional tools and way of monitoring is not sufficient for this type of Datacenter. </p><p>Next question is what to monitor for? Once you are clear about what you need to monitor then we can decide which tool to use. </p><p><strong>What parameters to monitor?</strong> Here I am not going to discuss about physical server, Datacenter Network or Storage health, as that remains same (not considering Software Defined Storage or network). In this blog I am going to talk only about Operating Systems or Applications monitoring. </p><p>In traditional environment we are content with monitoring different parameters and metrics for server utilization (typically CPU, Memory, Network and Storage). But as discussed above, in virtualized environment what an Operating System sees inside a virtual machine is not the entire picture. It is only part of the picture. </p><p><strong>Note:</strong> From here onwards I will be more specific to VMware environment, but the general idea and discussion can be applied to any hypervisor environment. It’s just that <a href="http://www.vmware.com/products/vrealize-automation.html" target="_blank" rel="noopener">VMware hypervisor</a> is more sophisticated and has advanced many technologies for managing resources which is not present in other hypervisors. </p><p>As a virtualization admin I am more interested about the overall utilization of the physical server. If a VM is under resource constraint (for example, I have given it 4 GB RAM and it requires 6 GB) and I have enough free resources at the hypervisor level, then simply increasing the resources for that VM will solve the problem. But consider the following scenario. The physical server has 64 GB physical RAM. If I keep aside 4 GB RAM for <a href="http://www.vmware.com/products/vrealize-automation.html" target="_blank" rel="noopener">ESXi Hypervisor</a>, that leaves us with 60 GB RAM. Next, let’s assume I have deployed 50 VM’s with 3 GB vRAM each in that server. So the total allocation resource is 150 GB vRAM. I am over allocating by 90 GB. </p><p>Till the time VM’s use less RAM and the overall current requirement stays below 60GB this environment runs fine with no issues. But if somehow all the VM’s starts using 50% of the vRAM allocated to each of them at the same time (you cannot say NO ) then your active RAM requirement is 75 GB which is greater than what the server has (60GB) and you run into performance problem. </p><p>You see, all your individual VM’s utilization is 50%, but overall you have severe performance issue. It is evident that in virtual environment you should monitor not only for allocation or current utilization but also for <strong>DEMAND</strong> and should be more interested about the <strong>TREND</strong> than just the current Utilization. Using normal monitoring tools, monitoring only the current utilization is not sufficient because in virtualized environment you typically over-provision resources (if not memory then always CPU) and you need to know the trend for the resource utilization so that you can predict the utilization as well. </p><p>This leads to predicting the capacity as well. You need to know well in advance when you will be out of resources and need to procure more. This is particularly important for dynamic environments where the environment grows at a faster pace (service provider or private/public cloud environment). Also when a problem occurs in a VM, you should be able to see the entire environment from a single page and co-relate between all the different parameters and understand the cause and effect and thus finding Root-Cause of a problem in the shortest time possible.</p><h4 id="How-vRealize-Operations-Manager-is-different"><a href="#How-vRealize-Operations-Manager-is-different" class="headerlink" title="How vRealize Operations Manager is different?"></a><strong>How vRealize Operations Manager is different?</strong></h4><p>vRealize Operations Manager does all the above and more. It is not a traditional monitoring tool. It does not even monitor the parameters in real time. It collects the metrics in 5 minute interval and shows the data likewise. So in traditional sense you cannot call it a monitoring tool (in traditional sense a monitoring tool typically monitors the parameters continuously in real-time). </p><p>Though many will differ with me, but I prefer to call it an <strong>“Analytical and Forensic tool”</strong> rather than a simple monitoring tool. You can do monitoring with it, but it’s main beauty lies in the analytical and forensic capabilities. It is a Swiss knife for Datacenter monitoring and analytics. This tool intimates you about a problem even before it arises. It warns you about the probable issues that may come in near and not so near future. It analyzes and tell you when you will be out of resources. </p><p>You can run What-If scenarios (what if the utilization increases or a new project comes, when you will need to add more resources). If any issue arises in your environment, then you can simply click on the notification and drill down to minute details to find out what caused the problem. Actually it automatically does a Root-Cause analysis and gives you probable solutions as well. </p><p>With the help of this tool I was able to find root cause of a critical issue in less than 10 minutes with all the evidence I needed, which the traditional infra teams cloud not find in 15 days (a story for a separate time). </p><p>It can show you reclamation values and you can initiate those tasks from this tool. You need to analyze which VM’s taking up most of the resources in the Datacenter? No worries. Same goes for any other parameters. You need to run other analytics on any of the entities? Here you go. Like the Forensic tools and methods you use to find out a security breach, you can apply similar approach to find the root cause of any problem in your datacenter through this tool. </p><p>Provided below is a screenshot showing what actions you can do on VM’s from this tool. </p><p><img src="/images/2016/10/Actions-on-VMs.png" alt="vRealize Operations Manager Picture 2" class="responsive"></p><p>Actions on VM’s</p><p>It is designed and built to do a lot many things and you should focus on those. If you only want to see the current CPU, Memory, Network, Storage utilization of the VM’s then why do you need this? Any 3rd party traditional monitoring tool can do that. If you want to transform your Datacenter into a modern Datacenter with every bit of it under your control where you already know what is happening and what is going to happen then this is for you. </p><p>So you see this is not your traditional monitoring tool. It is way more than that. It is up to you whether you want to use it only to see the current utilization and compare that parameter with other tools or utilize it fully to get the full benefits. Get your expectations right, learn how to use it, how to interpret the values and this will be the best tool you can have.</p><h4 id="Why-do-the-parameters-mismatch"><a href="#Why-do-the-parameters-mismatch" class="headerlink" title="Why do the parameters mismatch?"></a><strong>Why do the parameters mismatch?</strong></h4><p>A valid question, most often you see the memory utilization reported by OS or a reporting tool (for e.g, System Center for Microsoft Operating Systems) differ from that of vRealize Operations Manager. Why is that? You see hypervisor has its own way of managing resources and it looks at the resources differently from that of a typical operating system. A typical operating system looks only at the memory that it is asking for. But hypervisor has different methods. For example, ESXi has four ways of physical memory management.</p><ul><li>Transparent Page Sharing</li><li>Memory Ballooning</li><li>Memory Compression</li><li>Swapping</li></ul><p>All of the above helps ESXi to safely give us the option to do over-provisioning of memory. So if a VM asks for new memory pages that does not always mean it is taking extra physical memory space. It may be possible some other VM has the same exact page and that page gets shared with this VM. So essentially this VM got a new page but from ESXi perspective no extra page or memory space is required to serve the request. More about these can be found <a href="http://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/techpaper/perf-vsphere-memory_management.pdf" target="_blank" rel="noopener">here</a>. </p><p>Hence a new memory request for a VM does not always mean a new memory page served by ESXi. So from inside the operating system it may be reported that the utilization of that OS instance is 60%, but from vRealize Operations Manager it may report that the utilization of that VM is only 50%. Notice the difference, from inside the VM, OS reports the utilization of the OS, but from outside the VM, vRealize Operations Manager reports the VM utilization which may be different and in all probability will be less than the one reported from within. Also when you talk about virtualization and memory management by Hypervisor, you need to know the following parameters and what they mean:</p><ul><li>Allocation (Capacity)</li><li>Demand</li><li>Usage</li></ul><p>The above three parameters as reported in vRealize Operations Manager. </p><p><img src="/images/2016/10/capacity-demand-usage.png" alt="vRealize Operations Manager Picture1" class="responsive"></p><p>Capacity-Demand-Usage</p><p>Capacity (Allocation) means the amount of resources allocated to a VM. In the above picture the VM has a memory capacity of 1 GB. That means while creating the VM, 1 GB vRAM was allocated to it. </p><p>Demand, is the amount of resource demanded by the VM at any particular time. In the above picture the VM has a current demand of 84.48 MB. </p><p>Usage is the amount of resource provided by underlying hypervisor to the VM. In this case the Usage is 217.18 MB. In a typical well performing environment Demand should always be less than Allocation and Usage. If Demand is greater than Allocation, then you have a VM which is undersized. You need to increase resources for that VM. If Demand is greater than Usage, then you have resource crunch/contention at hypervisor level and you should either increase resources at hypervisor level or decrease number of VM’s running on that hypervisor. </p><p>The guest of the VM or generic monitoring tools typically reports capacity and usage parameters. In the above screenshot you can see considerably higher Usage shown in vRealize Operations Manager whereas Demand is pretty less. This is because, if there is no contention then the amount of memory assigned to a VM is not reclaimed, irrespective of whether the memory pages are active or not. </p><p>In simple terms, in this case the VM once touched 217.18 MB of it’s allocated 1 GB RAM, since then the Usage is shown as 217.18 MB. Though the current demand (utilization) is 84.48 MB, but since the memory space was allocated by ESXi server, it is reported as current Usage. </p><p>If the ESXi host is under resource contention then memory is reclaimed and the Usage goes down. Since vRealize Operations Manager is an agentless solution and it does not collect generic utilization parameters inside the guest OS, so it has no way of knowing the utilization from Guest OS perspective. </p><p>The Usage it reports is from Hypervisor perspective. Which is completely different from OS perspective. As explained above a memory requirement from Guest OS perspective does not always covert to a memory requirement from ESXi perspective. This is the reason most of the times you will see that Guest OS or other monitoring tools report higher utilization whereas vRealize Operations Manager reports lower utilization. </p><p>When calculating current Capacity or future requirement or suggesting reclamation values vRealize Operations Manager considers Demand and is aggressive in nature. This is the reason you find discrepancy in these values reported in traditional against that of vRealize Operations Manager. </p><p>Also note, when deciding whether a VM is idle or over-worked vRealize Operations Manager checks for certain parameters which is set in Policies. </p><p>The policy is set in the following way: If a VM’s CPU or Memory utilization is less than 10% for more than 90% of time, then the VM is considered as an idle VM. Similarly, if a VM’s CPU or Memory utilization is more than 90% for more than 90% of time, then the VM is considered as an overworked VM. </p><p>The above values are examples and you can customize the percentage of time and utilization. What this essentially means is, say in a week if a VM is 10% utilized for 90% of the times then this VM is idle. So essentially, if that VM is 90% utilized for less than 10% of time which is upto 16.8 hours within a week, still it is considered an idle VM. Your typical tool will report the 90% utilization but vRealize Operations Manager will say it is oversized and idle VM. So if the VM had 4 GB RAM, vRealize Operations Manager may recommend for 1 GB. Now if you reduce the RAM to 1 GB then the VM will face severe problem during those 16.8 hours when it requires 3.6 GB of vRAM.</p><h4 id="Why-only-Badges-are-shown"><a href="#Why-only-Badges-are-shown" class="headerlink" title="Why only Badges are shown?"></a><strong>Why only Badges are shown?</strong></h4><p>I have faced this question multiple times, why only Health badge for a VM is shown in vRealize Automation when you integrate it with vRealize Operations Manager.</p><p>People expect and want to see realtime CPU and Memory utilization for the workloads. Please understand what you are asking for is a very nominal thing. <strong>What this tool is providing is way beyond that.</strong> Knowing only utilization, you need to monitor it, make the decision for yourself. While making that decision at a glance you never know whether it is a intermittent spike or long standing issue. What is the final aim here? To run the application in a healthy state, right? Should you be bothered about the utilization, when the tool is taking care of all of that? It knows what the VM wants and requires and tell you whether it is HEALTHY or not. Whether the spike is well within range or a recurring issue. This is what you should be bothered about. About the state of the VM. This is what you actually want to know and this is what exactly what it shows. </p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a><strong>Conclusion:</strong></h4><p>In conclusion, I can say the following:</p><ol><li>DO NOT COMPARE vRealize Operations Manager with your traditional monitoring tools (set the expectation right). It is NOT A SIMPLE MONITORING SOLUTION.</li><li>While monitoring the VM’s, check and be concerned with the DEMAND of the VM (this is what it requires to run without any performance problems). Based on this change the allocation.</li><li>Check the overall demand and usage for ESXi servers. If Demand goes beyond Usage, then you have a problem in your hand.</li><li>Memory utilization reported by OS of the VM’s or other tools are more accurate than vRealize Operations Manager. As these values are reported from within the VM where they have more insight into the VM. In future releases of vRealize Operations Manager this is going to be more accurate available out-of-the-box (now you need to tweak the default policies).</li><li>Check and double check vRealize Operations Manager policies and tweak it according to your environment, because every environment is different.</li><li>Double check the reclaim values and apply realistically. For e.g if a VM has 12 GB vRAM and vRealize Operations Manager suggests 4 GB, don’t just reduce the value to 4 GB. First reduce the value to 8 GB, monitor for some time and if everything goes well then further reduce to 4 GB.</li><li>While calculating overall capacity of hypervisor trust vRealize Operations Manager. It is based on Demand and is pretty good at predicting the load.</li><li>Change the way you monitor your environment, specially if it a big one. With thousands of VMs you can not monitor utilization for each and every component. With the utilization metrics you need to find the health yourself. This tool gives it out of the box. It learns, knows and tells you about the health of the components. Take advantage of this.</li><li>Go ahead give it a try. Download it from this <a href="https://my.vmware.com/web/vmware/info/slug/infrastructure_operations_management/vmware_vrealize_operations/6_3" target="_blank" rel="noopener">location</a>.</li></ol><p>To know more about this great product please visit the <a href="https://www.vmware.com/support/pubs/vrealize-operations-manager-pubs.html" target="_blank" rel="noopener">documentation area</a>. Also check the great training available from <a href="https://mylearn.vmware.com/mgrreg/courses.cfm?ui=www_edu&amp;a=one&amp;id_subject=58804" target="_blank" rel="noopener">VMware Education</a>. Following are the main reasons for which I use this tool:</p><ul><li>Overall Health Monitoring</li><li>performance analysis</li><li>Troubleshooting and forensic analysis of issues</li><li>Capacity Analysis</li><li>Reporting</li></ul><p>Do let me know which features of this product you use. How it helps in making your life easy.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Integrating NSX with vRealize Automation-Part I</title>
      <link href="/integrating-nsx-with-vrealize-automation-part-i.html"/>
      <url>/integrating-nsx-with-vrealize-automation-part-i.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>NSX and vRealize Automation are two major products from VMware. You use vRealize Automation to build a Cloud environment and use NSX for building a Software-Defined-Network environment. Individually they are awesome products and when you mix them up, you get an overdose of awesomeness. Fun apart, the actual power of Software Defined Datacenter comes into play when you use them together.<br><a id="more"></a><br>With NSX you can build Dynamic routing, load balancing, firewall rules etc. Now think of this scenario, how cool will it be if you can spin a multi layer application all by a single click along with it’s network, firewall rules and load balancer auto-configured at the runtime. So every time anyone deploys one such instance their respective configurations are also build by runtime. At the time of deletion all these network, firewall and load balancers are also deleted automatically. I am not even talking about other features that NSX brings into the game. So in this blog series I am going to talk about how to integrate NSX with vRealize Automation and then use the network functionalities provided by NSX to build a multi-machine blueprint and use it to deploy three tier workload. In the first part I will cover the integration of NSX and vRealize Automation. In the second part I will cover the building of the blueprint and in the third part will consist of the results. So without further ado let’s start the series. The process which integrates NSX with vRealize Automation (vRA) is detailed below:</p><ol><li>First you need to install NSX plugin in vRealize Orchestrator (vRO). Both internal and external vRO is supported. For this blog I chose to use external vRO appliance.</li><li>Second, you need to add the NSX manager as an endpoint in vRO appliance.</li><li>You need to add vRealize Orchestrator as an End Point in vRealize Automation and run a discovery of resources.</li><li>Now all the NSX information will be available in vRealize Automation to be consumed by the blueprints.</li></ol><p>Let’s start with the plugin installation in vRO.</p><h4 id="Installation-of-the-NSX-Plugin-in-vRO"><a href="#Installation-of-the-NSX-Plugin-in-vRO" class="headerlink" title="Installation of the NSX Plugin in vRO"></a>Installation of the NSX Plugin in vRO</h4><p>To upload and install NSX plugin you need to download the NSX plugin for vRO from the VMware <a href="https://my.vmware.com/web/vmware/details?downloadGroup=NSXV_624_TOOLS&amp;productId=417" target="_blank" rel="noopener">download link</a>. </p><p>Note the following from the site: This plug-in (1.0.4) can be utilized by vRA 7.1.0, vRO 7.1.0, NSX-vSphere 6.2.2, NSX-vSphere 6.2.4. </p><p>So, this works with only the above versions of the products. But the general process applies to other versions as well. Once you have downloaded the plugin, you need to go to controlcenter of vRealize Orchestrator. You can use both the internal vRO or an external appliance. </p><p>Also, to go to ControlCenter you can either directly go to the controlcenter by going to <strong>https://<ip or="" fqdn="" of="" vro="" server="">:8283/vco-controlcenter/</ip></strong> or by going to the default page and from there select the Orchestrator Control Center link: <strong>https://&lt;IP or FQDN of vRO Server:8281/vco/</strong> </p><p><img src="/images/2016/09/vro-plugin1.png" alt="vro-plugin1.png" class="responsive"></p><p>vRO Control Center</p><p>Clicking on the link takes you to the control center page and will ask for your password. Use the “root” user id and the password that you have set at the time of deployment. </p><p><img src="/images/2016/09/vro-plugin2.png" alt="vro-plugin2.png" class="responsive"></p><p>Providing ID and Password</p><p> Once in the Control Center scroll down to select <strong>“Manage Plug-Ins”</strong>.</p><p><img src="/images/2016/09/vro-plugin3.png" alt="vro-plugin3" class="responsive"></p><p>Click on Manage Plug-Ins</p><p>In the Manage Plug-Ins window select on Browse to browse to the folder where the plugin is and select the same. </p><p><img src="/images/2016/09/vro-plugin4.png" alt="vro-plugin4" class="responsive"></p><p>Click on Browse</p><p>Select the Plugin and Click on Open. </p><p><img src="/images/2016/09/vro-plugin6.png" alt="vro-plugin6" class="responsive"></p><p>Select plugin</p><p>Once the plugin is selected, click on Install. </p><p><img src="/images/2016/09/vro-plugin7.png" alt="vro-plugin7" class="responsive"></p><p>Start of Installation</p><p>Accept the EULA and Click on Install to start the installation. </p><p><img src="/images/2016/09/vro-plugin9.png" alt="vro-plugin9" class="responsive"></p><p>Accepting EULA</p><p>Once the installation is completed, you get a prompt to restart the server. The same page also gives you a link to the “Startup Options” page from where you can do the same. </p><p><img src="/images/2016/09/vro-plugin10.png" alt="vro-plugin10" class="responsive"></p><p>After installation, go to restart serve page</p><p>From the “Startup Options” page click on Restart button to restart the server. </p><p><img src="/images/2016/09/vro-plugin11.png" alt="vro-plugin11" class="responsive"></p><p>Restart the server</p><p>Once the restart is completed. You are done. The plugin has been installed. </p><p><img src="/images/2016/09/vro-plugin12.png" alt="vro-plugin12" class="responsive"></p><p>Server restarted</p><p>Double check the installation of the plugin. NSX plugin should be listed and should be selected as well. </p><p><img src="/images/2016/09/vro-plugin13.png" alt="vro-plugin13" class="responsive"></p><p>Since the plugin is installed, next you need to configure and integrate with vRA.</p><h4 id="Configuration-of-NSX-in-vRO-vRealize-Automation"><a href="#Configuration-of-NSX-in-vRO-vRealize-Automation" class="headerlink" title="Configuration of NSX in vRO / vRealize Automation"></a>Configuration of NSX in vRO / vRealize Automation</h4><p>In this part you need to do the following two steps:</p><ul><li>Add the NSX endpoint in vRealize Orchestrator</li><li>Add the vRealize Orchestrator as an endpoint in vRealize Automation Server</li></ul><p>You need to start with the Orchestrator. So login to the Orchestrator Client with the credentials. Please note the following:</p><ul><li>If you are using the internal vRO server of vRealize Automation, then the “Host Name” field should have the format as <strong><ip or="" fqdn="" of="" vra="" server:443=""></ip></strong>.</li><li>If you are using the external vRO server, then the “Host Name” field should have the format as <strong><ip or="" fqdn="" of="" external="" vro="" server:8281=""></ip></strong></li></ul><p>Note, the port difference. For internal vRO server of a vRA server you need to use port 443 and for external vRO server you need to use port 8281. </p><p><img src="/images/2016/09/integration1.png" alt="integration1" class="responsive"></p><p>Connecting to vRealize Orchestrator</p><p>Once logged in, by default you would be in “Run” mode of vRO. To add the NSX endpoint go to Workflows tab. </p><p><img src="/images/2016/09/integration2.png" alt="integration2" class="responsive"></p><p>Opening Workflows tab</p><p>Next, go to Library –&gt; NSX –&gt; Configuration –&gt; Create NSX Endpoint. We will run this particular workflow to add the NSX manager as an endpoint. Click on the Green button at the top to run the workflow. </p><p><img src="/images/2016/09/integration3.png" alt="integration3" class="responsive"></p><p>Running Workflow</p><p>When the workflow is run it provides a form where you can provide the information. You need to provide the following information:</p><ul><li>Endpoint Name</li><li>NSX user name</li><li>NSX Password</li><li>NSX URL</li></ul><p>The next two options are pre-populated and you can keep them at their default. </p><p><img src="/images/2016/09/integration4.png" alt="integration4" class="responsive"></p><p>Providing details of NSX Manager</p><p>Wait for the successful run of the workflow. When it completes successfully, NSX Manager is added as a managed endpoint in vRO. </p><p><img src="/images/2016/09/integration5.png" alt="integration5" class="responsive"></p><p>Successful Completion of NSX endpoint addition</p><p>Once the endpoint is added successfully, you can go ahead and check the details from the endpoint. It should show each and every component you have configured in your NSX Manager. </p><p><img src="/images/2016/09/integration6.png" alt="integration6" class="responsive"></p><p>Details checking</p><p>Your configuration at vRO is finished. Next you need to go to vRA and add this vRO as an Endpoint. Login to vRA server tenant as “IaaS Administrator” so that you can add an Endpoint. Go to <strong>Infrastructure –&gt; Endpoint –&gt; Endpoint</strong>. Click on <strong>New –&gt; Orchestration –&gt; vRealize Orchestrator</strong>. </p><p><img src="/images/2016/09/integration7.png" alt="integrations7" class="responsive"></p><p>Adding vRO Endpoint</p><p>Provide the Endpoint a name. Provide the name of the vRO server in the appropriate box. Please note the following:</p><ul><li>If you are using the internal vRO server then the Address is <strong>“https://&lt;IP or FQDN of vRO/vco”</strong></li><li>If you are using external vRO server then the address is <strong>“https://&lt;IP or FQDN of vRO:8281/vco”</strong></li></ul><p>So, for external vRO server you need to provide the port number as 8281. For internal vRO no need to specify any port. </p><p><img src="/images/2016/09/integration8.png" alt="integration8" class="responsive"></p><p>Details of vRO</p><p>Click on the button next to “Credentials” to add a credential to use. It will provide a new window. Click on New button to add a new credential (you can use an existing one as well). </p><p><img src="/images/2016/09/integration9.png" alt="integration9" class="responsive"></p><p>Add new credential</p><p>Provide details of the credential and click on Green button to save the details. </p><p><img src="/images/2016/09/integration10.png" alt="integration10" class="responsive"></p><p>Details</p><p>Click on OK button to save the credential and use it. </p><p><img src="/images/2016/09/integration11.png" alt="integration11" class="responsive"></p><p>Important point. Here you need to add a Custom Property for vRO specifying the priority. Since I did not provide this property, it will give me an error. </p><p><img src="/images/2016/09/integration12.png" alt="integration12" class="responsive"></p><p>Priority setting error</p><p>Set a customer property with <strong>“VMware.VCenterOrchestrator.Priority”</strong> and set a value in it. I set 1 as property value. Click on OK to save the endpoint. </p><p><img src="/images/2016/09/integration15.png" alt="integration15" class="responsive"></p><p>Custom property value set</p><p>Once saved, it will start the data collection. Wait for the data collection to be complete. </p><p><img src="/images/2016/09/integration17.png" alt="integration17" class="responsive"></p><p><img src="/images/2016/09/integration18.png" alt="integration18" class="responsive"></p><p>Once the data collection is completed successfully our configuration is complete. To check whether everything is running fine, go ahead and configure NSX as a resource point in vCenter Endpoint. So go to the configured vCenter Endpoint and select <strong>“Specify manager for network and security platform”</strong>. You need to provide nsx manager IP or FQDN and credential for that. </p><p><img src="/images/2016/09/integration19.png" alt="integration19" class="responsive"></p><p>Details of NSX and part of vCenter Endpoint</p><p>Next, we need to force a Data Collection at vCenter Endpoint so that it will get all the entities available from NSX Manager. For this go to Compute Resources and select the Compute Resource which came from that vCenter Endpoint. Right Click and Select “Data Collection” </p><p><img src="/images/2016/09/integration20.png" alt="integration20" class="responsive"></p><p>Under Network and Security Inventory click on <strong>“Request Now”</strong> button to start the data collection. Note, here I got a failed data collection as earlier I added the NSX manager before adding the NSX manager in vRO and adding vRO as an endpoint. So vRealize Automation could reach NSX manager from vCenter endpoint (it was a valid URL) but it did not know how to get the data from NSX Manager. </p><p><img src="/images/2016/09/integration21.png" alt="integration21" class="responsive"></p><p>Now after all these configurations the data collection is successful. Click on OK to go back to earlier page. </p><p><img src="/images/2016/09/integration23.png" alt="integration23" class="responsive"></p><p>You can check and reserve resources from NSX now. To do that, go to Reservation and add/modify a reservation to include network elements. </p><p><img src="/images/2016/09/integration24.png" alt="integration24" class="responsive"></p><p>Note, I can see all the portgroups created by NSX Manager and the Transport Zone, Security Group and Routed Gateways. </p><p><img src="/images/2016/09/integration25.png" alt="integration25" class="responsive"></p><p>Select what you require and click ok to save the reservation. </p><p><img src="/images/2016/09/integration26.png" alt="integration26" class="responsive"></p><p>Reservation</p><p>Configuration and Integration of NSX to vRealize Automation environment is complete. Now you should be able to use the entities presented by NSX environment from inside vRealize Automation.</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p>In the Part I on this blog series I have covered how to install NSX plugin in vRealize Orchestrator and then integrate vRealize Orchestrator as an Endpoint in vRealize Automation server. Also after this post you should be able to utilize entities from NSX in vRealize Automation reservations. In the next part I am going to cover how to utilize these entities in a Blueprint and create those functionalities at the runtime.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> NSX </category>
          
          <category> vRealize Automation </category>
          
          <category> vRealize Orchestrator </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> NSX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to monitor NSX environment with vRealize Operations Part II Result</title>
      <link href="/how-to-monitor-nsx-environment-with-vrealize-operations-part-ii-result.html"/>
      <url>/how-to-monitor-nsx-environment-with-vrealize-operations-part-ii-result.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Dear Reader, this is the second part of the vROPS for NSX post. In the earlier Part I post I have discussed about the installation and configuration of the PAK file in vROPs environment. In this part I am going to discuss the results of the configuration, i.e, what information we get from the solution. As could be seen in the earlier post, when we install this solution we get two adapters,<br><a id="more"></a><br>first one for NSX-vSphere adapter and the second one for Network Devices. For this post I did not configure any Network Devices and hence have only NSX for vSphere environment for monitoring. Once the solution is installed and configured you would get the following extra Dashboards by default.</p><ul><li>Physical Network Overview</li><li>Network Device Connectivity</li><li>NSX-vSphere Main</li><li>NSX-vSphere Topology</li><li>NSX-vSphere Object Path</li><li>NSX-vSphere Troubleshooting</li></ul><p>In all these I am not going to cover the first two i.e., Physical Network Overview and Network Device Connectivity. I will focus on NSX-vSphere dashboards. The first one is the NSX-vSphere Main and it shows overview of your entire NSX environment. This dashboard shows the information according to the NSX manager, Key components health, open alerts, Transport layer health, Objects under the manager, Top Logical Switches by Traffic and Top VMs by Traffic. Using this dashboard you can get the health of your entire environment at-a-glance. </p><p><img src="/images/2016/09/Picture1-2.png" alt="picture1" class="responsive"></p><p>Note, as like any other vSphere object if you keep cursor on any Key Component it shows the details about that component in a popup window. </p><p><img src="/images/2016/09/Picture2-1.png" alt="picture2" class="responsive"></p><p>The next Dashboard is the NSX-vSphere Topology. As the name suggests, you select the NSX Manager and the Object of the manager and you get to visualize the Logical Topology, Physical topology along with Top Issues for that object and the Key matrices for that object. </p><p><img src="/images/2016/09/Picture3-1.png" alt="picture3" class="responsive"></p><p>Provided below is another screenshot of the same Dashboard where I have selected by distributed router and it has some issues to show. </p><p><img src="/images/2016/09/Picture4-1.png" alt="picture4" class="responsive"></p><p>The next dashboard is the NSX-vSphere Object path. It is again pretty similar to the earlier one, difference being here you select two different objects of the NSX environment and get to see the Logical and Physical path between these two objects. The next Dashboard is for troubleshooting. Since there were no issues in my environment so not much was there to show in that dashboard and hence I am skipping that one here. </p><p><img src="/images/2016/09/Picture5-1.png" alt="picture5" class="responsive"></p><p>The next area where you will find a lot of information is the Inventory Tree. Here you can individually select and see the information for the following areas.</p><ul><li>NSX-vSphere Control Plane</li><li>NSX-vSphere Edge Services</li><li>NSX-vSphere Logical Routers</li><li>NSX-vSphere Transport Zones</li></ul><p><img src="/images/2016/09/Picture6-1.png" alt="picture6" class="responsive"></p><p> If I select the Control Plane, I can see the details health of the NSX manager. </p><p> <img src="/images/2016/09/Picture7-1.png" alt="picture7" class="responsive"></p><p> And then the details health and other details for each and every Control Cluster node member. Just select any one of them to see the details. </p><p> <img src="/images/2016/09/Picture8-1.png" alt="picture8" class="responsive"></p><p> Workload information about the Controller Node. </p><p> <img src="/images/2016/09/Picture9-3.png" alt="picture9" class="responsive"></p><p> Similarly, I have selected the Edge that I have configured. Notice the two major information from the Edge, Firewall and Routing. It will show the information about these two distinct capabilities of the Edge. Also note, in the All Metrics section it shows me the OSPF details that I have configured for this Edge. Had I configured Static Routes, it would have shown me details of that as well. </p><p> <img src="/images/2016/09/Picture10-1.png" alt="picture10" class="responsive"></p><p> More information from the Edge. </p><p> <img src="/images/2016/09/Picture11-1.png" alt="picture11" class="responsive"></p><p> Next, I wanted to see the details of the logical router that I have configured in my environment. I have three logical switches configured and attached to this router. I can see the details of the Tree at the left side of the screen and can get details about any of them by selecting it from there. </p><p> <img src="/images/2016/09/Picture12-1.png" alt="picture12" class="responsive"></p><p> More details about logical switches. </p><p> <img src="/images/2016/09/Picture13-1.png" alt="picture13" class="responsive"></p><p> Next, in transport zone it shows the hosts and the switches details. You select the switch and get the details of the switches. </p><p> <img src="/images/2016/09/Picture14-1.png" alt="picture14" class="responsive"></p><p> So the question comes what to do with all these information. From my experience I can tell you if there is any issue and you can actually visualize the environment, resolution becomes easier. With this, you can actually co-relate between each components and then drill down further to pin point where the problem is. Also for any issues you can simply open in context of Log Insight (remember we enabled it?), like for any vSphere issue we can open it in context in Log Insight, we can do same for NSX as well. On top of that, if you have configured Physical Network Devices monitoring then you have an end-to-end visibility in your environment. I would say with this I would be able to solve any NSX related network issues in my environment in no time. Of course if you need more in-depth true network analysis then you have vRealize Network Insight, but given the option and capabilities this is pretty cool. Keep exploring.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> NSX </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
            <tag> NSX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to monitor NSX environment with vRealize Operations Part I  Installation &amp; Config</title>
      <link href="/how-to-monitor-nsx-environment-with-vrealize-operations-part-i-installation-config.html"/>
      <url>/how-to-monitor-nsx-environment-with-vrealize-operations-part-i-installation-config.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Hello, my last post was about monitoring NSX environment using vRealize Network Insight. That is an amazing tool and a must have if you have NSX in your environment. In the meantime I thought of writing a post on using vRealize Operations (vRops) to monitor NSX environment. This is going to be a two part blog, where, in the first part I will cover the installation and configure portion and in the second part will explore the solution.<br><a id="more"></a></p><p>To start with, you need to install NSX plugin for vROps. Go to Solution Exchange and download from the link <a href="https://solutionexchange.vmware.com/store/products/management-pack-for-nsx-for-vsphere-3-1-x" target="_blank" rel="noopener">https://solutionexchange.vmware.com/store/products/management-pack-for-nsx-for-vsphere-3-1-x</a> . In the link you can check the pre-requisites for the package as well. Note, it is supported for vROps version 6.1.x, 6.2.x and the latest 6.3. It is not supported on version 6.0. Also check for other compatibilities as well. Currently the PAK version is 3.1.x. So let’s assume we have downloaded the PAK file (vmware-MPforNSX-vSphere-3.1.1-4247401.pak) and ready to upload the file. </p><p>I have already logged into vROps environment using Admin account. In your environment, you can use any RBAC with admin rights. To start the installation Go to <strong>Administration–&gt;Solutions</strong>, and on the right side of the page click on the green Plus sign to add the downloaded PAK file.   </p><p><img src="/images/2016/09/Picture1.png" alt="picture1" class="responsive"></p><p>It will open up a new window to provide the details. Click on Browse button to browse for the file and select it. </p><p><img src="/images/2016/09/Picture2.png" alt="picture2" class="responsive"></p><p>Once selected, click on Open to use the file. </p><p><img src="/images/2016/09/Picture3.png" alt="picture3" class="responsive"></p><p>For my installation, though it was not installed earlier, still I have selected “Install the PAK file even if it is already installed”. This will overwrite the earlier installation (if you have it). </p><p><img src="/images/2016/09/Picture4.png" alt="picture4" class="responsive"></p><p>The second option will let you reset the Default content. If you select this option, a POP UP windows will show you exact things it is going to do and you will need to select that you understand those option. Select the option and go ahead. Since this is my LAB environment and first time I am using this PAK so I had selected those option to check. Use as per your requirement in your environment. </p><p><img src="/images/2016/09/Picture5.png" alt="picture5" class="responsive"></p><p>Once done, click on Upload. It will upload the PAK file to the server. </p><p><img src="/images/2016/09/Picture6.png" alt="picture6" class="responsive"></p><p>Once the upload is complete, it will check the signature of the PAK file and let you select the next option. Click next to go to the next screen. </p><p><img src="/images/2016/09/Picture7.png" alt="picture7" class="responsive"></p><p>In the next screen you need to accept the license agreement. Select the agreement and click next. </p><p><img src="/images/2016/09/Picture8-2.png" alt="picture8" class="responsive"></p><p>Clicking Next will start the installation. Wait till the installation is complete. Once the installation is done click on Finish to close the window. </p><p><img src="/images/2016/09/Picture9-2.png" alt="picture9" class="responsive"></p><p>Now are pack in installed and ready for configuration. </p><p>Let’s configure the Solution now. Select the Solution and Click on the Gear button to configure it. Note, it lets you configure NSX-vSphere Adapter and other Network Devices Adapter. So using this Solution we have two adapters, one for NSX for vSphere and another for normal Network Devices. If you have any network device in your environment which you want to monitor you can do it from here. For now we will configure only the NSX-vSphere adapter. </p><p><img src="/images/2016/09/Picture10.png" alt="picture10" class="responsive"></p><p>Clicking on the Solution and selecting configure option will bring up a new window. Here you will be able to configure both the above mentioned adapters individually. Select NSX-vSphere Adapter to configure the same. </p><p><img src="/images/2016/09/Picture11.png" alt="picture11" class="responsive"></p><p>I provided the display name of the configuration, provided NSX Manager host name, vCenter host name (with which NSX Manager is attached). Also here I have the option to select whether I want Log Insight integration is needed or not. Since I have Log Insight configured in my environment and also have NSX plugin installed in Log Insight, so I am enabling Log Insight integration. The option to select that is available through a drop down option. </p><p><img src="/images/2016/09/Picture12.png" alt="picture12" class="responsive"></p><p>Once the above is done, then we need to provide Credential. Click on green Plus sign to create a new credential or use can use an existing one or modify one. For my environment, I am creating one. Here you need to provide credential for both NSX Manager and vCenter server. Once done click on OK to complete the step. </p><p><img src="/images/2016/09/Picture14.png" alt="picture14" class="responsive"></p><p>In the next step I want to test whether everything is working fine or not. So click on “Test Connection” to test whether vROps server can reach the endpoint. </p><p><img src="/images/2016/09/Picture15.png" alt="picture15" class="responsive"></p><p>It will show you the certificate for NSX Manger. Click on OK to review and accept the certificate. </p><p><img src="/images/2016/09/Picture16.png" alt="picture16" class="responsive"></p><p>If everything was configured correctly, a small popup window will show you that the test was successful. Click on Ok to close the window. </p><p><img src="/images/2016/09/Picture17.png" alt="picture17" class="responsive"></p><p>Click on “Save Settings” to save the settings. </p><p><img src="/images/2016/09/Picture18.png" alt="picture18" class="responsive"></p><p>A small POPUP window will let you know that the configuration for the Adapter Instance was successfully saved. </p><p><img src="/images/2016/09/Picture19.png" alt="picture19" class="responsive"></p><p>Now you should be able to see the adapter collection state as “Collecting” and Collection Status as “Data Receiving” </p><p><img src="/images/2016/09/Picture20-1.png" alt="picture20" class="responsive"></p><p>This concludes the Installation and Configuration part of NSX Management Pack for vRealize Operations. In the next part I will cover the informations and dashboards that this pack provides.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> NSX </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
            <tag> NSX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to install and configure vRealize Network Insight 3.0</title>
      <link href="/how-to-install-and-configure-vrealize-network-insight-3-0.html"/>
      <url>/how-to-install-and-configure-vrealize-network-insight-3-0.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Hi Reader, I am back with another blog. I thought of writing a series of blogs on vRealize Automation. It seems not enough is discussed about the internal architecture and the generic configuration steps are too complex and needs some explanations. But before I do that, I thought of sharing a tutorial on “Installation and configuration of vRealize Network Insight”.<br><a id="more"></a></p><p>This is the newest addition to VMware kitty and the most happening kid at the moment :). So thought of taking it for a spin in my lab. Provided below are the steps from the experience.Before we start, here is a small intro to the product. </p><p>vRealize Network Insight is a product for delivering intelligent operations for your software defined network environment (specially NSX). In short it does what vRealize Operations does for your virtualized environment, but only to the SDN environment. With the help of this product you can optimize network performance and availability with visibility and analytics across virtual and physical networks. Provide planning and recommendations for implementing micro-segmentation security, plus operational views to quickly and confidently manage and scale VMware NSX deployment. </p><p>To start the deployment you need to download the following two appliances from VMware website:</p><ul><li>VMware_vRealize_Network_Insight_3.0.0-1469457715_platform.ova</li><li>VMware_vRealize_Network_Insight_3.0.0-1469457715_proxy.ova</li></ul><p>The first one is the main appliance and the second one is the proxy appliance.</p><p>We will start with the deployment of the platform appliance. For keeping the length of the post to a reasonable length I have omitted the OVA deployment steps (you already know how its done :)) except the final network input screen.</p><p>Provided below is the screen where you need to provide the details like IP, DNS, NTP etc.</p><p><img src="/images/2016/09/Picture8-1.png" alt="Network details input" class="responsive"></p><p>Network details input</p><p>Also note, here you have the advance option to provide HTTP proxy information or the log server information. Also note the “Log Push to the Cloud Setting” option. If you select this option then the logs will be pushed to VMware server in Cloud.</p><p><img src="/images/2016/09/Picture9-1.png" alt="Advance setting for network" class="responsive"></p><p>Advance setting for network</p><p>Once the appliance is deployed and powered on you need to go to the configuration screen by going to https://. In my case it is <strong><a href="https://vrnetinsight.lab.local" target="_blank" rel="noopener">https://vrnetinsight.lab.local</a></strong>. Accept the certificate warnings.</p><p><img src="/images/2016/09/Config2.png" alt="Accepting certificate warning" class="responsive"></p><p>Accepting certificate warning</p><p>Next comes the license page. You need to provide the license key and validate the same.</p><p><img src="/images/2016/09/Config3.png" alt="License validation page" class="responsive"></p><p>License validation page</p><p>So let me put the license key there and Validate. Once validated, it shows the details of the license.</p><p><img src="/images/2016/09/Config5.png" alt="Validated details of license" class="responsive"></p><p>Validated details of license</p><p>Next click on Activate button to activate the license. The next page is for generating the secret for the proxy VM. Click on Generate button to generate the Secret.</p><p><img src="/images/2016/09/Config6.png" alt="Secret generation page" class="responsive"></p><p>Secret generation page</p><p>Once the secret is generated we have the Copy button to copy the secret.</p><p><img src="/images/2016/09/Config8.png" alt="Secret generation and copying stage" class="responsive"></p><p>Secret generation and copying stage</p><p>Next the setup will wait for the deployment of the Proxy VM. It will keep looking for it till the time the deployment is done. So let’s go ahead deploy the Proxy VM. The deployment is similar to any OVA deployment. One difference is in this case you need to provide the above generated secret at the deployment stage of the OVA.</p><p><img src="/images/2016/09/Config24.png" alt="Secret providing at the OVA deployment of Proxy VM" class="responsive"></p><p>Secret providing at the OVA deployment of Proxy VM</p><p>The next two screenshots are the details options providing at the time of OVA deployment. It is similar to the ones provided at the time of platform deployment (still providing them for your reference).</p><p><img src="/images/2016/09/Config25.png" alt="Details page 1" class="responsive"></p><p>Details page 1</p><p><img src="/images/2016/09/Config26.png" alt="Details Page 2" class="responsive"></p><p>Details Page 2</p><p>Once the deployment is done and the Proxy VM is up and running, it is sensed in the configuration page.</p><p><img src="/images/2016/09/Config27.png" alt="Auto Sense the presence of Proxy VM" class="responsive"></p><p>Auto Sense the presence of Proxy VM</p><p>Click on Finish to finish off the installation.Congratulations !!! your have done a successful installation. Now let’s configure the environment. To go to login page simply type https:// in your favourite browser. In my case it is <a href="https://vranetinsight.lab.local" target="_blank" rel="noopener">https://vranetinsight.lab.local</a>. It takes you to the login page. The default id is “admin@local” and password is “admin”.</p><p><img src="/images/2016/09/Config28.png" alt="Login Page" class="responsive"></p><p>Login Page</p><p>Once you are logged in, by default we are in “NSX Assessment Mode”, we can keep continuing on that mode or change to “Full Product Evaluation” mode.</p><p><img src="/images/2016/09/Config29.png" alt="Change or accept the current mode" class="responsive"></p><p>Change or accept the current mode</p><p>If you  click on the change mode button (small green button at the bottom right corner of the page) you will be shown the details of the environment. Ideally it should be filled with data but since I did not configure any data sources till now so it is all blank.</p><p><img src="/images/2016/09/Config31.png" alt="Full Evaluation Mode" class="responsive"></p><p>Full Evaluation Mode</p><p>So we will go back and add data source. The first data source is vCenter sever.</p><p><img src="/images/2016/09/Config30.png" alt="Add Data source" class="responsive"></p><p>Add Data source</p><p>Clicking on the link takes you to the addition of Data Sources Page. Go to the page and click on “Add new source”.</p><p><img src="/images/2016/09/Config33.png" alt="Add new source" class="responsive"></p><p>Add new source</p><p>First you need to select a source.</p><p><img src="/images/2016/09/Config34.png" alt="Select Source" class="responsive"></p><p>Select Source</p><p>The first source available is VMware vCenter</p><p><img src="/images/2016/09/Config35.png" alt="VMware vCenter as source type" class="responsive"></p><p>VMware vCenter as source type</p><p>Provide details of the vCenter:</p><p><img src="/images/2016/09/Config36.png" alt="Details of vCenter server" class="responsive"></p><p>I love the way the button changes colour with and without the details. After you provide the details you need to click on Validate to validate the details.</p><p><img src="/images/2016/09/Config37.png" alt="Validate the details" class="responsive"></p><p>Once the details are validated, all the available VDS are listed and you have the option to enable NetFlow on the vCenter. If you want to enable it, select the required options and click on Submit.</p><p><img src="/images/2016/09/Config38.png" alt="Configuring NetFlow" class="responsive"></p><p>Configuring NetFlow</p><p>So we are done with first data source configuration.</p><p><img src="/images/2016/09/Config39.png" alt="Configured Data Source" class="responsive"></p><p>Configured Data Source</p><p>Since we have configured the first source, let us see what other options are available. The first thing that I do is integrate the solution with Active Directory so that I can easily configure role based access control. So let’s start this configuration by Clicking on “Active Directory Integration” on the left hand side and select the option to enable it.</p><p><img src="/images/2016/09/Config40.png" alt="Enabling AD" class="responsive"></p><p>Enabling AD</p><p>In the details page provide the details of the AD and click on Save to save the information.</p><p><img src="/images/2016/09/Config41.png" alt="Details of AD" class="responsive"></p><p>Details of AD</p><p>AD is configured. I will configure the user later. For the time I need to change the default password. For that click on “My Profile” and change the password.</p><p><img src="/images/2016/09/Config44.png" alt="Change Password" class="responsive"></p><p>Change Password</p><p>We can check the Infrastructure state from the left side option.</p><p><img src="/images/2016/09/Config45.png" alt="Check status" class="responsive"></p><p>Check status</p><p>Since we have done basic house keeping so let’s add NSX as another data source. We will again visit the “Data Source” button.</p><p><img src="/images/2016/09/Config46.png" alt="Add Another Data Source" class="responsive"></p><p>Add Data Source</p><p>Now if you click on “Select Source Type” list you will see a lot more option. I will choose NSX Manager from the list.</p><p><img src="/images/2016/09/Config47.png" alt="NSX as Data Source" class="responsive"></p><p>NSX as Data Source</p><p>Next provide the details of the NSX Manager and Validate.</p><p><img src="/images/2016/09/Config48.png" alt="Provide details of NSX" class="responsive"></p><p>Provide details of NSX</p><p><img src="/images/2016/09/Config49.png" alt="Details of NSX" class="responsive"></p><p>For my environment I will enable “Enable NSX Controller”.</p><p><img src="/images/2016/09/Config50.png" alt="Enable NSX Controller" class="responsive"></p><p>Enable NSX Controller</p><p>Everything configured.</p><p><img src="/images/2016/09/Config51.png" alt="Sources configured" class="responsive"></p><p>Sources configured</p><p>You can configure the system notifications.</p><p><img src="/images/2016/09/Config52.png" alt="System Notification" class="responsive"></p><p>System Notification</p><p>Since everything is configured, let’s check the information. Next few screenshots shows how to see the details of a single ESXi host.</p><p><img src="/images/2016/09/Config53.png" alt="Select host from left side option" class="responsive"></p><p>Select host from left side option</p><p><img src="/images/2016/09/Config54.png" alt="Click on select host" class="responsive"></p><p>Click on select host</p><p><img src="/images/2016/09/Config55.png" alt="Select the host for which you want to see the details" class="responsive"></p><p>Select the host for which you want to see the details</p><p><img src="/images/2016/09/Config56.png" alt="Submit the request" class="responsive"></p><p>Submit the request. You can modify the time frame for which you want to see the details</p><p><img src="/images/2016/09/Config57.png" alt="All the statistics" class="responsive"></p><p>All the statistics</p><p>Similarly I chose to see the details of the NSX manager.</p><p><img src="/images/2016/09/NSXDetails1.png" alt="NSX Details 1" class="responsive"></p><p>NSX Details 1</p><p><img src="/images/2016/09/NSXDetails2.png" alt="more information" class="responsive"></p><p>Scrolled down view for more information</p><p>This is  an awesome tool to monitor your network environment. I am pretty impressed with the capabilities.Do let me know your feedback about this.</p>]]></content>
      
      <categories>
          
          <category> NSX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NSX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to configure NSX Load balancer for distributed deployment of vRA 7.1</title>
      <link href="/how-to-configure-nsx-load-balancer-for-distributed-deployment-of-vra-7-1.html"/>
      <url>/how-to-configure-nsx-load-balancer-for-distributed-deployment-of-vra-7-1.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Hey guys, hope you are doing good. Few days back I discussed about the choice between a distributed deployment and a simple one. Near the end I said, if you want to do a distributed deployment then it is better that we use a virtual load balancer like NSX. So this blog is all about configuring NSX load balancer for a distributed deployment for vRA 7.1.<br><a id="more"></a></p><p>For the purpose of this blog I will use NSX 6.2, vSphere 6.0 U2, vCenter 6.0 U2 and vRA 7.1 (well I wanted to test out 7.1 J).</p><p>I will not cover NSX environment deployment and Load Balancer configuration for NSX as there are enough blogs already available for this. I will simply start with the Load Balancer.</p><p>As you may know that Load balancer can be configured as “One Arm Mode” or “Inline Mode”. Since I already have another Distributed Router configured in my lab so I am using “One Arm Mode”. It is simpler and I wanted to load balance in the same network segment.</p><p>This is an important reason for choosing the One Arm Mode.</p><p>Provided below are the network details of the configuration:</p><table><thead><tr><th><strong>Hostname</strong></th><th><strong>IP Address</strong></th><th><strong>Purpose</strong></th></tr></thead><tbody><tr><td>iaas-web1.lab.local</td><td>10.134.91.178</td><td>IaaS Web Windows 1</td></tr><tr><td>iaas-web2.lab.local</td><td>10.134.91.179</td><td>IaaS Web Windows 2</td></tr><tr><td>iaas-mgr1.lab.local</td><td>10.134.91.180</td><td>IaaS Manager Service Windows 1</td></tr><tr><td>iaas-mgr2.lab.local</td><td>10.134.91.181</td><td>IaaS Manager Service Windows 2</td></tr><tr><td>vra1.lab.local</td><td>10.134.91.182</td><td>VRA Appliance 1</td></tr><tr><td>vra2.lab.local</td><td>10.134.91.183</td><td>VRA Appliance 2</td></tr></tbody></table><table><thead><tr><th><strong>Load Balancer IP</strong></th><th><strong>IP Address</strong></th><th><strong>Purpose</strong></th></tr></thead><tbody><tr><td>vra.lab.local</td><td>10.134.91.201</td><td>vRA VIP</td></tr><tr><td>iaas-web.lab.local</td><td>10.134.91.202</td><td>IaaS Web VIP</td></tr><tr><td>iaas-mgr.lab.local</td><td>10.134.91.203</td><td>IaaS Mgr VIP</td></tr></tbody></table><p>Here I am not following a full distributed deployment model. Since this is a lab environment so I am not creating separate servers for DEM and Agent. I will install these two roles in the available servers. But will do these in distributed way i.e, there will be two DEM’s (DEM1 and DEM2) and two Agents of the same configuration. Anyways that is part of vRA implementation. I want to cover only the Load Balancer configuration here.</p><p>So here it goes….</p><p>Open the NSX Configuration page and create a NSX Edge appliance with the following configuration for the UPLINK.</p><p><img src="/images/2016/08/Picture1-2.png" alt="Open the NSX Edge configuration page" class="responsive"></p><p>Open the NSX Edge configuration page</p><p>I have already created an Edge Appliance by the name <strong>Sajal-LAB-LB</strong>.</p><p><img src="/images/2016/08/Picture2-2.png" alt="Create one NSX Edge Appliance" class="responsive"></p><p>Create one NSX Edge Appliance</p><p>Note the uplink configuration. I have connected the uplink to the portgroup where my servers will be. </p><p>Also note, the primary IP is the VIP of vRA, since I will use the same appliance for load balancing all the components so I have added all the rest of the VIP’s as secondary IP address of the UPLINK. This is ok with my lab environment. If you want you can create separate Edge Appliances in LB mode for each of them separately as well. You can configure this while creating the LB or at a later time by double clicking on the Edge Appliance and going to <strong>Mange –&gt; Interfaces </strong> page and clicking on Edit button after selecting the interface.</p><p><img src="/images/2016/08/Picture3-2.png" alt="Uplink configuration" class="responsive"></p><p>Uplink configuration</p><p>After the configuration, the Interface should look like the following picture. Since this is a One-Arm LB configuration, so no other interfaces are configured.</p><p><img src="/images/2016/08/Picture4.png" alt="Load Balancer Config" class="responsive"></p><p>Next, go to <strong>Load Balancer</strong> tab and enable Load Balancing by selecting EDIT button in the <strong>Global Configuration</strong> tab (left side) and making necessary changes.</p><p><img src="/images/2016/08/Picture5.png" alt="Enabling Load Balancer service" class="responsive"></p><p>Enabling Load Balancer service</p><p>Next, we need to create Application Profiles. For this we need to select “Application Profiles” from the left side button of the Load Balancer tab.</p><p><img src="/images/2016/08/Picture6.png" alt="Application Services" class="responsive"></p><p>Application Services</p><p>Since I am configuring LB for 3 components namely vRA Appliance, IaaS Web and IaaS Manager servers, so I will create 3 application profiles. The names of the profiles are:</p><ul><li>IaaS-Web</li><li>IaaS-Manager</li><li>vRealize Automation VA Web</li></ul><p>The points to note here, I have selected <strong>SSL Passthrough</strong>, this is easier to configure. What I am asking the LB to do is simply pass the SSL through the LB so that it will be handled by Server. If I did not select it here, then LB will handle it by itself. In that case I am doing SSL offloading to LB. But that is more complex to configure and in future if any changes in certificate is required, then LB configuration is also needs to change. So, for simplicity I configured SSL Passthrough.</p><p>Another point to note, since vRA appliance web page has a default timeout of 1800 seconds, so I selected an Expiration timeout of 1800 Seconds. For two of the components (vRA and IaaS Web), I have selected a session persistence based on the <strong>Source IP</strong> of the client.</p><p>There is no session persistence for IaaS-Manager component as at any point of time only one active Manager server can be there. Manager servers are always configured as Active-Passive configuration. So no session persistence for this component.</p><p><img src="/images/2016/08/Picture10.png" alt="IaaS Manager with no persistence" class="responsive"></p><p>IaaS Manager with no persistence</p><p><img src="/images/2016/08/Picture11.png" alt="IaaS-Web Profile" class="responsive"></p><p>IaaS-Web Profile</p><p><img src="/images/2016/08/Picture12.png" alt="vRA VA Application Profile" class="responsive"></p><p>vRA VA Application Profile</p><p>After all three of profiles are configured, the page should look like the following:</p><p><img src="/images/2016/08/Picture9.png" alt="All the three Application Profiles configured" class="responsive"></p><p>All the three Application Profiles configured</p><p>Next we need to configure Service Monitoring. This will enable LB to learn the status of the members (whether they are UP or DOWN), based on the status the traffic will be routed to the required node. So be very careful while configuring these. I did not notice an extra in a single line and result was my vRA Pool members were down. So no traffic was being routed to the main vRA portal. Once I cross checked the Service Monitoring configuration then I got it corrected. So be careful while configuring these (I know I am repeating this :) ) . Start this configuration by selecting “Service Monitoring” from left tab and clicking the green + sign from the new pane. I will create a total of 3 Service Monitors:</p><ul><li>IaaS Manager</li><li>IaaS Web</li><li>vRealize Automation VA Web</li></ul><p><img src="/images/2016/08/Service1.png" alt="IaaS Web Configuration" class="responsive"></p><p>IaaS Web Configuration</p><p>Next one is “vRealize Automation VA Web”</p><p><img src="/images/2016/08/Service2.png" alt="vRealize Automation VA Web" class="responsive"></p><p>The last one is “IaaS Manager”</p><p><img src="/images/2016/08/Service3.png" alt="IaaS Manager" class="responsive"></p><p>IaaS Manager</p><p>Once all three are configured, the screen should look like the following:</p><p><img src="/images/2016/08/Service4.png" alt="Service Monitor Screen" class="responsive"></p><p>Service Monitor Screen</p><p>All these service monitors will be tied with the pools that we are going to create in the next step. We need to configure Pools now. We will configure the following 4 pools:</p><ul><li>pool_vra-va-web_443</li><li>pool_vra-rconsole_8444</li><li>pool_iaas-web_443</li><li>pool_iaas-manager_443</li></ul><p>Note the pool rconsole, it is for Remote Console. You can omit it if you do not want to provide remote console.</p><p>We will start the configuration with the <strong>pool_iaas-manager_443</strong>. To configure, first click on the green + button to add new Pool. Give it the name, choose the algorithm as Round Robin. For monitor choose the monitor “IaaS Manager”.</p><p>Next we will add the Members. Click on the green + button under Members. Provide the node a name, next either provide the IP Address of the node or you can simply select the node as an object. Next we need to provide which port we want to configure for. For this purpose we will select 443 as the port.</p><p><img src="/images/2016/08/Picture15.png" alt="Add first iaas manager node" class="responsive"></p><p>Add first iaas manager node</p><p>Similarly will add IaaS-Mgr2 node as member.</p><p><img src="/images/2016/08/Picture16.png" alt="Add second iaas manager node" class="responsive"></p><p>Add second iaas manager node</p><p>Once both the members are configured then the pool should look like the following:</p><p><img src="/images/2016/08/Picture17.png" alt="pool_iaas-manager_443" class="responsive"></p><p>pool_iaas-manager_443</p><p>Like wise we will configure all the rest of the pools. But note that for remote console i.e, for <strong>pool_vra-rconsole_8444</strong>, the nodes will have 8444 as the port. So after all the pools are configured, the screen should look like the following:</p><p><img src="/images/2016/08/Picture22.png" alt="All the pools configured" class="responsive"></p><p>All the pools configured</p><p>For vra remote console pool (pool_vra-rconsole_8444) configuration will be same as pool_vra-va_443, only difference being the port number, in place of 443 it should be 8444.</p><p>Next we need to configure the virtual servers. We will configure the following 4 virtual servers:</p><ul><li>vs_iaas-manager_443</li><li>vs_vra-va-web_443</li><li>vs_vra-vr-rconsole_443</li><li>vs_iaas-web_443</li></ul><p>To configure the above, go to Virtual Servers section and click on the green + button to add new virtual server.  For each one of them select <strong>Enable Virtual Server</strong> and <strong>Enable Acceleration</strong>.</p><p>For vs_vra-va-web_443 select application profile as <strong>vRealize Automation VA Web</strong>, provide the name, provide the IP address (VIP), select protocol as HTTPS, port number as 443 and the default pool as pool_vra-va-web_443. Once done click on OK to save the configuration.</p><p><img src="/images/2016/08/Picture23.png" alt="vs\_vra-va-web\_443" class="responsive"></p><p>vs_vra-va-web_443</p><p>Similarly configure vs_iaas-manager_443 and vs_iaas-web_443 virtual servers. The difference between these pools and vs_vra-vr-rconsole_443 is given in the below screenshot. The port being the only difference.</p><p><img src="/images/2016/08/Picture25.png" alt="vs\_vra-va-rconsole\_8444" class="responsive"></p><p>vs_vra-va-rconsole_8444</p><p>Once all the required pools are configured the screen should look like the below screenshot.</p><p><img src="/images/2016/08/Picture27.png" alt="Final screenshot for Virtual Servers" class="responsive"></p><p>Final screenshot for Virtual Servers</p><p>Now your Load balancer is configured and you are ready to go.</p><p>But before proceeding for the vRA installation note the following. If you continue with this configuration, load balancer forwards half of the packets to the second node which is not there before the configuration of the cluster (at the time of deployment you have one active member). So essentially the installation fails.</p><p>To have a proper installation, go to pools configuration and select <strong>“NONE” as monitors</strong> (otherwise pool will show all the members as down, since the services are not up yet and the installation fails). Also disable second member node in all the pools (so half of the packets are not forwarded to the second node).</p><p>Once the vRA installation is completed, come back to load balancer and enable all the member nodes of the pool and also set the proper monitors.</p><p>Below is a screenshot for a properly installed environment. You can check the pool status from the below screenshot.</p><p><img src="/images/2016/08/Picture31.png" alt="Pool Statistics" class="responsive"></p><p>Pool Statistics</p><p>Once the vRA installation completes, you will be able to access it using the vRA url. In my case it is <strong><a href="https://vra.lab.local" target="_blank" rel="noopener">https://vra.lab.local</a></strong></p><p><img src="/images/2016/08/Picture28.png" alt="main page" class="responsive"></p><p>main page</p><p><img src="/images/2016/08/Picture29.png" alt="login screen" class="responsive"></p><p>login screen</p><p>Note the login page above. A nice <strong>Forgot Password</strong> link. You can now click on the link to reset your password. This used to show a message “Contact your administrator to reset your password”. Now it asks for user name and email id.</p><p><img src="/images/2016/08/passwordresetlink.png" alt="Password reset option" class="responsive"></p><p>Password reset option</p><p>Also remember I configured vro pool so that I can access and configure the internal vRO server? Below is a screenshot of the same page.</p><p><img src="/images/2016/08/Picture34.png" alt="vRO configuration page" class="responsive"></p><p>vRO configuration page</p><p>But to do that you need to enable configurator service in vRA appliance.</p><p>Just login to the appliance and run the following command:</p><pre class=" language-shell"><code class="language-shell"># service vco-configurator start</code></pre><p>One final point to note, once you configure vRA and configure a Directory for authentication (for example Active Directory) for at least one tenant, you need to configure the identity providers as well.</p><p>By default the authentication will happen with one identity provider. We need to change that to load balancer VIP.</p><p>First we will add another identity provider (the second node). We can do that by logging to the tenant as Tenant Admin and then Administration–&gt; Identity Provider–&gt; Add provider. Select the second node and then provide the Bind Password and Domain admin password.:</p><p><img src="/images/2016/08/identityprovider1.png" alt="Add the second identity provider" class="responsive"></p><p>Add the second identity provider</p><p>Once the above is done then change the IDP hostname to the VIP of the load balancer.</p><p><img src="/images/2016/08/identityprovider2.png" alt="Change the IDP Hostname" class="responsive"></p><p>Change the IDP Hostname</p><p>Now you are finally ready to go.</p><p>Hope you found this article useful.</p><p>Next article is going to be NSX LB configuration for external vRO.</p><p>Till then stay tuned.</p><p>Do let me know your feedback about the post. What you would like to see me covering etc.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> NSX </category>
          
          <category> vRealize Automation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
            <tag> NSX </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Finally it is here-PowerShell for Linux and Mac</title>
      <link href="/finally-it-is-here-powershell-for-linux-and-mac.html"/>
      <url>/finally-it-is-here-powershell-for-linux-and-mac.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>The most awaited feature is finally here. Never thought I would see Microsoft saying they love Linux and open source. But I suppose this was on the cards cause you can not ignore a vast population of IT landscape. So finally PowerShell is here for Linux and Mac environment.Here is a step by step guide on how you would install the Alpha release on your Mac. To download the package visit the<br><a id="more"></a><br><a href="https://github.com/PowerShell/PowerShell" target="_blank" rel="noopener">GitHub Repository</a>. In current version it is available for the following platforms:  </p><ul><li>Windows 10 / Server 2016</li><li>Windows 8.1 / Server 2012 R2</li><li>Ubuntu 16.04</li><li>Ubuntu 14.04</li><li>CentOS 7</li><li>OSX 10.11</li></ul><p>Please grab the version that is applicable to you. For me and this blogpost I selected OSX 10.11. Once downloaded, simply double click on the powershell-6.0.0-alpha.9.pkg file to start the installation.</p><p><img src="/images/2016/08/ScreenShot1.png" alt="Start the installation" class="responsive"></p><p>Start the installation</p><p>Next Select a destination drive where you want to do the installation</p><p><img src="/images/2016/08/ScreenShot2.png" alt="Select Destination Drive" class="responsive"></p><p>Select Destination Drive</p><p>Next select the installation Location</p><p><img src="/images/2016/08/ScreenShot3.png" alt="Select installation location" class="responsive"></p><p>Select installation location</p><p>Next provide your credentials to allow the installation</p><p><img src="/images/2016/08/ScreenShot4.png" alt="Provide credential" class="responsive"></p><p>Provide credential</p><p>Installation starts. Once the installation completes, close the window and you are good to go.</p><p><img src="/images/2016/08/ScreenShot5.png" alt="Close the window" class="responsive"></p><p>Close the window</p><p>You are all set to explore the awesomeness of PowerShell in Mac. Open a Terminal Window and type “powershell” to start the magic.</p><p><img src="/images/2016/08/ScreenShot6.png" alt="Start the session from Terminal" class="responsive"></p><p>Start the session from Terminal</p><p>Notice the version, it is 6.0.0. As of now the total available commands are 345. Note the <a href="https://github.com/PowerShell/PowerShell/blob/master/docs/installation/linux.md#os-x-1011" target="_blank" rel="noopener">PATH</a> for your reference:</p><ul><li><figure class="highlight plain"><figcaption><span>is ```/opt/microsoft/powershell/6.0.0-alpha.9/```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*   User profiles will be read from ```~/.config/powershell/profile.ps1</span><br></pre></td></tr></table></figure></li><li><p>Default profiles will be read from <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*   User modules will be read from ```~/.local/share/powershell/Modules</span><br></pre></td></tr></table></figure></p></li><li><p>Shared modules will be read from <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*   Default modules will be read from ```$PSHOME/Modules</span><br></pre></td></tr></table></figure></p></li><li><p>PSReadLine history will be recorded to <code>~/.local/share/powershell/PSReadLine/ConsoleHost_history.txt</code></p></li></ul><p>The profiles respect PowerShell’s per-host configuration, so the default host-specific profiles exists atMicrosoft.PowerShell_profile.ps1 in the same locations.</p><p>On Linux and OS X, the <a href="https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html" target="_blank" rel="noopener">XDG Base Directory Specification</a> is respected.</p><p>Note that because OS X is a derivation of BSD, instead of <code>/opt</code>, the prefix used is <code>/usr/local</code>. Thus, <code>$PSHOME</code> is <code>/usr/local/microsoft/powershell/6.0.0-alpha.9/</code>, and the symlink is placed at <code>/usr/local/bin/powershell</code>.</p><p><strong> Source: <a href="https://github.com/PowerShell/PowerShell/blob/master/docs/installation/linux.md#os-x-1011" target="_blank" rel="noopener">https://github.com/PowerShell/PowerShell/blob/master/docs/installation/linux.md#os-x-1011</a></strong></p><p>I hope we get PowerCLI plugin for Mac and Linux environment very soon :) So till then go ahead start playing!!!!</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Dont do it simply because you can - Distributed vs Simple Architecture</title>
      <link href="/dont-do-it-simply-because-you-can-distributed-vs-simple-architecture.html"/>
      <url>/dont-do-it-simply-because-you-can-distributed-vs-simple-architecture.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Hello all, it’s been long since my last blog. In between, I became a father, changed profile, changed location etc., in all a lot happened at personal and professional front.</p><a id="more"></a><p>Coming back to blog, this particular topic was bugging me from last couple of months. In few of my last discussions with customers, it seemed we discussed only one point, that is to decide between fully distributed vs simple installation architecture.More often I have seen people choosing a deployment model not based on careful considerations but based on what the general belief is. This blog tries to shed light on the considerations that should be made before making that decision.</p><p>I have met enough customers to safely assume that more than 90% of times a customer will ask us for a distributed deployment irrespective of the size of the environment or total uptime required of the solution. I agree to the fact that it will remove single point of failure thus increasing availability of the overall solution. But the question is should we always choose distributed environment simply because of this point or simply because we can do it?</p><p>My point, it depends, and you will be surprised to know how many times I may recommend a simple install over a distributed environment.</p><p>Before you think I have gone crazy, let us check the reasons for me saying so.</p><h4 id="First-point-of-consideration"><a href="#First-point-of-consideration" class="headerlink" title="First point of consideration:"></a><strong>First point of consideration:</strong></h4><p>All the management components do not directly affect the running workload. So a downtime of the management components should not have a direct impact to your existing running environment. During that time, you will not be able to manage or do new things in your environment. But this no way is impacting your current SLA for the already running workload. This should be ok in most cases, but if someone has a public cloud and the main management portal goes down obviously it has bigger impact on business and should be avoided.For example, let’s consider the following situations.</p><p><strong>vCenter goes down</strong> – Existing VM’s keep running, no new deployment or management is possible. In case of vRA with vCenter, no new deployment at cloud level is possible as well, but the Cloud portal works.</p><p> <strong>vRA components go down</strong> – Cloud portal is not available, existing workloads keeps running. You can still SSH or RDP to the VM’s hosted in cloud. End users operations are not hampered.</p><h4 id="Second-Point-of-consideration"><a href="#Second-Point-of-consideration" class="headerlink" title="Second Point of consideration:"></a><strong>Second Point of consideration:</strong></h4><p><strong>Distributed Environment: </strong>Let’s check the implications of a distributed architecture more closely.</p><p>Most of the times, because of the following two reasons this is chosen.</p><ol><li>To remove a single point of failure (increase availability)</li><li>To support a larger environment (if a single node can support say 10000 elements then 2 nodes will support 20000 elements)</li></ol><p>A lot of times point two is not applicable. In very few of the instances you would find a customer who exceeds the technical limitation of products. For example, how many times you have actually seen a single vCenter server to support 1000 ESXi hosts and 15000 powered off VM’s in production? Or for that matter a single vCenter appliance taking care of 10000 powered on VM’s? I am yet to see one. Did you ever see a single ESXi host supporting 1024 VM’s or 4096 vCPU’s deployed in a host? Have you ever seen any customer who is actually touching or nearing to those technical limitation? I doubt.</p><p>Besides if you have an environment this big then definitely Distributed way is THE WAY for you.</p><p> Coming back to the point, it seems the majority of times the reason a distributed architecture is chosen is to remove a single point of failure and increase availability.</p><p>So let’s consider a full distributed environment for a vRA cloud environment and see the effects.</p><p>For vRealize Automation components to be full distributed, we need the following:</p><ul><li>Deployed vRA appliance – 2+</li><li>IaaS web server – 2+</li><li>IaaS Manager Service Server – 2+</li><li>IaaS DEM Server – 1+</li><li>Agent Server – 1+</li></ul><p>A total of minimum of 8 servers and the following.</p><ul><li>MSSQL Server in HA mode – 2+</li></ul><p>If you consider the vCenter environment, then you have the following:</p><ul><li>PSC – 2+</li><li>vCenter – 2+</li></ul><p>So a total of 10+ VM’s.</p><p>All these components will have Load Balancer in front. So architecturally vCenter environment looks like following:</p><p><img src="/images/2016/08/Picture1-3.png" alt="Distributed vCenter Deployment Architecture" class="responsive"></p><p>Distributed vCenter Deployment Architecture</p><p>Or more precisely:</p><p><img src="/images/2016/08/Picture2-3.png" alt="Distributed vCenter Deployment Architecture with Load Balancer" class="responsive"></p><p>Distributed vCenter Deployment Architecture with Load Balancer</p><p>And the vRA environment should be as given below:</p><p><img src="/images/2016/08/Picture3-3.png" alt="Distributed vRealize Automation deployment Architecture" class="responsive"></p><p>Distributed vRealize Automation deployment Architecture</p><p>The placement of a Load Balancer has a lot of effect in this environment. Let’s consider a physical load balancer in traditional environment, i.e. somewhere upstream after firewall (at least 2 or 3 hops away from the host on which the VM resides).</p><p>Now, let’s check how a normal user request for a VM is handled. A user request comes to the front LB and based on the decision, it goes to the respective vRA appliance. From there it again goes out to LB and comes back to a IaaS web server. Next the request again goes out to LB and based on the decision a Manager server is chosen and finally goes for DEM. The same story applies when the VM creation request goes out to vCenter, it reaches LB for choosing PSC and then vCenter node.</p><p>In all, considering all these multiple HOPS to LB think how many extra hops are there simply because of the nature of the deployment. Considering the number of extra hops consider the effect on the overall response time.</p><p><strong>Single node deployment:</strong></p><p>Now let’s consider the effects of a simple deployment. For our discussion let’s consider the number of supported elements is well within the capability of a single node.</p><p>First point, a request will not have to make so many round trips to LB. So obviously response time should be higher than a full distributed environment. So performance is higher.</p><p>But the negative effect is now you have a single point of failure. So let’s consider the different availability options to increase the overall uptime?</p><ol><li>The first line of defense is underlying HA with VM monitoring option. Typically, a physical node failure is sensed within 12 seconds and a restart takes place by 15 seconds. For the sake of discussion let’s consider the OS and the application of the VM comes up within 5 minutes. Considering a node failover happens once in a month, total downtime is 5 minutes in a total of 43200 minutes (considering 30-day month). That means you get an uptime of 99.988%. Same goes for VM hung situation or application hung situation. As we are monitoring at the VM level as well.</li><li>Second line of defense is snapshot, if the OS or application gets corrupted we simply revert back to a snapshot. First let’s consider an external database is used, then there is not much change in the original VM, so recovering from a snapshot is sufficient and say it requires 20 seconds. So total uptime is now 99.999%. But if internal database is used, then simply reverting to an earlier snapshot is not enough. In this case we need to revert to an earlier snapshot to recover the OS and then we need to restore the database from the backup (we need to have a regular backup mechanism for the database). This will require more time, say 10 minutes. In that case your uptime is 99.977% (considering internal database and recovery time of 10 minutes).</li><li>Third line of defense is backups. If everything gets corrupted then you need to restore entire appliance from a backup which say take 30 minutes. So in this case you get a 99.931% uptime in a month.</li></ol><p>So the choice is based on required uptime. If the business can sustain a 99.931% uptime for management components (at the worst case) and the total supported elements are well within the range, then I will certainly suggest a simple install because of the following reasons:</p><ul><li>Simpler to manage</li><li>Simpler to update</li><li>Will perform better (as compared to full distributed environment)</li><li>Better response time</li><li>Less complex</li></ul><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion:"></a><strong>Conclusion:</strong></h4><p>At the end I would say, do not do a full distributed deployment simply because you can. Consider all the above points. Choosing a simple single node deployment is not so bad after all.</p><p>Another point to note, if I need to build a fully distributed environment then I would prefer using a virtual load balancer like NSX Edge, which will be much closer to the VM’s than that of a physical one kept in a traditional architecture.</p><p>I am simplifying an already complex topic and the final answer is it all depends. Every environment and requirement is different and there is no single rule to follow, but simply do not discard a simple deployment model because of the so called reasons. Consider it seriously and it may be way better for your environment than the distributed one.Till then Happy designing and let me know your view points.  Note: The above discussion is from a virtualized datacenter perspective.</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PART III - vRealize Automation 7.0 Installation &amp; Configuration</title>
      <link href="/part-iii-vrealize-automation-7-0-installation-configuration.html"/>
      <url>/part-iii-vrealize-automation-7-0-installation-configuration.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>This is the last part of the series on vRealize Automation 7.0 installation and configuration. Since I have already covered the installation part, so in this post I am going to cover only the configuration part.</p><a id="more"></a><h4 id="vRealize-Automation-7-0-Configuration"><a href="#vRealize-Automation-7-0-Configuration" class="headerlink" title="vRealize Automation 7.0 Configuration:"></a>vRealize Automation 7.0 Configuration:</h4><p>NOTE: In all these posts I have covered only the automated Wizard installation and Configuration part. This post is also not going to be an exception.</p><p>Since vRealize Automation is pretty complex so the manual installation and configuration portion I will cover in separate blog series. The purpose of this blog series was to test the added Wizard based features of vRA 7.0 for a quick PoC setup.</p><p>Before I go ahead and start the configuration. There are two very important and useful pictures that I want to showcase. The first one shows the different roles and their duties and the second one details the different roles in a Tenant. These two photos were taken from “vrealize-automation-70-foundations-and-concepts.pdf” document. Provided below are the screenshots.</p><p><img src="/images/2015/12/TenantRoles.png" alt="Tenant Roles and Responsibilities" class="responsive"></p><p>Tenant Roles and Responsibilities</p><p><img src="/images/2015/12/vRAPermissions.png" alt="Different Roles and Responsibilities in vRA" class="responsive"></p><p>Different Roles and Responsibilities in vRA</p><p>Ok. So from the above two pictures you can get an idea about different roles and responsibilities in vRA. In a future blog where I will cover the manual configuration part I will cover these in more detail.</p><p>So let’s start the configuration. Remember in the last portion of the installation Wizard was to create an admin role (configurationadmin) in the default Tenant (which is vsphere.local). We are supposed to login to the default tenant with this user id and password that we set in the previous step and further configure the setup.</p><p>To login to the default tenant you need to go to <strong>https://<vra fqdn="" or="" ip="">/vcac/org/vsphere.local</vra></strong></p><ul><li>In my case I used <strong><a href="https://vra.lab.com/vcac/org/vsphere.local" target="_blank" rel="noopener">https://vra.lab.com/vcac/org/vsphere.local</a></strong>. It asks for user id and password. One point to note here, this is a local user. In the earlier case when we login to the default tenant with “Administrator” user id, we could set the authentication mechanism from there. In this version we can not set it from there. So to set it we need to login to the individual tenant and from there we need to set the authentication server.</li></ul><p><img src="/images/2015/12/Image001.png" alt="Picture 1" class="responsive"></p><p>Picture 1</p><ul><li>Once we login with the configurationadmin user id, we come to the Home Page.</li></ul><p><img src="/images/2015/12/Image002.png" alt="Home Page" class="responsive"></p><p>Home Page</p><ul><li>Next, if we check the Catalog, we can see that a default item “vSphere Initial Setup” is already available for us. We will use this to configure the initial setup. Also since this will create and configure everything for us, so I had pre-created a template in vCenter server so that I can use that to create a blueprint.</li></ul><p><img src="/images/2015/12/Image003.png" alt="vSphere Initial Setup Catalog item" class="responsive"></p><p>vSphere Initial Setup Catalog item</p><ul><li>Next, we will request the item. The first step is whether you want to use the current tenant or use another one.</li></ul><p><img src="/images/2015/12/Image004.png" alt="Request Item 1" class="responsive"></p><p>Request Item 1</p><ul><li>The next option is where to use an existing tenant or create a new one. For an existing tenant you need to provide the Tenant name and an existing administrator id/password for that tenant.</li></ul><p><img src="/images/2015/12/Image005.png" alt="New Tenant" class="responsive"></p><p>New Tenant</p><ul><li>For my testing, I want to use a new tenant. To create a new tenant, you need to provide the system administrator password, the new Tenant name and an admin user for the new tenant.</li></ul><p><img src="/images/2015/12/Image006.png" alt="New Tenant" class="responsive"></p><p>New Tenant</p><ul><li>In the next step we need to provide the End Point details. Note the Endpoint Name is the name that we provided at the time of Endpoint installation in IaaS server. Endpoint host is the Resource host (for vSphere environment it is the vCenter server host). We also need to provide the credentials for the vCenter.</li></ul><p><img src="/images/2015/12/Image007.png" alt="End Point Details" class="responsive"></p><p>End Point Details</p><ul><li>Next we Submit the request and the job is run as can be seen from the below screenshot.</li></ul><p><img src="/images/2015/12/Image008.png" alt="Request Submit" class="responsive"></p><p>Request Submit</p><ul><li>Since this is a workflow created in advanced service designer, so I can check the status of the running task in the backend vRealize Orchestrator Server (earlier vCenter Orchestrator). vRO is the main orchestrator engine using which we can provide XaaS services. This is a separate discussion altogether and I plan to cover it is future blog. For now we will just check the submitted job in the default vRO server.</li></ul><p><img src="/images/2015/12/Image010.png" alt="Task Running in vRO" class="responsive"></p><p>Task Running in vRO</p><ul><li>As can be seen from the above screenshot that one Task is waiting for user interaction, if we check the inbox of configurationadmin user we can see there is a task waiting for us.</li></ul><p><img src="/images/2015/12/Image011.png" alt="User Action task" class="responsive"></p><p>User Action Task</p><p>Once we go into the Action we can see that it is asking for the template and End Point Resource details. Here you need to select the Template that you want to use, Storage Reservation, Reservation Resource Pool and Reserved Network details.</p><p><img src="/images/2015/12/Image012.png" alt="Image 31" class="responsive"></p><p>End Point Resource Details</p><ul><li>Once we provide these details, we can see that vRO starts the workflow and completes the setup</li></ul><p><img src="/images/2015/12/Image013.png" alt="Image 13" class="responsive"></p><p>Running Workflow</p><p><img src="/images/2015/12/Image014.png" alt="Image 14" class="responsive"></p><p>Completed Task</p><ul><li>We can see from the Requests tab of vRA that the Request has successfully completed</li></ul><p><img src="/images/2015/12/Image015.png" alt="Image 15" class="responsive"></p><p>Completed Request</p><ul><li>Since the configuration has completed successfully, let’s check what changes it made or what configuration the Task has created. The first checking I want to do is whether the Tenant lab1 was created or not. To check that I logged in as Administrator user in default tenant. I can see that a new tenant with the name lab1 has been created.</li></ul><p><img src="/images/2015/12/Image016.png" alt="Image 16" class="responsive"></p><p>Tenant creation</p><ul><li>Next I logged in the new tenant with the newly created user “labadmin1”. I logged in to the new tenant with the URL <strong><a href="https://vra.lab.com/vcac/org/lab1" target="_blank" rel="noopener">https://vra.lab.com/vcac/org/lab1</a></strong></li></ul><p><img src="/images/2015/12/Image017.png" alt="Image 17" class="responsive"></p><p>New tenant login</p><ul><li>Once logged in, I wanted to check the Endpoint. Whether it has been created or not.</li></ul><p><img src="/images/2015/12/Image018.png" alt="Image 18" class="responsive"></p><p>Endpoint Created</p><ul><li>Next check the Compute Resources and see whether correct information is being gathered or not.</li></ul><p><img src="/images/2015/12/Image019.png" alt="Image 19" class="responsive"></p><p>Compute Resource</p><ul><li>Next in the list is to check the Fabric Group. I can see that a default Fabric Group has been created for me.</li></ul><p><img src="/images/2015/12/Image020.png" alt="Image 20" class="responsive"></p><p>Fabric Group</p><ul><li>I can see that the credential that I had given is saved as a new credential.</li></ul><p><img src="/images/2015/12/Image021.png" alt="Image 21" class="responsive"></p><p>Credential Created</p><ul><li>Next in the list is to check the Machine Prefixes. I can see a default naming convention which starts with “vm” and has two places for numbers has been created for me.</li></ul><p><img src="/images/2015/12/Image022.png" alt="Image 22" class="responsive"></p><p>Naming Convention</p><ul><li>Next to check is the Reservation Policy. I can see that a default Reservation Policy is set for me.</li></ul><p><img src="/images/2015/12/Image023.png" alt="Image 23" class="responsive"></p><p>Reservation is Set</p><ul><li>Next to check, if any Network Profile is set for me. Since it did not ask any network related information so no Network Profile was created as well as any reservation policy. Since to create a VM, network is not a mandatory requirement so no default network Profile was set. But if you want to check the network portion you should create a Network Profile manually here.</li></ul><p><img src="/images/2015/12/Image024.png" alt="Image 24" class="responsive"></p><p>No default Network Profile</p><ul><li>Next, if we check the Reservation, we can see that the storage profile is set correctly as well as the network path is set.</li></ul><p><img src="/images/2015/12/Image025.png" alt="Image 25" class="responsive"></p><p>Storage Path</p><p><img src="/images/2015/12/Image026.png" alt="Image 26" class="responsive"></p><p>Network Path</p><ul><li>The new tab in vRA 7.0 is the Design Tab. We create the Blueprint and XaaS services here. We can see that a default blueprint is already create for us.</li></ul><p><img src="/images/2015/12/Image027.png" alt="Image 27" class="responsive"></p><p>Blueprint is Created</p><ul><li>Further checking we can see that this blueprint uses the same Template “Test1” that I had created in vSphere. Note the Designer, it is similar to what we had in Application Director. Options available in left panel are very interesting and deserves a separate discussion.</li></ul><p><img src="/images/2015/12/Image028.png" alt="Image 28" class="responsive"></p><p>Blueprint Details</p><ul><li>Going to Catalog, we can see an item is already available for us.</li></ul><p><img src="/images/2015/12/Image029.png" alt="Image 29" class="responsive"></p><p>Catalog Item</p><ul><li>We request for the item and provide the details required by the item. Note the Request pane. It is different from what we had in earlier vRA version. In first level we provide simple generic information like the Reason and how many machines are required.</li></ul><p><img src="/images/2015/12/Image030.png" alt="Image 30" class="responsive"></p><p>Item Request Page1</p><ul><li>If we click on the item itself, we can see the rest of the details specific to a single VM.</li></ul><p><img src="/images/2015/12/Image031.png" alt="Image 31" class="responsive"></p><p>Item Request Page 2</p><ul><li>Click on Submit to submit the request.</li></ul><p><img src="/images/2015/12/Image032.png" alt="Image 32" class="responsive"></p><p>Request Submitted</p><ul><li>Once the request is submitted, we can see the details from the Requests page. We can see that the task is “In Progress”.</li></ul><p><img src="/images/2015/12/Image033.png" alt="Image 33" class="responsive"></p><p>Task Status</p><ul><li>If we check the backend vCenter server, we can see that the status of the respective tasks.</li></ul><p><img src="/images/2015/12/Image034.png" alt="Image 34" class="responsive"></p><p>vCenter Tasks</p><ul><li>If we see the Details of the Request, we can see the details of the requested item. Note the change in the design and also the “View” option.</li></ul><p><img src="/images/2015/12/Image035.png" alt="Image 35" class="responsive"></p><p>Request Details</p><ul><li>So, the request is completed successfully. We can now check the status of the VM from the Items tab.</li></ul><p><img src="/images/2015/12/Image036.png" alt="Image 36" class="responsive"></p><p>Item Details 1</p><p><img src="/images/2015/12/Image037.png" alt="Image 37" class="responsive"></p><p>Item Details 2</p><ul><li>If we click and go into the details of the Item. We can see all the respective details for the VM and also see the list of tasks that we can do on this item.</li></ul><p><img src="/images/2015/12/Image038.png" alt="Image 38" class="responsive"></p><p>Item Details</p><ul><li>Going to Home tab we can see details for this user.</li></ul><p><img src="/images/2015/12/Image039.png" alt="Image 39" class="responsive"></p><p>Home Page Details 1</p><p><img src="/images/2015/12/Image040.png" alt="Image 40" class="responsive"></p><p>Home Page Details 2</p><p>This concludes the setup. We can see that how easy it was to configure everything and getup and running.</p><h4 id="Final-Thoughts"><a href="#Final-Thoughts" class="headerlink" title="Final Thoughts:"></a>Final Thoughts:</h4><p>In my opinion, the Wizard based installation and initial configuration takes vRA 7.0 usability to another level. It is amazingly easy to setup and run an IaaS setup within the shortest time frame. You can build a PoC setup in less than one hour. You seriously can not beat this level of automation with any other cloud setup. My rating for this entire setup is provided below (in a scale of 1 to 5).</p><ul><li><p>Ease of Deployment - 5 Star</p></li><li><p>Ease of Initial Setup - 4 Star (I had to know those two manual steps)</p></li><li><p>Ease of Configuration - 5 Star</p></li><li><p>Overall experience - 5 Star</p></li></ul><p>Obviously vRA 7 is way more capable than the above setup (the above was most basic configuration), so in future posts I am going to cover advanced configurations (Branding, AD authentication, Complex BluePrint and Oh Yes Advanced Service Designer).</p><p>So watch out for new posts.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PART II - vRealize Automation 7.0 Installation &amp; Configuration</title>
      <link href="/part-ii-vrealize-automation-7-0-installation-configuration.html"/>
      <url>/part-ii-vrealize-automation-7-0-installation-configuration.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>This is the second part of the three part series of vRealize Automation 7.0 installation and configuration blog series. In this part I am going to take a closer look at the installation of IaaS server through initial Wizard.</p><p><strong>Pre-Requisites:</strong> Before we go ahead and start the installation and configuration we need to prepare the IaaS server.<br><a id="more"></a><br>A lot of pre-requisites will be set by the Wizard (as we can see later) but couple of points we need to configure manually. I will cover them at a later stage but at this stage we will install a Windows VM with Database installed in it. For supported versions check <a href="https://www.vmware.com/pdf/vrealize-automation-70-support-matrix.pdf" target="_blank" rel="noopener">vRA Support Matrix</a>. In my case I have taken the following:</p><ul><li>A VM with Windows 2008 R2 SP1 installed in it.</li><li>For database I have taken MSSQL Server Express 2012.</li><li>A domain account <a href="mailto:vradmin@lab.com" target="_blank" rel="noopener">vradmin@lab.com</a> with local administrator rights.</li></ul><p>All the pre-requisites will be set by the Wizard but “Log on as a Batch Job” right needs to be given to the user. This needs to be set manually. Provided below are the details by which you can do that:</p><p><strong>Enable “Log on as a Batch Job” right</strong></p><ol><li>Type in <strong>secpol.msc /s at Start -&gt;Run</strong></li><li>Select <strong>“Local Policies” in MSC snap in</strong></li><li>Select <strong>“User Rights Assignment”</strong></li><li>Right click on <strong>“Log on as batch job”</strong> and select <strong>Properties</strong></li><li>Click <strong>“Add User or Group”</strong>, and include the relevant user (in my case vradmin)</li></ol><p>This will set the proper rights. There is another step we need to set but I will talk about it shortly. Also before we start the installation we need to install the vRA Management agent in the IaaS server so that vRA Appliance will be able to able to detect the IaaS server. </p><p>The installer is available at <a href="https://vra.lab.com/installer" target="_blank" rel="noopener">https://vra.lab.com/installer</a> page. The package name is <strong>vCAC-IaaSManagementAgent-Setup.msi</strong>. Pre- requisite for this package installation is <strong>.NET Framework 4.5</strong>. Once the package is downloaded in the IaaS server double click on it to start the installation. </p><p><strong>vRA Management Agent installation:</strong> Follow the below methods to install the agent.</p><ul><li>After the double click once the installation window opens click next</li></ul><p><img src="/images/2015/12/Image005-1.png" alt="Picture 1" class="responsive"></p><p>Picture 1</p><ul><li>Next provide the details of the vRA server. Note the appliance address is appended by port number 5480. Also click on Load to load the fingerprint from the vRA server and after checking it to be right click on the confirmation button. Click on next button to go to next page.</li></ul><p><img src="/images/2015/12/Image006-1.png" alt="Picture 2" class="responsive"></p><p>Picture 2</p><ul><li>Next provide the user id and password with local admin rights in the system. I used the account which I will use for later installations as well. Click on next.</li></ul><p><img src="/images/2015/12/Image007-1.png" alt="Picture 3" class="responsive"><br>Picture 3</p><ul><li>Next page Click on Install button to start the installation. Once done click on Finish to close the window.</li></ul><p><img src="/images/2015/12/Image008-1.png" alt="Picture 4" class="responsive"></p><p>Picture 4</p><ul><li>Note the agent gets installed as any other Windows application. If for some reason you want to start the reinstallation you need to manually uninstall this agent from Programs and Features Panel. </li></ul><p><strong>Uninstalling IaaS components does not uninstall this agent.</strong></p><p><img src="/images/2015/12/Image016-1.png" alt="Picture 5" class="responsive"></p><p>Picture 5</p><p>Ok so agent installation is done. Now we can start the configuration. As earlier we can start the Wizard by accessing it from <strong>https://&lt;vra appliance FQDN/IP&gt;:5480</strong> and logging in with <strong>root/<passwd></passwd></strong>. </p><p><strong>IaaS installation through Wizard:</strong> So let’s start the installation. This time we will start the installation with IaaS installation option selected.</p><ul><li>Similar to the situation explained in Part I post, the wizard starts with the warning and then deployment selection page.</li></ul><p><img src="/images/2015/12/Image001-1.png" alt="Picture 6" class="responsive"></p><p>Picture 6</p><p><img src="/images/2015/12/Image002-1.png" alt="Picture 7" class="responsive"></p><p>Picture 7</p><p><img src="/images/2015/12/Image003-1.png" alt="Picture 8" class="responsive"></p><p>Picture 8</p><ul><li>Next page will let us download the “vRA Management Agent”. So if we have not already done so, we can download this package from here and install it in IaaS server at this stage. Once installed I can see the IaaS server at the lower half of the screen. It will also show details like when was the last time it was connected and Time Drift between vRA and IaaS server. Also in this page you can change the Time setting or set the time settings. Once you complete all these setting click next.</li></ul><p><img src="/images/2015/12/Image017-1.png" alt="Picture 9" class="responsive"></p><p>Picture 9</p><ul><li>The next step is the most important one as this step checks the “Pre-Requisites”. To to start the checking click on “Run” button. Since I only installed .NET Framework 4.5, Java 1.7 and the Management Agent and did not do any further configuration. So for obvious reason the test fails. You will get details of which exact steps failed and what is the action that is required.</li></ul><p><img src="/images/2015/12/Image018-1.png" alt="Picture 10" class="responsive"></p><p>Picture 10</p><ul><li>The most interesting part in this page is the “Fix” button. If for any reason the test fails you can Click on Fix button and it will try to fix the problems for you. It will do the IIS Server installation and set all other pre-requisites. COOL. So I started the Fix. Once it is fixed IaaS server will restarted.</li></ul><p><img src="/images/2015/12/Image019-1.png" alt="Picture 11" class="responsive"></p><p>Picture 11</p><ul><li>Once the IaaS server is restarted let’s again start the checking.</li></ul><p><img src="/images/2015/12/Image020-1.png" alt="Picture 12" class="responsive"></p><p>Picture 12</p><ul><li>We can see that the Pre-Requisites are met. We can see the details of the each task status as well. Remember the “Log on as Batch Job” permission which is required but not set by the Pre-Requiste checker. Also I installed MSSQL Server Express 2012 R2 in the server.</li></ul><p><img src="/images/2015/12/Image021-1.png" alt="Picture 13" class="responsive"></p><p>Picture 13</p><ul><li>Next we will start the vRA configuration and need to provide the vRA details. First we need to provide the vRA host FQDN.</li></ul><p><img src="/images/2015/12/Image022-1.png" alt="Picture 14" class="responsive"></p><p>Picture 14</p><ul><li>Next provide the SSO Password.</li></ul><p><img src="/images/2015/12/Image023-1.png" alt="Picture 15" class="responsive"></p><p>Picture 15</p><ul><li>After this step we need to provide the Database server details. Also I had to manually enable TCP/IP Network Protocol using the method described in <a href="https://technet.microsoft.com/en-us/library/hh231672(v=sql.110" target="_blank" rel="noopener">How to enable TCP/IP Network Protocol in MSSQL Server</a>.aspx). In this page you can use the Default settings for the database or change it according to your requirement (it lets you select a different location for storing the database files).</li></ul><p><img src="/images/2015/12/Image025-1.png" alt="Picture 16" class="responsive"></p><p>Picture 16</p><ul><li>Next you need to provide the DEM server details like instance name, user id and password.</li></ul><p><img src="/images/2015/12/Image026-1.png" alt="Picture 17" class="responsive"></p><p>Picture 17</p><ul><li>After this you need to provide the Agent details like the Agent name and Endpoint name. Also you need to provide the Agent Type details.</li></ul><p><img src="/images/2015/12/Image027-1.png" alt="Picture 18" class="responsive"></p><p>Picture 18</p><ul><li>Next, provide details of the vRA Certificate and either you an generate a certificate or Import and existing one. Also you can Save Generated Certificate for further use.</li></ul><p><img src="/images/2015/12/Image028-1.png" alt="Picture 19" class="responsive"></p><p>Picture 19</p><ul><li>Next we need to generate Web Certificate. Note the extra option for providing the certificate you get in the page.</li></ul><p><img src="/images/2015/12/Image029-1.png" alt="Picture 20" class="responsive"></p><p>Picture 20</p><ul><li>In the next Page you need to provide Manager Service Certificate.</li></ul><p><img src="/images/2015/12/Image030-1.png" alt="Picture 21" class="responsive"></p><p>Picture 21</p><ul><li>In the next page we will validate all the setting we have done till now. Click on the Validate button to start the validation.</li></ul><p><img src="/images/2015/12/Image031-1.png" alt="Picture 22" class="responsive"></p><p>Picture 22</p><ul><li>It starts the checker and you will get details of the checks done and task percentage.</li></ul><p><img src="/images/2015/12/Image032-1.png" alt="Picture 23" class="responsive"></p><p>Picture 23</p><ul><li>Note some of the tests failed. This was the stage where I noticed though pre-requisites were done at a previous stage but TCP/IP Network setting was missing in DB and had to manually set it. Once I corrected the problem again click on the Validate button to revalidate the settings.</li></ul><p><img src="/images/2015/12/Image033-1.png" alt="Picture 24" class="responsive"></p><p>Picture 24</p><ul><li>Next we can see that all the tests were successfully validated.</li></ul><p><img src="/images/2015/12/Image034-1.png" alt="Picture 25" class="responsive"></p><p>Picture 25</p><p>In the next stage you get a suggestion to create Snapshots of the respective VM’s so that in case it is necessary you can always failback to it.</p><p><img src="/images/2015/12/Image035-1.png" alt="Picture 26" class="responsive"></p><p>Picture 26</p><ul><li>So I took the Snapshots and in the next page started the Installation. Once the installation is completed successfully, in the next page provide the license details.</li></ul><p><img src="/images/2015/12/Image001-2.png" alt="Picture 27" class="responsive"></p><p>Picture 27</p><ul><li>Next, choose the Telemetry option (Optional)</li></ul><p><img src="/images/2015/12/Image002-2.png" alt="Picture 28" class="responsive"></p><p>Picture 28</p><ul><li>In the next stage you need to choose whether you want to do the initial configuration. If you choose this option and an administrative user “configurationadmin” would be created for you in default tenant and when you login to the default tenant with this user id you will get a catalog item for an Initial configuration workflow. This workflow will do the initial configuration for you. In my case I selected this option as I want to test it out. So in this page I had to provide a password for the user and then click on “Create Initial Content” button.</li></ul><p><img src="/images/2015/12/Image003-2.png" alt="Picture 29" class="responsive"></p><p>Picture 29</p><ul><li>Once done it will give you the status of the task and next steps to do for the configuration.</li></ul><p><img src="/images/2015/12/Image004-1.png" alt="Picture 30" class="responsive"></p><p>Picture 30</p><ul><li>Click next and you are done. Pretty easy and Cool</li></ul><p><img src="/images/2015/12/Image005-2.png" alt="Picture 31" class="responsive"></p><p>Picture 31</p><p>Since all the installation is done, I will cover the configuration portion in the next part. I will cover this default initial configuration as well as manual configuration. So Stay Tuned for Part III !!!!!</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PART I - vRealize Automation 7.0 Installation &amp; Configuration</title>
      <link href="/part-i-vrealize-automation-7-0-installation-configuration.html"/>
      <url>/part-i-vrealize-automation-7-0-installation-configuration.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>On 17th December VMware released much awaited new version of vRealize Automation which is 7.0. The major new changes and additions for this version are provided below:</p><p><strong>What’s New in vRA 7.0</strong></p><a id="more"></a><ol><li>Deployment and Initial Configuration: The entire installation process for vRA has changed completely. With this version the installation process is a simplified Wizard based installation.</li><li>Identity Management: With this version Identity Management server (vIDM) is integrated with the vRA appliance. So you don’t need to install it separately.</li><li>Converged Blueprint Designer: In this version vRA is completely integrated with previously known product Application Director. Also the Blueprint designer is completely re-designed to that of Application Director. So all of you who have worked with App. Director you will find no surprise here. Though this feature gives tremendous strength to XaaS offering.</li><li>Event Broker Service: Remember the Message Bus Service in vCloud Director RabbitMQ? In this version it is integrated in vRA as well, thus extending the extensibility. This is called Event Broker Service in vRA.</li></ol><p>Those were the main points. For details please check the excellent blog by Jad El-Zain at <a href="https://blogs.vmware.com/management/2015/10/vrealize-automation-7-0-spotlight-innovations-overview.html" target="_blank" rel="noopener">vrealize-automation-7-0-spotlight-innovations-overview</a>.</p><p>So I decided to take this version for a spin and check for myself what are the changes and how they look. I am going to write a blog series on Installation and Configuration of vRA 7.0.</p><p><strong>Installation Options:</strong> When it comes to installation for vRA 7.0, we have following options:</p><ol><li>Installation Wizard: In this method you can do the entire configuration using the new Wizard.</li><li>Manual Install: In this process you need to manually configure everything (the way it used to be configured previously.</li></ol><p>Also from the perspective of deployment type again we have two option:</p><ol><li>Deploy a PoC environment with basic setting</li><li>Deploy an Enterprise environment with complex distributed architecture</li></ol><p>For the purpose of this testing I will use the Installation Wizard and the PoC Deployment type.</p><p>The first task is to download the vRealize Automation 7.0 appliance. You can download it from <a href="https://my.vmware.com/group/vmware/info?slug=infrastructure_operations_management/vmware_vrealize_automation/7_0" target="_blank" rel="noopener">(vRealize Automation 7.0 download)</a>. Once downloaded deploy it in your environment the way you do for any ova template. Remember you need to provide network, dns, domain, hostname etc. related information during the deployment. I am not detailing the ova deployment as that is similar to any ova deployment.</p><p>The Wizard installation supports two different modes. The first one where you use the wizard to configure only the vRA Appliance. The second one in which it configures the vRA appliance and installs the IaaS server as well.</p><p>I will cover them one by one.</p><p><strong>My lab environment:</strong></p><p>AD/DNS     : lab-ad.lab.com</p><p>VCENTER : vcenter.lab.com</p><p>ESXi 1        : esxi1.lab.com</p><p>ESXi 2        : esxi2.lab.com</p><p>ESXi 3        : esxi3.lab.com</p><p>IAAS          : iaas.lab.com (hosts DB as well)</p><p>VRA           : vra.lab.com</p><p><strong>Configuring only vRA Appliance:</strong></p><p>Since I am going to use the vRA appliance configuration option only so I have not prepared a VM for IaaS at this stage. Once you deploy the appliance you need to access it through https://&lt;appliance FQDN/IP&gt;:5480 , this would open the configuration page. In my case after the deployment of vRA I accessed it through <a href="https://vra.lab.com:5480" target="_blank" rel="noopener">https://vra.lab.com:5480</a> it asks for user id and password. Provided the root id and password. It directly opens the Wizard on top of the details tabs.</p><ul><li>This is the first screen that you get. Remember if you cancel it once then you can not get it back. At the top right corner there is a “LogOff” option. You can logoff at any time and when you log back in Wizard will start again, but if you cancel it once and do any manual step, you can not take help of Wizard again.</li></ul><p><img src="/images/2015/12/Image001-3.png" alt="Picture 1" class="responsive"></p><p>Picture 1</p><ul><li>In the next screen you need to accept the EULA.</li></ul><p><img src="/images/2015/12/Image002-3.png" alt="Picture 2" class="responsive"></p><p>Picture 2</p><ul><li>Next page you need to choose the Deployment model, whether minimal deployment or Enterprise Deployment. Also in this page you need to choose whether you want to “Install Infrastructure As A Service” as well. For this part I will simply configure the vRA Appliance.</li></ul><p><img src="/images/2015/12/Image009.png" alt="Picture 3" class="responsive"></p><p>Picture 3</p><ul><li>Next Page you need to provide FQDN of vRA. You can either provide the value or get it resolved automatically.</li></ul><p><img src="/images/2015/12/Image010-1.png" alt="Picture 4" class="responsive"></p><p>Picture 4</p><ul><li>Next provide password for SSO Administrator user.</li></ul><p><img src="/images/2015/12/Image011-1.png" alt="Picture 5" class="responsive"></p><p>Picture 5</p><ul><li>Next page you need to set the Certificate. You can Generate Certificate or Import a certificate. Also if you are restarting the Wizard after generating the certificate once there will be another option of “Keep Existing” certificate option.</li></ul><p><img src="/images/2015/12/Image012-1.png" alt="Picture 6" class="responsive"></p><p>Picture 6</p><ul><li>Next page is the Installation Page. In this page you need to start the Installation. Note there are two more tabs which are greyed out because I have not started the installation. they are “Collect Logs” and “Retry Failed”. Retry Failed is a great option. If any task fails you can correct the problem and then start the Installation again.</li></ul><p><img src="/images/2015/12/Image013-1.png" alt="Picture 7" class="responsive"></p><p>Picture 7</p><p>I started the installation. In the below screenshots you can see that the Wizard shows the tasks that it is performing and the status of the task.</p><p><img src="/images/2015/12/Image014-1.png" alt="Picture 8" class="responsive"></p><p>Picture 8</p><p><img src="/images/2015/12/Image015-1.png" alt="Picture 9" class="responsive"></p><p>Picture 9</p><p>Once this installation is successfully completed in the next page you need to enter License details and in the last page Telemetry details (if you want this to be activated.</p><p>Note, in the installation step the last task it does is do a Health Check.</p><p>Who has noticed in the earlier case, in vRA there were 28 services which needed to be running and in “REGISTERED” mode. After IaaS installation the number of services were 29.</p><p>In this version, without IaaS server there should be 29 services in vRA and after IaaS installation there should be a total 30 services running and n REGISTERED mode.</p><p>In Part II, I will cover IaaS installation and in Part III of the blog series I will cover the configuration portion.</p><p>Stay Tuned!!!!</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Automation </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Automation </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to Remote execute scripts inside a VM in vSphere</title>
      <link href="/how-to-remote-execute-scripts-inside-a-vm-in-vsphere.html"/>
      <url>/how-to-remote-execute-scripts-inside-a-vm-in-vsphere.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Hello All,<br>Hope you are doing well. Today I want to talk about remotely executing scripts inside a VM which is hosted in vSphere environment. Recently I received the following requirement from a colleague for a customer.<br> <a id="more"></a></p><p><strong>Environment:</strong>  </p><ol><li>Customer has hundreds of VMs  </li><li>A particular application is running in many of the VM’s which creates a log file in a particular location inside the VM  </li><li>Admin team does not know in which of those VM’s the application is running  </li></ol><p><strong>Requirement:</strong>  </p><ol><li>Admin team wants to know in which of those VM’s the application is running.  </li><li>They want to get the information in an excel file  </li></ol><p><strong>Solution:</strong>  </p><p>To provide a solution to this problem we would use the <strong>Invoke-Command</strong> cmdlet available in PowerShell. Note I used this cmdlet as all the VM’s had <strong>Windows</strong> as an operating system. For more generic work (mixed environment) we can use <strong>Invoke-VMScript</strong> cmdlet available in PowerShell.  </p><p>The difference between the two is given below:  </p><blockquote><p>Invoke-Command is a more specific cmdlet which works for Windows environment only. This cmdlet let’s you run a command in the “local or remote” windows computers (be it physical or virtual).  </p></blockquote><blockquote><p>On the contrary Invoke-VMScript is a very specific cmdlet provided with PowerCLI which is applicable for vSphere environment only. This cmdlet “Runs a script in the guest OS of each of the specified virtual machines” and this is valid of all guest operating system. This actually takes help of VMware tools to run the script remotely.  </p></blockquote><p>For my example, I took help of <strong>Invoke-Command</strong> and had written the following script.  </p><pre class=" language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true">#requires -version 3  </span><span class="token comment" spellcheck="true">###########################################################################################  </span>\<span class="token comment" spellcheck="true"># Title     :   Finding a list of VMs in which a particular file is present  </span>\<span class="token comment" spellcheck="true"># Filename  :   Get-File.ps1            </span>\<span class="token comment" spellcheck="true"># Created by:   Sajal Debnath             </span>\<span class="token comment" spellcheck="true"># Date      :   19-11-2015                  </span>\<span class="token comment" spellcheck="true"># Version   :   1.0          </span>\<span class="token comment" spellcheck="true"># Update    :   This is the first version  </span>\<span class="token comment" spellcheck="true"># E-mail    :   sdebnath@vmware.com  </span><span class="token comment" spellcheck="true">###########################################################################################  </span><span class="token comment" spellcheck="true">&lt;# .synopsis="" get-file="" finds="" whether="" a="" particular="" file="" is="" present="" in="" location="" inside="" windows="" vm="" .description="" get-file.ps1="" script="" to="" find="" out="" list="" of="" all="" the="" vm's="" vsphere="" envionment="" which="" location.="" output="" provided="" console="" or="" optionally="" can="" be="" saved="" csv="" format="" works="" on="" powered="" and="" only="" those="" where="" vmware="" tools="" installed.="" run="" with="" following="" parameters="" -vcenter="" &lt;vcenter=""> -vcuser &lt;vcenter user=""> -vcpassword &lt;vcenter password=""> -guestuser &lt;guest os="" user="" id=""> -guestpassword &lt;guest user="" password=""> -filelocation &lt;location of="" the="" file=""> -outputfile &lt;output file="" location="">      .NOTES      Created by: Sajal Debnath      Modified: 19/11/2015 10:29:58 PM       Changelog:       \*       To Do:       *       .EXAMPLE   #></span>   <span class="token keyword">Param</span><span class="token punctuation">(</span>      \<span class="token namespace">[Parameter (Mandatory=$true, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$vcenter</span><span class="token punctuation">,</span>      \<span class="token namespace">[Parameter (Mandatory=$true, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$vcuser</span><span class="token punctuation">,</span>      \<span class="token namespace">[Parameter (Mandatory=$true, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$vcpassword</span><span class="token punctuation">,</span>      \<span class="token namespace">[Parameter (Mandatory=$true, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$guestuser</span>      \<span class="token namespace">[Parameter (Mandatory=$true, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$guestpassword</span>      \<span class="token namespace">[Parameter (Mandatory=$true, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$filelocation</span>      \<span class="token namespace">[Parameter (Mandatory=$false, ValueFromPipeline=$false)\]</span>      \<span class="token namespace">[String\]</span><span class="token variable">$outputfile</span>  <span class="token punctuation">)</span>  <span class="token keyword">Begin</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true"># Adding Snapin and Importing required Modules  </span>    <span class="token variable">$snapinName</span> = <span class="token string">'VMware.VimAutomation.Core'</span>      <span class="token variable">$snapinAdded</span> = <span class="token function">Get-PSSnapin</span> <span class="token punctuation">|</span> <span class="token function">Select-String</span> <span class="token variable">$snapinName</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$snapinAdded</span><span class="token punctuation">)</span>      <span class="token punctuation">{</span>          <span class="token function">Add-PSSnapin</span> <span class="token variable">$snapinName</span>      <span class="token punctuation">}</span>      <span class="token keyword">Try</span><span class="token punctuation">{</span>          <span class="token function">Write-Verbose</span> <span class="token string">'Connecting to vCenter Server'</span>          \<span class="token namespace">[void\]</span> <span class="token punctuation">(</span>Connect<span class="token operator">-</span>VIServer <span class="token operator">-</span>Server <span class="token variable">$vcenter</span> <span class="token operator">-</span>User <span class="token variable">$vcuser</span> <span class="token operator">-</span>Password <span class="token variable">$vcpassword</span><span class="token punctuation">)</span>          <span class="token variable">$vcfullname</span> = <span class="token punctuation">(</span>Get<span class="token operator">-</span>View ServiceInstance<span class="token punctuation">)</span><span class="token punctuation">.</span>Content<span class="token punctuation">.</span>About<span class="token punctuation">.</span>FullName      <span class="token punctuation">}</span>      <span class="token keyword">Catch</span><span class="token punctuation">{</span>          <span class="token function">Write-Debug</span> <span class="token string">'Could Not Connect to vCenter Server'</span>          <span class="token keyword">Exit</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">Process</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true"># Collecting all the VM's that are poweredon and has VMware tools installed in it  </span>        <span class="token variable">$vms</span> = Get<span class="token operator">-</span>VM <span class="token punctuation">|</span> Where <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">.</span>PowerState <span class="token operator">-eq</span> <span class="token string">'PoweredOn'</span><span class="token punctuation">)</span> <span class="token operator">-and</span> <span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">.</span>ExtensionData<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Guest<span class="token punctuation">.</span>ToolsStatus <span class="token operator">-eq</span> <span class="token string">'toolsOk'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>          <span class="token variable">$information</span> = @<span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$vm</span> in <span class="token variable">$vms</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token variable">$info</span> = <span class="token string">""</span><span class="token punctuation">|</span> <span class="token function">Select</span> Name<span class="token punctuation">,</span>Status          <span class="token variable">$body</span> = <span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName <span class="token variable">$vm</span> <span class="token operator">-</span>ScriptBlock <span class="token punctuation">{</span><span class="token function">Dir</span> <span class="token variable">$filelocation</span><span class="token punctuation">}</span> <span class="token operator">-</span>GuestUser <span class="token variable">$guestuser</span> <span class="token operator">-</span>GuestPassword <span class="token variable">$guestpassword</span> <span class="token operator">-</span>ErrorAction SilentlyContinue          <span class="token variable">$info</span><span class="token punctuation">.</span>Name = <span class="token variable">$vm</span><span class="token punctuation">.</span>Name          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token variable">$info</span><span class="token punctuation">.</span>Status = <span class="token string">'File Exists'</span>          <span class="token punctuation">}</span>          <span class="token keyword">Else</span><span class="token punctuation">{</span>              <span class="token variable">$info</span><span class="token punctuation">.</span>Status = <span class="token string">'File Does Not Exist'</span>          <span class="token punctuation">}</span>          <span class="token variable">$information</span> <span class="token operator">+=</span> <span class="token variable">$info</span>           <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token keyword">End</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true"># Showing in the information in screen and if path provided then saving it in file  </span>        <span class="token function">Write-Host</span> <span class="token variable">$information</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$outputfile</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token variable">$information</span> <span class="token punctuation">|</span> <span class="token function">Export-Csv</span> <span class="token operator">-</span>Path <span class="token variable">$outputfile</span> <span class="token operator">-</span>NoTypeInformation          <span class="token punctuation">}</span>          Disconnect<span class="token operator">-</span>VIServer <span class="token operator">-</span>server <span class="token variable">$vcenter</span> <span class="token operator">-</span>Confirm:<span class="token boolean">$false</span>  <span class="token punctuation">}</span>  &lt;<span class="token operator">/</span>output>&lt;<span class="token operator">/</span>location>&lt;<span class="token operator">/</span>guest>&lt;<span class="token operator">/</span>guest>&lt;<span class="token operator">/</span>vcenter>&lt;<span class="token operator">/</span>vcenter>&lt;<span class="token operator">/</span><span class="token comment" spellcheck="true">#></span></code></pre><p>The above script will check inside all the VM’s for the presence of the file inside the VM and generate an excel file based on the finding.  </p><p>You can run the script in the following format.  </p><pre class=" language-powershell"><code class="language-powershell">Get<span class="token operator">-</span>File <span class="token operator">-</span>vcenter &lt;vcenter> <span class="token operator">-</span>vcuser &lt;vcenter user=<span class="token string">""</span>> <span class="token operator">-</span>vcpassword &lt;vcenter password=<span class="token string">""</span>> <span class="token operator">-</span>guestuser &lt;guest os=<span class="token string">""</span> user=<span class="token string">""</span> id=<span class="token string">""</span>> <span class="token operator">-</span>guestpassword &lt;guest user=<span class="token string">""</span> password=<span class="token string">""</span>> <span class="token operator">-</span>filelocation &lt;location of=<span class="token string">""</span> the=<span class="token string">""</span> file=<span class="token string">""</span>> <span class="token operator">-</span>outputfile &lt;output file=<span class="token string">""</span> location=<span class="token string">""</span>>&lt;<span class="token operator">/</span>output>&lt;<span class="token operator">/</span>location>&lt;<span class="token operator">/</span>guest>&lt;<span class="token operator">/</span>guest>&lt;<span class="token operator">/</span>vcenter>&lt;<span class="token operator">/</span>vcenter>&lt;<span class="token operator">/</span>vcenter></code></pre>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to access and utilize ESXCLI from PowerCLI</title>
      <link href="/how-to-access-and-utilize-esxcli-from-powercli.html"/>
      <url>/how-to-access-and-utilize-esxcli-from-powercli.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Today I am going to talk about an interesting feature of PowerCLI. Through PowerCLI you can utilize the full functionalities of ESXCLI commands. Question is why would you like to access Esxcli commands from PowerCLI cmdlets. The reason is there are certain tasks which can easily be done using Esxcli cmdlets because there are no simple cmdlets available in PowerCLI for this.<br><a id="more"></a><br>For example, if you want to re-signature a vmfs datastore, it is easier to use Esxcli than to use PowerCLI and vSphere API’s. Besides using Esxcli very easily provides access to low level information about esxi server.</p><p>To access the Esxcli commands, first we need to connect to an Esxi server directly and then use the Get-EsxCli cmdlet to access the ESXCli commands. I will first connect to a Esxi server.</p><pre class=" language-language-powershell"><code class="language-language-powershell">PS C:> Connect-VIServer esxi1.lab.com -Username root -Password abcxyz</code></pre><p>Next we will store the information in a variable <strong>$esxinfo</strong>.</p><pre class=" language-powershell"><code class="language-powershell"><span class="token function">PS</span> C:> <span class="token variable">$esxinfo</span> = Get<span class="token operator">-</span>EsxCli <span class="token operator">-</span>VMHost Esxi1<span class="token punctuation">.</span>lab<span class="token punctuation">.</span>com</code></pre><p>So we have stored ESX CLI cmdlets in the variable. Now if we check the variable we can get a list of all the cmdlets.</p><pre class=" language-powershell"><code class="language-powershell">    <span class="token function">PS</span> C:> <span class="token variable">$esxinfo</span>    =====================    EsxCli: esxi1<span class="token punctuation">.</span>lab<span class="token punctuation">.</span>com       Elements:       <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>       device       elxnet       esxcli       fcoe       graphics      hardware       iscsi       network       rdma       sched       software       storage       system       vm       vsan</code></pre><p>Ok. So good so far. Since we got the list, what to do with it? To dig deeper, we need to query further. For example, if we need to find the information about hardware, we need to query it.</p><pre class=" language-powershell"><code class="language-powershell">    <span class="token function">PS</span> C:> <span class="token variable">$esxinfo</span><span class="token punctuation">.</span>hardware    =======================    EsxCliElement: hardware       Elements:       <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span><span class="token operator">-</span>       bootdevice       clock       cpu       ipmi       memory       pci       platform       smartcard       trustedboot</code></pre><p>As can be seen from above that we can get information about the listed parameters. For example, if we want to know about the platform we can simply use it with do notation.</p><pre class=" language-powershell"><code class="language-powershell">    <span class="token function">PS</span> C:> <span class="token variable">$esxinfo</span><span class="token punctuation">.</span>hardware<span class="token punctuation">.</span>platform    =======================    EsxCliElement: platform       Methods:       <span class="token operator">--</span>-<span class="token operator">--</span>-<span class="token operator">--</span>       PlatformGet get<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>We can see that there is only one method <strong>get()</strong> defined in this parameter. So we can use this to get the information about the platform.</p><pre class=" language-powershell"><code class="language-powershell">    <span class="token function">PS</span> C:> <span class="token variable">$esxinfo</span><span class="token punctuation">.</span>hardware<span class="token punctuation">.</span>platform<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>    IPMISupported : false    ProductName   : VMware Virtual Platform    SerialNumber  : VMware<span class="token operator">-</span>56 4d a2 7e 02 05 10 2b<span class="token operator">-</span>77 8b 50 eb bc b8 0b 78    UUID          : 0x56 0x4d 0xa2 0x7e 0x2 0x5 0x10 0x2b 0x77 0x8b 0x50 0xeb 0xbc 0xb8 0xb 0x78    VendorName    : VMware<span class="token punctuation">,</span> Inc<span class="token punctuation">.</span></code></pre><p>Likewise you can use different parameters to get or set many aspects of Esxi servers which you can do from ESX CLI cmdlets, but this time from PowerCLI.</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vRealize Operations Manager CUSTOM DASHBOARD - Part 3</title>
      <link href="/vrealize-operations-manager-custom-dashboard-part-3.html"/>
      <url>/vrealize-operations-manager-custom-dashboard-part-3.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>This is the last one in the custom dashboard series. In part 1 of the series I had covered about what I wanted to achieve and the general structure of the dashboard. In the second part I covered how we actually built the custom dashboard and the user roles. In this part we will see the end result.Since I already mentioned that when logged in with Admin account I will be able to see more information that the end user.<br><a id="more"></a><br>So let’s first check the Admin view of the dashboard.</p><p><img src="/images/2015/10/Image001.png" alt="Admin view of Custom Dashboard" class="responsive"></p><p>Admin view of Custom Dashboard</p><p>In the above screenshot we can see that in the 1st Widget we get a list of all the available Departments. Also note in 3rd Widget I got a list of all the available VM’s in the environment. Now let’s logout and login with a customer user that I have created.</p><p><img src="/images/2015/10/EndUser1.png" alt="End user view of Custom Dashboard" class="responsive"></p><p>End user view of Custom Dashboard</p><p>As can be seen from the above screenshot, when logged in with the custom user, I am able to see only the department in which I have permission and in 3rd widget I can see only the VM’s related to this Department only. The rest of the widget is shown below:</p><p><img src="/images/2015/10/Image002.png" alt="End user view of the rest of the information from Custom Dashboard" class="responsive"></p><p>End user view of the rest of the information from Custom Dashboard</p><p>So when the rest of the widgets show information related to the VM selected in the 3rd Widget. This gives me the exact result which my customer wanted. This concludes the series. Hope you will find it useful. vROps is a very powerful tool and with the information you can actually build pretty powerful and meaningful dashboard. I have used any Super Metrics in this dashboard, but with those you can reach higher sky. Let me know if these were useful to you and if you need anything else and we can work together to achieve that.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vRealize Operations Manager CUSTOM DASHBOARD - Part 2</title>
      <link href="/vrealize-operations-manager-custom-dashboard-part-2.html"/>
      <url>/vrealize-operations-manager-custom-dashboard-part-2.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>In the previous post I informed about the general structure of the dashboard. In this post I am going to go deeper and talk about how exactly I built the solution. For this I created a new dashboard by the name “Organization Details”. There is a very good and detailed blog by Jason Gaudreau on how to create a custom dashboard. So instead of re-inventing the wheel I have provided below a link to the blog.<br><a id="more"></a><br>Please check the blog on this topic. <a href="http://www.jasongaudreau.com/2015/05/vrealize-operations-manager-creating.html" target="_blank" rel="noopener">Jason Gaudreau’s Blog: vRealize Operations Manager - Creating a Custom Monitoring Portal</a> As mentioned earlier I created our custom Dashboard by the name “Organization Details”. The difference being in my case I chose different set of Widgets. I chose a total of 10 Widgets details of which is provided below:</p><p><img src="/images/2015/10/Image004.png" alt="Widget Details" class="responsive"></p><p>Widget Details</p><p>Once the Widgets are added to the dashboard then I need to setup the interaction between them. Since the first widget (Object List Widget) provides a list of the Departments, so it does not depend on any other widget. I configured it as: </p><ul><li><strong>Mode:</strong> Self </li><li><strong>Refresh:</strong> On</li><li><strong>Refresh Interval :</strong> 300 Seconds</li><li><strong>Auto Select First Row:</strong> On </li></ul><p>Also in the “Object Type” I selected “Department”. This concludes the configuration for this Widget. </p><p>The second widget “Health Widget” shows the overall health of the selected Department and hence depends on the 1st Widget. </p><p>The 3rd widget is again an “Object List Widget”. I named it as “VM List of the Department”. Again this is an widget which does not take input from any other Widget, so the configuration for this Widget is similar to the 1st Widget.<br>The only difference is the “Object Type”. For this I selected “Virtual Machine”. Note, this will show a list of all the VM’s in the environment. The rest of the widgets will depend on this 3rd Widget for their input. So the dependency of other Widgets is on the information on this widget. </p><p>Next comes the 5th and 6th widget, Customized Scoreboard Widgets. I customized it according to my requirement and the XML related to these widgets are provided below: </p><p><strong>5th Widget: Overall Allocation:</strong> </p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>adapterkinds</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>adapterkind</span> <span class="token attr-name">adapterkindkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VMWARE<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resourcekind</span> <span class="token attr-name">resourcekindkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VirtualMachine<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**sys|poweredOn**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Powered On<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>32<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>48<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>64<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**sys|osUptime_latest**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Uptime<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Sec.<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15552000<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>31104000<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>62208000<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**config|hardware|num_Cpu**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Allocated vCPU<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vCPU<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>24<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>32<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>48<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**guestfilesystem|capacity_total**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Total Disk Space <span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1024<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4096<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!--Metric attrkey="**guestfilesystem|usage**" label="Guest File System Usage" unit="" yellow="500" orange="1024" red="4096" /--></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**mem|guest_provisioned**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Allocated Memory<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>64<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>128<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>256<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**summary|number_network**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Total NIC<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resourcekind</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>adapterkind</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>adapterkinds</span><span class="token punctuation">></span></span> </code></pre><p><strong>6th Widget: Overall Utilization:</strong> </p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>adapterkinds</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>adapterkind</span> <span class="token attr-name">adapterkindkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VMWARE<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resourcekind</span> <span class="token attr-name">resourcekindkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>VirtualMachine<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**cpu|numberToAdd**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vCPU to Add<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vCPU<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**cpu|numberToRemove**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vCPU to Remove<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vCPU<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**cpu|usage_average**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CPU Usage<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**mem|usage_average**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Memory Usage<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**guestfilesystem|freespace_total**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Free Space<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GB<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**guestfilesystem|percentage_total**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Guest File System Usage <span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metric</span> <span class="token attr-name">attrkey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>**net|usage_average**<span class="token punctuation">"</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Network Usage Rate<span class="token punctuation">"</span></span> <span class="token attr-name">unit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>KBps<span class="token punctuation">"</span></span> <span class="token attr-name">yellow</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1024<span class="token punctuation">"</span></span> <span class="token attr-name">orange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2048<span class="token punctuation">"</span></span> <span class="token attr-name">red</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4096<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metric</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resourcekind</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>adapterkind</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>adapterkinds</span><span class="token punctuation">></span></span> </code></pre><p>Note the parameters that I am monitoring here. For a detailed list of parameters you can check the documentation at <a href="http://pubs.vmware.com/vrealizeoperationsmanager-61/index.jsp#com.vmware.vcom.core.doc/GUID-C272EDE0-49E0-44D6-B47F-C32723AC9246.html" target="_blank" rel="noopener">vROps documentation for metrices</a>. Provided below is a screenshot from where you can add customized XML files.</p><p><img src="/images/2015/10/Image005.png" alt="Custom XML Location" class="responsive"></p><p>Custom XML Location</p><p>Now when we configure the 5th and 6th widgets all we need to do is to select the XML file that we created in the Metric Configuration window. You can see the same from the below screenshot.</p><p><img src="/images/2015/10/Image006.png" alt="Custom XML selection for Scoreboard Widget" class="responsive"></p><p>Custom XML selection for Scoreboard Widget</p><p>Once the configuration of the widgets is finished. I need to create custom users and roles. Remember the 3rd Widget where we got a list of all the VM’s. But our primary aim was to show case only those VM’s which are related to the selected Department only. To achieve this first we will create a custom group, the dashboard will be provided to this group so that whoever is part of this group will be able to see the dashboard. Next we will create a custom role which will be copies from Read Only role and further customize it so that all the unnecessary information will not be shown. Again there is an excellent blog from Jason Gaudreau about how to create custom roles and access policies, so I am not going to cover that portion here. Please check the information at <a href="http://www.jasongaudreau.com/2015/01/vrealize-operations-60-access-control.html" target="_blank" rel="noopener">Jason Gaudreau’s Blog: vRealize Operations 6.0 - Access Control and Dashboard Management</a>. All I am doing here is creating custom user with Custom Read Only information (roles only which is required to show minimum information) and provide them access to the required Department only. So when I will log in with the user id, I will be able to see the only Department for which he has access in the 1st widget. Also since I have access to that department and its child items only so I will be able to see only those VM’s which are part of that department only in the 3rd Widget. So we have covered all the configuration portion. In the next blog we will see result.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vRealize Operations Manager CUSTOM DASHBOARD - Part 1</title>
      <link href="/vrealize-operations-manager-custom-dashboard-part-1.html"/>
      <url>/vrealize-operations-manager-custom-dashboard-part-1.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose:"></a>Purpose:</h4><p>Recently I had a request from a customer to build a custom Dashboard for vRealize Operations Manager for their environment. I thought of sharing my experience with you so that in the process I can show how to build a solution to a requirement. In doing so I will cover customization of vROps to a great extent. This is going to be a multi-part post. The requirement and environment is described below:<br><a id="more"></a></p><h4 id="Environment"><a href="#Environment" class="headerlink" title="Environment:"></a>Environment:</h4><p>It is a vCloud Director environment with multiple organizations hosted in it. Also inside few of the organizations VM’s from multiple department of that organization are hosted. All the VM’s belonging to a particular Department follows a particular naming convention.</p><h4 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement:"></a>Requirement:</h4><p>To provide a custom dashboard to the end users where the end user can only see the required information about the VM’s belonging to their Department. The Dashboard should provide CPU, Memory utilization of the VM’s and other VM related information. The dashboard should not be a complicated one as the end users are not very comfortable with the myriad information provided by vROps.</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h4><p>The fine points to the requirement and their respective solutions are provided below:</p><ul><li><strong>Decision 1:</strong> The first point is, how to identify different group of VM’s belonging to different departments so that we can show information about only those VM’s.<ul><li><strong>Solution:</strong> Had there been separate Organization VDC’s for different departments then could have easily installed vCloud Director plugin and could get the segregation. But here multiple department VM’s are hosted in a single Org. VDC. The positive side is each set of VM’s has their own unique naming convention. To create the segregation I will create separate Custom Groups for different VM’s. I will actually different Department’s for different group of VM’s. Also I will keep the membership dynamic so that whenever a new VM is added with the same naming convention, by default it will be part of this group.</li></ul></li><li><strong>Decision 2</strong>: How to limit a user from a department to see only those VM’s not someone else’s.<ul><li><strong>Solution</strong>: The solution to this requirement is easy enough. Just create a custom role, create a user and give the user permission to those Custom Groups only where he has rights to. Since I want to limit the end users to see nothing else than the Dashboard so I had taken the read only permission and further customized it according to my requirement.</li></ul></li><li><strong>Decision 3</strong>: What to show the end users or the layout of the dashboard. The dashboard layout is provided below:</li></ul><p><img src="/images/2015/09/vROpsCustomDashboard1.png" alt="vROps Custom Dashboard Layout" class="responsive"></p><p>vROps Custom Dashboard Layout</p><p>The interactions and behavior of the Widgets are provided below:</p><ol><li>When logged in as admin, a list of all Departments is listed in 1. Department List Widget.</li><li>When a department is selected overall health of the Department VM’s is shown in the 2. Overall Health of Department widget</li><li>The third widget is 3. VM List of the Department. It is a Object List Widget. This is a standalone widget. By default it shows a list of all the VM’s in the environment. Note when logged in as Admin, this particular widget will show all VM’s.</li><li>The rest of the widgets from 4 to 8 shows information regarding the VM selected in 3rd Widget. So they take input from this Widget.</li><li>10th Widget is an Alert List Widget which shows the alerts pertaining to the Department only.</li></ol><p>Note in the step 3 above when logged in as Admin you get all the VM list, but when logged in as an end user you get to see only the VM’s related to the Custom group.</p><p>This concludes the Part 1 of the series. In Part 2 I am going to talk about exact configurations of the user roles, Dashboard and Widgets. In the last part we will stitch everything together to build the solution.</p><p>So keep reading.</p>]]></content>
      
      <categories>
          
          <category> vRealize Suite </category>
          
          <category> vRealize Operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vRealize Suite </tag>
            
            <tag> vRealize Operations </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vSphere Capacity Report</title>
      <link href="/vsphere-capacity-report.html"/>
      <url>/vsphere-capacity-report.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>If you are an admin who manages a vSphere environment then you are in the right place. How many times did you wish for a report that would give you a holistic view of capacity of your environment? Well, I know you can get that from vRealize Operations Manager, but what about a simple script which can give you similar information but in more compact form.<br><a id="more"></a><br>Imagine logging in to your system in the morning and opening a HTML report which gives you at a<br>glance information of your environment. This script does exactly that.</p><h4 id="What-exactly-does-it-do"><a href="#What-exactly-does-it-do" class="headerlink" title="What exactly does it do?"></a>What exactly does it do?</h4><p>This is a script which generates a HTML report on overall capacity of a vSphere environment. For example, it can tell you what is the total available physical cores in your environment. What is the allocated vCPU and Used vCPU in your environment. Similar information for memory of the environment is also available. It will also tell you the total number of VM’s in the environment. At the end it gives you view of all the datastores. The script gives you a close approximation of the resources, since it does not calculate the memory overhead of the VM’s or memory required by the hypervisor, so it is not an exact value, but would give you fair idea about your environment capacity. The best part of this script is, it breaks down the information from overall capacity to Cluster level to Host level. So that you can get a fair idea of the environment.</p><h4 id="How-does-it-work"><a href="#How-does-it-work" class="headerlink" title="How does it work?"></a>How does it work?</h4><p>This is a plain PowerShell script which you can run manually or schedule it in Windows Scheduler. There is a single script Get-Capacity.ps1 which when run will generate the report for the environment. To run the script, follow the following format: </p><pre class=" language-powershell"><code class="language-powershell">Get<span class="token operator">-</span>Capacity <span class="token operator">-</span>vcenter &lt;vcenter> <span class="token operator">-</span>vcuser &lt;vcenter user=<span class="token string">""</span>> <span class="token operator">-</span>vcpassword &lt;vcenter password=<span class="token string">""</span>> <span class="token operator">-</span>consolidation &lt;cpu consolidation=<span class="token string">""</span> ratio=<span class="token string">""</span>>&lt;<span class="token operator">/</span>cpu>&lt;<span class="token operator">/</span>vcenter>&lt;<span class="token operator">/</span>vcenter>&lt;<span class="token operator">/</span>vcenter></code></pre><p>Note the Consolidation parameter. Depending on the number of available physical cores, the script calculates Available vCPU count. This count is generated based on the CPU consolidation ratio that you want for your environment.</p><h4 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output:"></a>Sample Output:</h4><p>A sample output is shown below.</p><p><img src="/images/2015/09/ScreenShot2015-09-29at5.03.53PM.png" alt="vSphere Capacity Report" class="responsive"></p><p>vSphere Capacity Report</p><h4 id="Areas-of-Improvement"><a href="#Areas-of-Improvement" class="headerlink" title="Areas of Improvement:"></a>Areas of Improvement:</h4><p>This is the first cut of the script and I plan to improve the following areas.</p><ul><li>Create a front end form where users will be able to choose the Clusters on which the Capacity test will be done</li><li>Create separate functions for calculating capacity at different layers</li><li>Create separate function to get the HTML output</li><li>Create more proper Verbose and Debug output</li><li>Create more detailed logging</li><li>Take input from credential file</li></ul><p>Also I plan to collaborate with my reader and take inputs for them. This script is more of educational value than practical value. So I want my readers to work on this and provide suggestions.</p><h4 id="Where-to-get-it"><a href="#Where-to-get-it" class="headerlink" title="Where to get it?"></a>Where to get it?</h4><p>You can download the main script as well as the sample HTML file from the GitHub repository at <a href="https://github.com/sajaldebnath/vsphere-capacity-report" target="_blank" rel="noopener">https://github.com/sajaldebnath/vsphere-capacity-report</a> . So let’s start!!!!!!!!!!!!!!</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vSphere Security Check Script</title>
      <link href="/vsphere-security-check-script.html"/>
      <url>/vsphere-security-check-script.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Dear Readers, Its been long since I have written a blog. But as promised, we will collaborate here and continue to work towards making the scripts more stable and incorporate more features into it. Towards that goal I am writing this blog. When run, the script will automatically check whether security best practices are implemented in a vSphere environment or not.<br><a id="more"></a><br>The best practices are checked as per the security hardening guide given in <strong>vSphere_6_0_Hardening_Guide_GA_15_Jun_2015.xls</strong> document released by VMware. You can get more details about the guide in <a href="https://blogs.vmware.com/vsphere/2015/06/vsphere-6-hardening-guide-ga-now-available.html" target="_blank" rel="noopener">https://blogs.vmware.com/vsphere/2015/06/vsphere-6-hardening-guide-ga-now-available.html</a>.There are two parts in the script. The first part Get-Security.ps1 is the one which invokes the other functions. The second part and the most important one is SecurityFunctions.ps1. This is the main script with all the required functions which does the actual job. The functions in SecurityFunctions.ps1 file can be divided into three main categories.</p><ol><li>The functions related to HTML report file generation</li><li>Log write function which generates Logs</li><li>The most important one is Get-SecurityFunction which check the environment for security implementation and calls other functions to generate the report</li></ol><p>A portion of the sample report is provided below:</p><p><img src="/images/2015/09/ScreenShot2015-09-29at12.05.11AM.png" alt="vSphere Security Check - Sample 1" class="responsive"></p><p>vSphere Security Check - Sample 1</p><p>This is version 1 of the script. I plan to incorporate the following improvements/enhancements in the scripts.</p><ul><li>Create a front end form where users will be able to choose the ESXi hosts and VMs on which the security test will be done</li><li>Create separate functions for ESXi hosts check and VMs check</li><li>Separate HTML output generation function from Get-SecurityFunction</li><li>Create more proper Verbose and Debug output</li><li>Create more detailed logging</li><li>Take input from credential file instead of at the runtime</li></ul><p>I expect inputs from you so that we can work together to make it better. The script and sample can be availed from <a href="https://github.com/sajaldebnath/vsphere-security-hardening" target="_blank" rel="noopener">https://github.com/sajaldebnath/vsphere-security-hardening</a> .</p>]]></content>
      
      <categories>
          
          <category> Automation and Scripting </category>
          
          <category> PowerCLI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Automation </tag>
            
            <tag> PowerCLI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Basics of Virtualization - Part B</title>
      <link href="/basics-of-virtualization-part-b.html"/>
      <url>/basics-of-virtualization-part-b.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>In earlier <a href="/basics-of-virtualization-part-a.html" title="Basics of Virtualization - Part A">Basics of Virtualization - Part A</a> I talked about what is virtualization. In this post I am going to talk about types of Virtualization and their difference.</p><a id="more"></a><h4 id="Virtualization-Areas"><a href="#Virtualization-Areas" class="headerlink" title="Virtualization Areas:"></a>Virtualization Areas:</h4><p>Nowadays virtualization is applicable to everything. As mentioned in the earlier post:</p><p>Even something as simple as partitioning a hard drive is considered virtualization because you take one drive and partition it to create two separate hard drives. Devices, applications and human users are able to interact with the virtual resource as if it were a real single logical resource.</p><p>So according to the broad areas we can divide the areas as following:</p><p><strong>Storage Virtualization:</strong> the amalgamation of multiple network storage devices into what appears to be a single storage unit.</p><p><strong>Server Virtualization</strong>: the partitioning of a physical server into smaller virtual servers.</p><p><strong>Operating system-level virtualization</strong>: a type of server virtualization technology which works at the operating system (kernel) layer.</p><p><strong>Network Virtualization:</strong> using network resources through a logical segmentation of a single physical network.</p><p><strong>Application Virtualization</strong> : Virtualization at the application level.</p><p>In this posts we will talk more about Server, Operating System level virtualization.</p><h3 id="Server-Virtualization-Types"><a href="#Server-Virtualization-Types" class="headerlink" title="Server Virtualization Types:"></a>Server Virtualization Types:</h3><p><img src="/images/2014/03/Virtualization1.png" alt="Virtual Categories" class="responsive"></p><p><strong>Full Virtualization:</strong></p><p>Where guest OS is not aware about the underlying virtualized hardware. Normal OS can be installed and run on these environments as it is, no change is required.</p><p>Example : VMware vSphere (ESXi), Microsoft Hyper-V, Red Hat KVM etc.</p><p><strong>Para-Virtualization:</strong></p><p>Guest OS is aware of the underlying virtualized hardware. Normal OS can not be installed and run on these environments. The kernel of the Guest OS is updated and made aware of the environment.</p><p>Example : Xen Kernel virtualization (earlier)</p><p><strong>Bare Metal Virtualization (Type 1):</strong></p><ul><li>Installs right on the bare metal and therefore offers higher performance and scalability but runs on a narrower range of hardware.</li><li>Many advanced features for resource management, high availability and security.</li><li>Supports more VMs per physical CPU then hosted products.</li><li>Because there is no overhead from a full host operating system, performance is 83-98% of native. There is a small bit of overhead from the virtualization layer of the hypervisor</li></ul><p><strong>Hosted Virtualization (Type 2):</strong></p><ul><li>Requires a host operating system (Windows/Linux/Mac), installs like an application.</li><li>Virtual machines can use all the hardware resources that the host can see.</li><li>Maximum hardware compatibility as the operating system supplies all the hardware device drivers</li><li>Overhead of a full general-purpose operating system between the virtual machines and the physical hardware results in performance 70-90% of native</li></ul><p>In the later sections I am going to talk about Bare Metal Virtualization as this is the Enterprise level virtualization.</p><p><strong>Hosted vs Bare Metal Hypervisor Pictorial view:</strong></p><p><img src="/images/2014/03/Hosted-vs-Bare-Metal.png" alt="Bare Metal Virtualization"></p><p>In Part C I am going to talk about underlying technology and it actually works.</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>UPDATE::Configuring NTP in VMware ITBM Standard Appliance</title>
      <link href="/update-configuring-ntp-in-vmware-itbm-standard-appliance.html"/>
      <url>/update-configuring-ntp-in-vmware-itbm-standard-appliance.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Guys,</p><p>There is another way. If you follow the previous post there would be a problem J . In ITBM standard appliance by default the following lines are on :<br><a id="more"></a>  </p><pre class=" language-bash"><code class="language-bash">Server 127.0.0.1fudge  127.0.0.1 stratum 10</code></pre><p>so when you check the time with <strong>ntpq –pn</strong> you would see that by default <strong>127.0.0.1</strong> is set up as default time server. Since I could not use any local editor to edit the file and all the three appliance vCAC, Identity and ITBM standard follows the same NTP configuration and server, did the following:</p><ol><li><p>Log in to the vCAC appliance console (you can use putty as well)</p></li><li><p>Made the required changes to the <strong>/etc/ntp.conf</strong> file in vCAC appliance ( you get nice VIM editor there – VI editor with color code )</p></li></ol><pre class=" language-bash"><code class="language-bash">$ <span class="token function">scp</span> /etc/ntp.conf root@<span class="token operator">&lt;</span>itbm appliance<span class="token operator">=</span><span class="token string">""</span> ip<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>:/root$ <span class="token function">ssh</span> <span class="token operator">&lt;</span>itbm appliance<span class="token operator">=</span><span class="token string">""</span> ip<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>$ <span class="token function">cp</span> /etc/ntp.conf /etc/ntp.conf.orig$ <span class="token function">mv</span> /root/ntp.conf  /etc/ntp.conf$ <span class="token function">chmod</span> 640 /etc/ntp.conf$ <span class="token function">chown</span> root:ntp /etc/ntp.conf$ <span class="token function">service</span> ntp restart$ ntpq –pn<span class="token operator">&lt;</span>/itbm<span class="token operator">></span><span class="token operator">&lt;</span>/itbm<span class="token operator">></span></code></pre><p>At this time if you see time drift is too high, you can force sync</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">service</span> ntp stop$ ntpd –gq$ <span class="token function">service</span> ntp start</code></pre><p>Hope this helps.</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Configuring NTP in VMware ITBM Standard Appliance (1.0.1)</title>
      <link href="/configuring-ntp-in-vmware-itbm-standard-appliance-1-0-1.html"/>
      <url>/configuring-ntp-in-vmware-itbm-standard-appliance-1-0-1.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>I need to configure a NTP server in ITBM Standard Appliance. This post covers the know how of the process.</p><a id="more"></a><h4 id="Reason"><a href="#Reason" class="headerlink" title="Reason:"></a>Reason:</h4><p>There is a time drift between ITBM appliance and vCAC &amp; Identity appliance, so ITBM registration with vCAC fails. [ vCAC &amp; Identity appliance are configured to use NTP server]</p><h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h4><p>Need to update NTP configuration in ITBM appliance. Now like other appliances ITBM standard appliance does not provide any Time server setting in default <strong>https://&lt;IP or FQDN:5480</strong> location. Option provided in documentation is below:</p><p><strong>Configure NTP Server</strong></p><p>You can configure the Network Time Protocol (NTP) server for periodic time synchronization. NTP is an industry standard and ensures accurate timekeeping in your guest.</p><p><strong>Procedure</strong></p><ol><li><p>Log in to the IT Business Management Standard Edition virtual machine console.</p></li><li><p>Navigate to <strong>/etc/ntp.conf</strong> and add the command.</p></li></ol><pre class=" language-bash"><code class="language-bash">    server %my-ntp-server%    fudge %my-ntp-server% stratum int</code></pre><p><strong>server %my-ntp-server%</strong> is the IP address or full qualified domain name of the NTP server. stratum int specifies the stratum number assigned to the driver in the range 0 to 15, both inclusive. This number overrides the default stratum number assigned by the driver.</p><ol start="3"><li><p>Check the status of NTP server by running the chkconfig -a ntp command.</p></li><li><p>If the service is running, restart the service. If the service is not started, start the service by running the</p></li></ol><p><code class="language-bash"><br>    service ntp start<br></code></p><ol start="5"><li><p>Disable the time synchronization by VMware Tools by running the <strong>/usr/bin/vmware-toolbox-cmd timesync disable</strong> command.</p></li><li><p>To verify the status of NTP server, run the <strong>ntpq -pn</strong> command.</p></li></ol><p><strong>This is a standard procedure for any *nix based system. What surprised me was there was no apparent editor in this appliance. I could not find </strong>vi /pico/nano<strong> any of the standard text editors. So I had to take the following route (easiest route):</strong></p><pre class=" language-bash"><code class="language-bash">    $ <span class="token function">cp</span> /etc/ntp.conf /etc/ntp.conf.orig    $ <span class="token keyword">echo</span> “server myserver.com” <span class="token operator">>></span> /etc/ntp.conf    $ <span class="token keyword">echo</span> “fudge myserver stratum int 1” <span class="token operator">>></span> /etc/ntp.conf    $ <span class="token function">chkconfig</span> –a ntp    $ <span class="token function">service</span> ntp start    $ ntpq -pn</code></pre><p>May be something that I am overlooking as it is really unbelievable that appliance (SuSe) will come up without any text editor.</p><p>The above will help you if you faced the same issue. Let me know if I am missing something or you have other ways.</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Basics of Virtualization - Part A</title>
      <link href="/basics-of-virtualization-part-a.html"/>
      <url>/basics-of-virtualization-part-a.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>In recent past in my interaction with couple of college students and other technology professionals I could see that there is some confusion about virtualization and related technologies. Though many knows the tools and end options but again confused by the technology behind. So I decided to write a series of blog posts providing theoretical details about virtualization and cloud computing.<br><a id="more"></a><br>What it is and how it works. Hope this would help others to clear some confusion at the basic level, specially my young friends in college and freshers in IT industry.</p><h4 id="What-is-Virtualization"><a href="#What-is-Virtualization" class="headerlink" title="What is Virtualization??"></a>What is Virtualization??</h4><p>Virtualization is a broad term that refers to the abstraction of resources across many aspects of computing.</p><p>In computing, virtualization means to create a <a href="http://www.webopedia.com/TERM/V/virtual.html" target="_blank" rel="noopener">virtual</a> version of a <a href="http://www.webopedia.com/TERM/V/device.html" target="_blank" rel="noopener">device</a> or resource, such as a <a href="http://www.webopedia.com/TERM/V/server.html" target="_blank" rel="noopener">server</a>, <a href="http://www.webopedia.com/TERM/V/storage_device.html" target="_blank" rel="noopener">storage device</a>, <a href="http://www.webopedia.com/TERM/V/network.html" target="_blank" rel="noopener">network</a> or even an <a href="http://www.webopedia.com/TERM/V/operating_system.html" target="_blank" rel="noopener">operating system</a> where the framework divides the resource into one or more <a href="http://www.webopedia.com/TERM/V/execute.html" target="_blank" rel="noopener">execution</a> environments.</p><p> Even something as simple as partitioning a hard drive is considered virtualization because you take one drive and <a href="http://www.webopedia.com/TERM/V/partition.html" target="_blank" rel="noopener">partition</a> it to create two separate hard drives. Devices, applications and human users are able to interact with the virtual resource as if it were a real single <a href="http://www.webopedia.com/TERM/V/logical.html" target="_blank" rel="noopener">logical</a> resource.</p><h4 id="History-of-Virtualization"><a href="#History-of-Virtualization" class="headerlink" title="History of Virtualization:"></a>History of Virtualization:</h4><p>IBM first introduced virtualization around 1960’s in their S/360 mainframe systems. For a long time it was limited to mainframe systems only.</p><p>In the late 1990’s VMware introduced virtualization in x86 environment and popularized the Virtualization industry that we see today.</p><p>The success of VMware and popularization of virtualization was because of its application in x86 server segment. x86 servers are much much cheaper than mainframe or its counterpart of RISC systems. Also as time grew more and more powerful x86 servers were developed leading to the scope and success of x86 virtualization. For example consider the following scenario:</p><p>A file server or normal mail server was created years back which required 2 to 4 single cpu and 4 to 8 GB of RAM. In the older days a single x86 server would require to power this requirement. But today we have servers with 4 sockets with 12 cores each (essentially a single server with 48 physical cores with each core of say 2.4 Ghz processing power) and Physical Memory of a server (RAM) can be say 2TB. As easily can be seen that this server clearly can provide power to many many such servers.</p><p>So the following two facts led to the virtualization revolution</p><ul><li><p>Cheaper x86 server availability</p></li><li><p>More and more powerful servers making them suitable to host many servers in a single server</p></li></ul><p>There are many other benefits of virtualization which I will discuss later on this post, but initially these two factors increased the adoption.</p><h4 id="Why-Virtualization"><a href="#Why-Virtualization" class="headerlink" title="Why Virtualization??"></a>Why Virtualization??</h4><p>Let’s have a look at the reasons why someone would try virtualization:</p><p><img src="/images/2014/02/PIC1.png" alt="CPU and Memory Utilization" class="responsive"></p><ul><li>Traditionally the 90% of the applications run on the servers were either designed long back when the servers did not have this much power or does not require much CPU cycles to run. So if you look at the CPU utilization of most of the traditional servers it falls below say 10% or 20% of the total capacity (except those applications requiring more processing power. Everything in a datacenter costs money and this way the costly CPU power of most of the servers are underutilized. </li><li>A heterogeneous environment is always hard to maintain </li><li>In today’s environment business continuity is most important factor in designing datacenters </li><li>There are many disadvantages and challenges in traditional disaster recovery which is solved in virtualized environment </li><li>Virtualization provides benefits like better reliability and control which leads to new SLA’s like 5 nines (99.999% ) availability.</li></ul><p>Virtualization directly or indirectly solves the above problems. But mainly virtualization became popular because of the consolidation of many servers in one server and the saving achieved due to the fact. </p><p>In Part-B of this series I would cover the different types of virtualization and how they are different from each other. </p><p>In Part-C, I would cover the more advanced and in-depth topics of how actually virtualization works on a physical Hardware. Till then ponder over the below question? If I give a shutdown command in any OS it will power down the physical hardware. Now in virtualized environment also we run many OS and when a command is given in any such OS it is essentially run on the physical CPU. So ideally it should power down the entire environment. Which it does not. Why and how? This is the main question and defines how different virtualization technologies handles this question and how they are different. I am going to answer this interesting question in Part-C. Till then…….</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>How to build a home lab without dedicated servers</title>
      <link href="/how-to-build-a-home-lab-without-dedicated-servers.html"/>
      <url>/how-to-build-a-home-lab-without-dedicated-servers.html</url>
      <content type="html"><![CDATA[<h4 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h4><p>Hello Everyone, this is my first blog.Before I go ahead and talk about any other technologies I would like to talk about my Home Lab setup. Like many others I do not have dedicated servers at my home so I work around the limitations and get my lab going. By no means it is a great lab, but this will let you feel the technology, get your hands dirty on things that you would not be able to otherwise.<br><a id="more"></a></p><p><strong>Physical Systems:</strong> I have two systems to build my lab:</p><ol><li>A whitebox (desktop system) - Processor - i7 2600 Quad core 3.4 Ghz, RAM- 16 GB, 1 TB internal SATA disk, Windows 8 x86_64 bit OS. </li><li>A Dell Latitude E6320 Laptop - Processor - i5 2520 Quad Core 2.5 Ghz, RAM- 8 GB, 256 GB internal SATA Disk, Windows 7 x86_64 bit OS. </li></ol><p>I have installed VMware Workstation 9.0.0 build-812388 on both the systems. I have a ZyXEL router (with WIFI capabilities) for the network. The desktop system connects to it over LAN and the laptop over WAN. This router also acts as a DHCP server where I provided reserved IP’s bind-ed to MAC of a particular server, so that every time lab reboots or the hosting servers reboot they will always have the same IP’s. </p><p>Now to make the whole setup work and act a single entity I made the following setup in Workstation: </p><ol><li>Always create the virtual machines under “Shared VM’s” category so that I can connect to them from another system </li><li>While creating the virtual machines configure the network to be “Bridged” connected. So that they will be tied to the physical adapter and will be on network beyond the boundaries of one physical host. </li><li>Connect the VMware Workstation instances as <strong>connect to Server</strong> mode</li></ol><p><img src="/images/2013/06/Server1.png" alt="Setup 1" class="responsive"></p><p><img src="/images/2013/06/Server2.png" alt="Setup 2" class="responsive"></p><p>This makes the lab system ready to GO. After connecting one Workstation from another my entire Lab setup looks like below setup:</p><p><img src="/images/2013/06/Pic9.png" alt="Setup 3" class="responsive"></p><p>This was the underlying setup for my lab system.<br>I have taken two systems and enough RAM to support my lab (normally the testings I do RAM is the limiting factor not CPU). But for normal testing and small scale LAB setup a single system with 8 GB RAM is also sufficient.<br>Earlier I had built a well working vCenter Environment / vCloud Director setup in a single 8 GB laptop.*<br>Also I strongly suggest <a href="http://www.labguides.com/autolab/" target="_blank" rel="noopener">Autolab</a> for those who wants to have a quick lab setup. I used it before my certifications.</p><p>This is the starting - in the coming blogs I plan to write up on Virtualization Technologies(mainly VMware), Linux and Scripting/Programming.<strong> </strong>Please provide me your feedback.**</p>]]></content>
      
      <categories>
          
          <category> General </category>
          
      </categories>
      
      
        <tags>
            
            <tag> General </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
